'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.9168
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Ds_Rp"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Ds_Rp
    Inherits Global.System.Data.DataSet
    
    Private tableRp_SummaryExtraWork As Rp_SummaryExtraWorkDataTable
    
    Private tableRp_Pm_KalaUse As Rp_Pm_KalaUseDataTable
    
    Private tableRp_MojodiAnbar As Rp_MojodiAnbarDataTable
    
    Private tableRp_GroupEibForm As Rp_GroupEibFormDataTable
    
    Private tableRp_NafarSatGroup As Rp_NafarSatGroupDataTable
    
    Private tableRp_WorkFormMaster1 As Rp_WorkFormMaster1DataTable
    
    Private tableRp_WorkForm As Rp_WorkFormDataTable
    
    Private tableRp_VahedEibForm As Rp_VahedEibFormDataTable
    
    Private tableRp_EibTypeEibForm As Rp_EibTypeEibFormDataTable
    
    Private tableRp_PostEibform As Rp_PostEibformDataTable
    
    Private tableRp_CompareGroupEibForm As Rp_CompareGroupEibFormDataTable
    
    Private tableRp_WorkFormWorkDis As Rp_WorkFormWorkDisDataTable
    
    Private tableRp_NafarSatProject As Rp_NafarSatProjectDataTable
    
    Private tableRp_KholaseWorkFormTmp As Rp_KholaseWorkFormTmpDataTable
    
    Private tableRp_SaghfeKar As Rp_SaghfeKarDataTable
    
    Private tableRp_SaghfKarTotal As Rp_SaghfKarTotalDataTable
    
    Private tableRp_WorkFormMasterWithTEMP As Rp_WorkFormMasterWithTEMPDataTable
    
    Private tableRp_WorkFormMaster As Rp_WorkFormMasterDataTable
    
    Private tableRp_KholaseWorkForm As Rp_KholaseWorkFormDataTable
    
    Private tableRp_ExtraWork As Rp_ExtraWorkDataTable
    
    Private tableRp_WorkFormMasterSearch As Rp_WorkFormMasterSearchDataTable
    
    Private tableRp_MultiEzafeKar As Rp_MultiEzafeKarDataTable
    
    Private tableRp_Rele As Rp_ReleDataTable
    
    Private tableRp_TranseGhodrat As Rp_TranseGhodratDataTable
    
    Private tableRp_Barghgir As Rp_BarghgirDataTable
    
    Private tableRp_Sexioner As Rp_SexionerDataTable
    
    Private tableRp_Breaker As Rp_BreakerDataTable
    
    Private tableRp_Teranse As Rp_TeranseDataTable
    
    Private tableRp_Tajhiz As Rp_TajhizDataTable
    
    Private tableRp_Cable As Rp_CableDataTable
    
    Private tableRp_EibForm2 As Rp_EibForm2DataTable
    
    Private tablePm_PostPm As Pm_PostPmDataTable
    
    Private tableRp_TajhizPm As Rp_TajhizPmDataTable
    
    Private tableRp_PmCancle As Rp_PmCancleDataTable
    
    Private tablePm_Sms As Pm_SmsDataTable
    
    Private tablerp_eibform As rp_eibformDataTable
    
    Private tableRp_MonthPm As Rp_MonthPmDataTable
    
    Private tableRp_WorkForm_Kargozini As Rp_WorkForm_KargoziniDataTable
    
    Private tableTimeCard_WorkForm As TimeCard_WorkFormDataTable
    
    Private tableRp_HazineCodeEzafeKar As Rp_HazineCodeEzafeKarDataTable
    
    Private tableRp_SummaryExtraWorkFanavaran As Rp_SummaryExtraWorkFanavaranDataTable
    
    Private tableRp_ExtraWorkAzarakhsh As Rp_ExtraWorkAzarakhshDataTable
    
    Private tableRp_ExtraWorkFanavaran As Rp_ExtraWorkFanavaranDataTable
    
    Private tableRp_SummaryStatusstatementExtraWork As Rp_SummaryStatusstatementExtraWorkDataTable
    
    Private tableRp_ConfirmedMultiEzafeKarStatusStatement As Rp_ConfirmedMultiEzafeKarStatusStatementDataTable
    
    Private tableRp_Pishnahad As Rp_PishnahadDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Rp_SummaryExtraWork")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SummaryExtraWorkDataTable(ds.Tables("Rp_SummaryExtraWork")))
            End If
            If (Not (ds.Tables("Rp_Pm_KalaUse")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_Pm_KalaUseDataTable(ds.Tables("Rp_Pm_KalaUse")))
            End If
            If (Not (ds.Tables("Rp_MojodiAnbar")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_MojodiAnbarDataTable(ds.Tables("Rp_MojodiAnbar")))
            End If
            If (Not (ds.Tables("Rp_GroupEibForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_GroupEibFormDataTable(ds.Tables("Rp_GroupEibForm")))
            End If
            If (Not (ds.Tables("Rp_NafarSatGroup")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_NafarSatGroupDataTable(ds.Tables("Rp_NafarSatGroup")))
            End If
            If (Not (ds.Tables("Rp_WorkFormMaster1")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormMaster1DataTable(ds.Tables("Rp_WorkFormMaster1")))
            End If
            If (Not (ds.Tables("Rp_WorkForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormDataTable(ds.Tables("Rp_WorkForm")))
            End If
            If (Not (ds.Tables("Rp_VahedEibForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_VahedEibFormDataTable(ds.Tables("Rp_VahedEibForm")))
            End If
            If (Not (ds.Tables("Rp_EibTypeEibForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_EibTypeEibFormDataTable(ds.Tables("Rp_EibTypeEibForm")))
            End If
            If (Not (ds.Tables("Rp_PostEibform")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_PostEibformDataTable(ds.Tables("Rp_PostEibform")))
            End If
            If (Not (ds.Tables("Rp_CompareGroupEibForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_CompareGroupEibFormDataTable(ds.Tables("Rp_CompareGroupEibForm")))
            End If
            If (Not (ds.Tables("Rp_WorkFormWorkDis")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormWorkDisDataTable(ds.Tables("Rp_WorkFormWorkDis")))
            End If
            If (Not (ds.Tables("Rp_NafarSatProject")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_NafarSatProjectDataTable(ds.Tables("Rp_NafarSatProject")))
            End If
            If (Not (ds.Tables("Rp_KholaseWorkFormTmp")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_KholaseWorkFormTmpDataTable(ds.Tables("Rp_KholaseWorkFormTmp")))
            End If
            If (Not (ds.Tables("Rp_SaghfeKar")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SaghfeKarDataTable(ds.Tables("Rp_SaghfeKar")))
            End If
            If (Not (ds.Tables("Rp_SaghfKarTotal")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SaghfKarTotalDataTable(ds.Tables("Rp_SaghfKarTotal")))
            End If
            If (Not (ds.Tables("Rp_WorkFormMasterWithTEMP")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormMasterWithTEMPDataTable(ds.Tables("Rp_WorkFormMasterWithTEMP")))
            End If
            If (Not (ds.Tables("Rp_WorkFormMaster")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormMasterDataTable(ds.Tables("Rp_WorkFormMaster")))
            End If
            If (Not (ds.Tables("Rp_KholaseWorkForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_KholaseWorkFormDataTable(ds.Tables("Rp_KholaseWorkForm")))
            End If
            If (Not (ds.Tables("Rp_ExtraWork")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ExtraWorkDataTable(ds.Tables("Rp_ExtraWork")))
            End If
            If (Not (ds.Tables("Rp_WorkFormMasterSearch")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormMasterSearchDataTable(ds.Tables("Rp_WorkFormMasterSearch")))
            End If
            If (Not (ds.Tables("Rp_MultiEzafeKar")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_MultiEzafeKarDataTable(ds.Tables("Rp_MultiEzafeKar")))
            End If
            If (Not (ds.Tables("Rp_Rele")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ReleDataTable(ds.Tables("Rp_Rele")))
            End If
            If (Not (ds.Tables("Rp_TranseGhodrat")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_TranseGhodratDataTable(ds.Tables("Rp_TranseGhodrat")))
            End If
            If (Not (ds.Tables("Rp_Barghgir")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_BarghgirDataTable(ds.Tables("Rp_Barghgir")))
            End If
            If (Not (ds.Tables("Rp_Sexioner")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SexionerDataTable(ds.Tables("Rp_Sexioner")))
            End If
            If (Not (ds.Tables("Rp_Breaker")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_BreakerDataTable(ds.Tables("Rp_Breaker")))
            End If
            If (Not (ds.Tables("Rp_Teranse")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_TeranseDataTable(ds.Tables("Rp_Teranse")))
            End If
            If (Not (ds.Tables("Rp_Tajhiz")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_TajhizDataTable(ds.Tables("Rp_Tajhiz")))
            End If
            If (Not (ds.Tables("Rp_Cable")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_CableDataTable(ds.Tables("Rp_Cable")))
            End If
            If (Not (ds.Tables("Rp_EibForm2")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_EibForm2DataTable(ds.Tables("Rp_EibForm2")))
            End If
            If (Not (ds.Tables("Pm_PostPm")) Is Nothing) Then
                MyBase.Tables.Add(New Pm_PostPmDataTable(ds.Tables("Pm_PostPm")))
            End If
            If (Not (ds.Tables("Rp_TajhizPm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_TajhizPmDataTable(ds.Tables("Rp_TajhizPm")))
            End If
            If (Not (ds.Tables("Rp_PmCancle")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_PmCancleDataTable(ds.Tables("Rp_PmCancle")))
            End If
            If (Not (ds.Tables("Pm_Sms")) Is Nothing) Then
                MyBase.Tables.Add(New Pm_SmsDataTable(ds.Tables("Pm_Sms")))
            End If
            If (Not (ds.Tables("rp_eibform")) Is Nothing) Then
                MyBase.Tables.Add(New rp_eibformDataTable(ds.Tables("rp_eibform")))
            End If
            If (Not (ds.Tables("Rp_MonthPm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_MonthPmDataTable(ds.Tables("Rp_MonthPm")))
            End If
            If (Not (ds.Tables("Rp_WorkForm_Kargozini")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkForm_KargoziniDataTable(ds.Tables("Rp_WorkForm_Kargozini")))
            End If
            If (Not (ds.Tables("TimeCard_WorkForm")) Is Nothing) Then
                MyBase.Tables.Add(New TimeCard_WorkFormDataTable(ds.Tables("TimeCard_WorkForm")))
            End If
            If (Not (ds.Tables("Rp_HazineCodeEzafeKar")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_HazineCodeEzafeKarDataTable(ds.Tables("Rp_HazineCodeEzafeKar")))
            End If
            If (Not (ds.Tables("Rp_SummaryExtraWorkFanavaran")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SummaryExtraWorkFanavaranDataTable(ds.Tables("Rp_SummaryExtraWorkFanavaran")))
            End If
            If (Not (ds.Tables("Rp_ExtraWorkAzarakhsh")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ExtraWorkAzarakhshDataTable(ds.Tables("Rp_ExtraWorkAzarakhsh")))
            End If
            If (Not (ds.Tables("Rp_ExtraWorkFanavaran")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ExtraWorkFanavaranDataTable(ds.Tables("Rp_ExtraWorkFanavaran")))
            End If
            If (Not (ds.Tables("Rp_SummaryStatusstatementExtraWork")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SummaryStatusstatementExtraWorkDataTable(ds.Tables("Rp_SummaryStatusstatementExtraWork")))
            End If
            If (Not (ds.Tables("Rp_ConfirmedMultiEzafeKarStatusStatement")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ConfirmedMultiEzafeKarStatusStatementDataTable(ds.Tables("Rp_ConfirmedMultiEzafeKarStatusStatement")))
            End If
            If (Not (ds.Tables("Rp_Pishnahad")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_PishnahadDataTable(ds.Tables("Rp_Pishnahad")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_SummaryExtraWork() As Rp_SummaryExtraWorkDataTable
        Get
            Return Me.tableRp_SummaryExtraWork
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Pm_KalaUse() As Rp_Pm_KalaUseDataTable
        Get
            Return Me.tableRp_Pm_KalaUse
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_MojodiAnbar() As Rp_MojodiAnbarDataTable
        Get
            Return Me.tableRp_MojodiAnbar
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_GroupEibForm() As Rp_GroupEibFormDataTable
        Get
            Return Me.tableRp_GroupEibForm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_NafarSatGroup() As Rp_NafarSatGroupDataTable
        Get
            Return Me.tableRp_NafarSatGroup
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_WorkFormMaster1() As Rp_WorkFormMaster1DataTable
        Get
            Return Me.tableRp_WorkFormMaster1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_WorkForm() As Rp_WorkFormDataTable
        Get
            Return Me.tableRp_WorkForm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_VahedEibForm() As Rp_VahedEibFormDataTable
        Get
            Return Me.tableRp_VahedEibForm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_EibTypeEibForm() As Rp_EibTypeEibFormDataTable
        Get
            Return Me.tableRp_EibTypeEibForm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_PostEibform() As Rp_PostEibformDataTable
        Get
            Return Me.tableRp_PostEibform
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_CompareGroupEibForm() As Rp_CompareGroupEibFormDataTable
        Get
            Return Me.tableRp_CompareGroupEibForm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_WorkFormWorkDis() As Rp_WorkFormWorkDisDataTable
        Get
            Return Me.tableRp_WorkFormWorkDis
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_NafarSatProject() As Rp_NafarSatProjectDataTable
        Get
            Return Me.tableRp_NafarSatProject
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_KholaseWorkFormTmp() As Rp_KholaseWorkFormTmpDataTable
        Get
            Return Me.tableRp_KholaseWorkFormTmp
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_SaghfeKar() As Rp_SaghfeKarDataTable
        Get
            Return Me.tableRp_SaghfeKar
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_SaghfKarTotal() As Rp_SaghfKarTotalDataTable
        Get
            Return Me.tableRp_SaghfKarTotal
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_WorkFormMasterWithTEMP() As Rp_WorkFormMasterWithTEMPDataTable
        Get
            Return Me.tableRp_WorkFormMasterWithTEMP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_WorkFormMaster() As Rp_WorkFormMasterDataTable
        Get
            Return Me.tableRp_WorkFormMaster
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_KholaseWorkForm() As Rp_KholaseWorkFormDataTable
        Get
            Return Me.tableRp_KholaseWorkForm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_ExtraWork() As Rp_ExtraWorkDataTable
        Get
            Return Me.tableRp_ExtraWork
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_WorkFormMasterSearch() As Rp_WorkFormMasterSearchDataTable
        Get
            Return Me.tableRp_WorkFormMasterSearch
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_MultiEzafeKar() As Rp_MultiEzafeKarDataTable
        Get
            Return Me.tableRp_MultiEzafeKar
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Rele() As Rp_ReleDataTable
        Get
            Return Me.tableRp_Rele
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_TranseGhodrat() As Rp_TranseGhodratDataTable
        Get
            Return Me.tableRp_TranseGhodrat
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Barghgir() As Rp_BarghgirDataTable
        Get
            Return Me.tableRp_Barghgir
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Sexioner() As Rp_SexionerDataTable
        Get
            Return Me.tableRp_Sexioner
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Breaker() As Rp_BreakerDataTable
        Get
            Return Me.tableRp_Breaker
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Teranse() As Rp_TeranseDataTable
        Get
            Return Me.tableRp_Teranse
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Tajhiz() As Rp_TajhizDataTable
        Get
            Return Me.tableRp_Tajhiz
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Cable() As Rp_CableDataTable
        Get
            Return Me.tableRp_Cable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_EibForm2() As Rp_EibForm2DataTable
        Get
            Return Me.tableRp_EibForm2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Pm_PostPm() As Pm_PostPmDataTable
        Get
            Return Me.tablePm_PostPm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_TajhizPm() As Rp_TajhizPmDataTable
        Get
            Return Me.tableRp_TajhizPm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_PmCancle() As Rp_PmCancleDataTable
        Get
            Return Me.tableRp_PmCancle
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Pm_Sms() As Pm_SmsDataTable
        Get
            Return Me.tablePm_Sms
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property rp_eibform() As rp_eibformDataTable
        Get
            Return Me.tablerp_eibform
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_MonthPm() As Rp_MonthPmDataTable
        Get
            Return Me.tableRp_MonthPm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_WorkForm_Kargozini() As Rp_WorkForm_KargoziniDataTable
        Get
            Return Me.tableRp_WorkForm_Kargozini
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TimeCard_WorkForm() As TimeCard_WorkFormDataTable
        Get
            Return Me.tableTimeCard_WorkForm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_HazineCodeEzafeKar() As Rp_HazineCodeEzafeKarDataTable
        Get
            Return Me.tableRp_HazineCodeEzafeKar
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_SummaryExtraWorkFanavaran() As Rp_SummaryExtraWorkFanavaranDataTable
        Get
            Return Me.tableRp_SummaryExtraWorkFanavaran
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_ExtraWorkAzarakhsh() As Rp_ExtraWorkAzarakhshDataTable
        Get
            Return Me.tableRp_ExtraWorkAzarakhsh
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_ExtraWorkFanavaran() As Rp_ExtraWorkFanavaranDataTable
        Get
            Return Me.tableRp_ExtraWorkFanavaran
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_SummaryStatusstatementExtraWork() As Rp_SummaryStatusstatementExtraWorkDataTable
        Get
            Return Me.tableRp_SummaryStatusstatementExtraWork
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_ConfirmedMultiEzafeKarStatusStatement() As Rp_ConfirmedMultiEzafeKarStatusStatementDataTable
        Get
            Return Me.tableRp_ConfirmedMultiEzafeKarStatusStatement
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rp_Pishnahad() As Rp_PishnahadDataTable
        Get
            Return Me.tableRp_Pishnahad
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Ds_Rp = CType(MyBase.Clone,Ds_Rp)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Rp_SummaryExtraWork")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SummaryExtraWorkDataTable(ds.Tables("Rp_SummaryExtraWork")))
            End If
            If (Not (ds.Tables("Rp_Pm_KalaUse")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_Pm_KalaUseDataTable(ds.Tables("Rp_Pm_KalaUse")))
            End If
            If (Not (ds.Tables("Rp_MojodiAnbar")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_MojodiAnbarDataTable(ds.Tables("Rp_MojodiAnbar")))
            End If
            If (Not (ds.Tables("Rp_GroupEibForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_GroupEibFormDataTable(ds.Tables("Rp_GroupEibForm")))
            End If
            If (Not (ds.Tables("Rp_NafarSatGroup")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_NafarSatGroupDataTable(ds.Tables("Rp_NafarSatGroup")))
            End If
            If (Not (ds.Tables("Rp_WorkFormMaster1")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormMaster1DataTable(ds.Tables("Rp_WorkFormMaster1")))
            End If
            If (Not (ds.Tables("Rp_WorkForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormDataTable(ds.Tables("Rp_WorkForm")))
            End If
            If (Not (ds.Tables("Rp_VahedEibForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_VahedEibFormDataTable(ds.Tables("Rp_VahedEibForm")))
            End If
            If (Not (ds.Tables("Rp_EibTypeEibForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_EibTypeEibFormDataTable(ds.Tables("Rp_EibTypeEibForm")))
            End If
            If (Not (ds.Tables("Rp_PostEibform")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_PostEibformDataTable(ds.Tables("Rp_PostEibform")))
            End If
            If (Not (ds.Tables("Rp_CompareGroupEibForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_CompareGroupEibFormDataTable(ds.Tables("Rp_CompareGroupEibForm")))
            End If
            If (Not (ds.Tables("Rp_WorkFormWorkDis")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormWorkDisDataTable(ds.Tables("Rp_WorkFormWorkDis")))
            End If
            If (Not (ds.Tables("Rp_NafarSatProject")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_NafarSatProjectDataTable(ds.Tables("Rp_NafarSatProject")))
            End If
            If (Not (ds.Tables("Rp_KholaseWorkFormTmp")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_KholaseWorkFormTmpDataTable(ds.Tables("Rp_KholaseWorkFormTmp")))
            End If
            If (Not (ds.Tables("Rp_SaghfeKar")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SaghfeKarDataTable(ds.Tables("Rp_SaghfeKar")))
            End If
            If (Not (ds.Tables("Rp_SaghfKarTotal")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SaghfKarTotalDataTable(ds.Tables("Rp_SaghfKarTotal")))
            End If
            If (Not (ds.Tables("Rp_WorkFormMasterWithTEMP")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormMasterWithTEMPDataTable(ds.Tables("Rp_WorkFormMasterWithTEMP")))
            End If
            If (Not (ds.Tables("Rp_WorkFormMaster")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormMasterDataTable(ds.Tables("Rp_WorkFormMaster")))
            End If
            If (Not (ds.Tables("Rp_KholaseWorkForm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_KholaseWorkFormDataTable(ds.Tables("Rp_KholaseWorkForm")))
            End If
            If (Not (ds.Tables("Rp_ExtraWork")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ExtraWorkDataTable(ds.Tables("Rp_ExtraWork")))
            End If
            If (Not (ds.Tables("Rp_WorkFormMasterSearch")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkFormMasterSearchDataTable(ds.Tables("Rp_WorkFormMasterSearch")))
            End If
            If (Not (ds.Tables("Rp_MultiEzafeKar")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_MultiEzafeKarDataTable(ds.Tables("Rp_MultiEzafeKar")))
            End If
            If (Not (ds.Tables("Rp_Rele")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ReleDataTable(ds.Tables("Rp_Rele")))
            End If
            If (Not (ds.Tables("Rp_TranseGhodrat")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_TranseGhodratDataTable(ds.Tables("Rp_TranseGhodrat")))
            End If
            If (Not (ds.Tables("Rp_Barghgir")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_BarghgirDataTable(ds.Tables("Rp_Barghgir")))
            End If
            If (Not (ds.Tables("Rp_Sexioner")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SexionerDataTable(ds.Tables("Rp_Sexioner")))
            End If
            If (Not (ds.Tables("Rp_Breaker")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_BreakerDataTable(ds.Tables("Rp_Breaker")))
            End If
            If (Not (ds.Tables("Rp_Teranse")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_TeranseDataTable(ds.Tables("Rp_Teranse")))
            End If
            If (Not (ds.Tables("Rp_Tajhiz")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_TajhizDataTable(ds.Tables("Rp_Tajhiz")))
            End If
            If (Not (ds.Tables("Rp_Cable")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_CableDataTable(ds.Tables("Rp_Cable")))
            End If
            If (Not (ds.Tables("Rp_EibForm2")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_EibForm2DataTable(ds.Tables("Rp_EibForm2")))
            End If
            If (Not (ds.Tables("Pm_PostPm")) Is Nothing) Then
                MyBase.Tables.Add(New Pm_PostPmDataTable(ds.Tables("Pm_PostPm")))
            End If
            If (Not (ds.Tables("Rp_TajhizPm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_TajhizPmDataTable(ds.Tables("Rp_TajhizPm")))
            End If
            If (Not (ds.Tables("Rp_PmCancle")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_PmCancleDataTable(ds.Tables("Rp_PmCancle")))
            End If
            If (Not (ds.Tables("Pm_Sms")) Is Nothing) Then
                MyBase.Tables.Add(New Pm_SmsDataTable(ds.Tables("Pm_Sms")))
            End If
            If (Not (ds.Tables("rp_eibform")) Is Nothing) Then
                MyBase.Tables.Add(New rp_eibformDataTable(ds.Tables("rp_eibform")))
            End If
            If (Not (ds.Tables("Rp_MonthPm")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_MonthPmDataTable(ds.Tables("Rp_MonthPm")))
            End If
            If (Not (ds.Tables("Rp_WorkForm_Kargozini")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_WorkForm_KargoziniDataTable(ds.Tables("Rp_WorkForm_Kargozini")))
            End If
            If (Not (ds.Tables("TimeCard_WorkForm")) Is Nothing) Then
                MyBase.Tables.Add(New TimeCard_WorkFormDataTable(ds.Tables("TimeCard_WorkForm")))
            End If
            If (Not (ds.Tables("Rp_HazineCodeEzafeKar")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_HazineCodeEzafeKarDataTable(ds.Tables("Rp_HazineCodeEzafeKar")))
            End If
            If (Not (ds.Tables("Rp_SummaryExtraWorkFanavaran")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SummaryExtraWorkFanavaranDataTable(ds.Tables("Rp_SummaryExtraWorkFanavaran")))
            End If
            If (Not (ds.Tables("Rp_ExtraWorkAzarakhsh")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ExtraWorkAzarakhshDataTable(ds.Tables("Rp_ExtraWorkAzarakhsh")))
            End If
            If (Not (ds.Tables("Rp_ExtraWorkFanavaran")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ExtraWorkFanavaranDataTable(ds.Tables("Rp_ExtraWorkFanavaran")))
            End If
            If (Not (ds.Tables("Rp_SummaryStatusstatementExtraWork")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_SummaryStatusstatementExtraWorkDataTable(ds.Tables("Rp_SummaryStatusstatementExtraWork")))
            End If
            If (Not (ds.Tables("Rp_ConfirmedMultiEzafeKarStatusStatement")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_ConfirmedMultiEzafeKarStatusStatementDataTable(ds.Tables("Rp_ConfirmedMultiEzafeKarStatusStatement")))
            End If
            If (Not (ds.Tables("Rp_Pishnahad")) Is Nothing) Then
                MyBase.Tables.Add(New Rp_PishnahadDataTable(ds.Tables("Rp_Pishnahad")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableRp_SummaryExtraWork = CType(MyBase.Tables("Rp_SummaryExtraWork"),Rp_SummaryExtraWorkDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_SummaryExtraWork) Is Nothing) Then
                Me.tableRp_SummaryExtraWork.InitVars
            End If
        End If
        Me.tableRp_Pm_KalaUse = CType(MyBase.Tables("Rp_Pm_KalaUse"),Rp_Pm_KalaUseDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Pm_KalaUse) Is Nothing) Then
                Me.tableRp_Pm_KalaUse.InitVars
            End If
        End If
        Me.tableRp_MojodiAnbar = CType(MyBase.Tables("Rp_MojodiAnbar"),Rp_MojodiAnbarDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_MojodiAnbar) Is Nothing) Then
                Me.tableRp_MojodiAnbar.InitVars
            End If
        End If
        Me.tableRp_GroupEibForm = CType(MyBase.Tables("Rp_GroupEibForm"),Rp_GroupEibFormDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_GroupEibForm) Is Nothing) Then
                Me.tableRp_GroupEibForm.InitVars
            End If
        End If
        Me.tableRp_NafarSatGroup = CType(MyBase.Tables("Rp_NafarSatGroup"),Rp_NafarSatGroupDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_NafarSatGroup) Is Nothing) Then
                Me.tableRp_NafarSatGroup.InitVars
            End If
        End If
        Me.tableRp_WorkFormMaster1 = CType(MyBase.Tables("Rp_WorkFormMaster1"),Rp_WorkFormMaster1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_WorkFormMaster1) Is Nothing) Then
                Me.tableRp_WorkFormMaster1.InitVars
            End If
        End If
        Me.tableRp_WorkForm = CType(MyBase.Tables("Rp_WorkForm"),Rp_WorkFormDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_WorkForm) Is Nothing) Then
                Me.tableRp_WorkForm.InitVars
            End If
        End If
        Me.tableRp_VahedEibForm = CType(MyBase.Tables("Rp_VahedEibForm"),Rp_VahedEibFormDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_VahedEibForm) Is Nothing) Then
                Me.tableRp_VahedEibForm.InitVars
            End If
        End If
        Me.tableRp_EibTypeEibForm = CType(MyBase.Tables("Rp_EibTypeEibForm"),Rp_EibTypeEibFormDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_EibTypeEibForm) Is Nothing) Then
                Me.tableRp_EibTypeEibForm.InitVars
            End If
        End If
        Me.tableRp_PostEibform = CType(MyBase.Tables("Rp_PostEibform"),Rp_PostEibformDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_PostEibform) Is Nothing) Then
                Me.tableRp_PostEibform.InitVars
            End If
        End If
        Me.tableRp_CompareGroupEibForm = CType(MyBase.Tables("Rp_CompareGroupEibForm"),Rp_CompareGroupEibFormDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_CompareGroupEibForm) Is Nothing) Then
                Me.tableRp_CompareGroupEibForm.InitVars
            End If
        End If
        Me.tableRp_WorkFormWorkDis = CType(MyBase.Tables("Rp_WorkFormWorkDis"),Rp_WorkFormWorkDisDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_WorkFormWorkDis) Is Nothing) Then
                Me.tableRp_WorkFormWorkDis.InitVars
            End If
        End If
        Me.tableRp_NafarSatProject = CType(MyBase.Tables("Rp_NafarSatProject"),Rp_NafarSatProjectDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_NafarSatProject) Is Nothing) Then
                Me.tableRp_NafarSatProject.InitVars
            End If
        End If
        Me.tableRp_KholaseWorkFormTmp = CType(MyBase.Tables("Rp_KholaseWorkFormTmp"),Rp_KholaseWorkFormTmpDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_KholaseWorkFormTmp) Is Nothing) Then
                Me.tableRp_KholaseWorkFormTmp.InitVars
            End If
        End If
        Me.tableRp_SaghfeKar = CType(MyBase.Tables("Rp_SaghfeKar"),Rp_SaghfeKarDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_SaghfeKar) Is Nothing) Then
                Me.tableRp_SaghfeKar.InitVars
            End If
        End If
        Me.tableRp_SaghfKarTotal = CType(MyBase.Tables("Rp_SaghfKarTotal"),Rp_SaghfKarTotalDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_SaghfKarTotal) Is Nothing) Then
                Me.tableRp_SaghfKarTotal.InitVars
            End If
        End If
        Me.tableRp_WorkFormMasterWithTEMP = CType(MyBase.Tables("Rp_WorkFormMasterWithTEMP"),Rp_WorkFormMasterWithTEMPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_WorkFormMasterWithTEMP) Is Nothing) Then
                Me.tableRp_WorkFormMasterWithTEMP.InitVars
            End If
        End If
        Me.tableRp_WorkFormMaster = CType(MyBase.Tables("Rp_WorkFormMaster"),Rp_WorkFormMasterDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_WorkFormMaster) Is Nothing) Then
                Me.tableRp_WorkFormMaster.InitVars
            End If
        End If
        Me.tableRp_KholaseWorkForm = CType(MyBase.Tables("Rp_KholaseWorkForm"),Rp_KholaseWorkFormDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_KholaseWorkForm) Is Nothing) Then
                Me.tableRp_KholaseWorkForm.InitVars
            End If
        End If
        Me.tableRp_ExtraWork = CType(MyBase.Tables("Rp_ExtraWork"),Rp_ExtraWorkDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_ExtraWork) Is Nothing) Then
                Me.tableRp_ExtraWork.InitVars
            End If
        End If
        Me.tableRp_WorkFormMasterSearch = CType(MyBase.Tables("Rp_WorkFormMasterSearch"),Rp_WorkFormMasterSearchDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_WorkFormMasterSearch) Is Nothing) Then
                Me.tableRp_WorkFormMasterSearch.InitVars
            End If
        End If
        Me.tableRp_MultiEzafeKar = CType(MyBase.Tables("Rp_MultiEzafeKar"),Rp_MultiEzafeKarDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_MultiEzafeKar) Is Nothing) Then
                Me.tableRp_MultiEzafeKar.InitVars
            End If
        End If
        Me.tableRp_Rele = CType(MyBase.Tables("Rp_Rele"),Rp_ReleDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Rele) Is Nothing) Then
                Me.tableRp_Rele.InitVars
            End If
        End If
        Me.tableRp_TranseGhodrat = CType(MyBase.Tables("Rp_TranseGhodrat"),Rp_TranseGhodratDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_TranseGhodrat) Is Nothing) Then
                Me.tableRp_TranseGhodrat.InitVars
            End If
        End If
        Me.tableRp_Barghgir = CType(MyBase.Tables("Rp_Barghgir"),Rp_BarghgirDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Barghgir) Is Nothing) Then
                Me.tableRp_Barghgir.InitVars
            End If
        End If
        Me.tableRp_Sexioner = CType(MyBase.Tables("Rp_Sexioner"),Rp_SexionerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Sexioner) Is Nothing) Then
                Me.tableRp_Sexioner.InitVars
            End If
        End If
        Me.tableRp_Breaker = CType(MyBase.Tables("Rp_Breaker"),Rp_BreakerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Breaker) Is Nothing) Then
                Me.tableRp_Breaker.InitVars
            End If
        End If
        Me.tableRp_Teranse = CType(MyBase.Tables("Rp_Teranse"),Rp_TeranseDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Teranse) Is Nothing) Then
                Me.tableRp_Teranse.InitVars
            End If
        End If
        Me.tableRp_Tajhiz = CType(MyBase.Tables("Rp_Tajhiz"),Rp_TajhizDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Tajhiz) Is Nothing) Then
                Me.tableRp_Tajhiz.InitVars
            End If
        End If
        Me.tableRp_Cable = CType(MyBase.Tables("Rp_Cable"),Rp_CableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Cable) Is Nothing) Then
                Me.tableRp_Cable.InitVars
            End If
        End If
        Me.tableRp_EibForm2 = CType(MyBase.Tables("Rp_EibForm2"),Rp_EibForm2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_EibForm2) Is Nothing) Then
                Me.tableRp_EibForm2.InitVars
            End If
        End If
        Me.tablePm_PostPm = CType(MyBase.Tables("Pm_PostPm"),Pm_PostPmDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePm_PostPm) Is Nothing) Then
                Me.tablePm_PostPm.InitVars
            End If
        End If
        Me.tableRp_TajhizPm = CType(MyBase.Tables("Rp_TajhizPm"),Rp_TajhizPmDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_TajhizPm) Is Nothing) Then
                Me.tableRp_TajhizPm.InitVars
            End If
        End If
        Me.tableRp_PmCancle = CType(MyBase.Tables("Rp_PmCancle"),Rp_PmCancleDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_PmCancle) Is Nothing) Then
                Me.tableRp_PmCancle.InitVars
            End If
        End If
        Me.tablePm_Sms = CType(MyBase.Tables("Pm_Sms"),Pm_SmsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePm_Sms) Is Nothing) Then
                Me.tablePm_Sms.InitVars
            End If
        End If
        Me.tablerp_eibform = CType(MyBase.Tables("rp_eibform"),rp_eibformDataTable)
        If (initTable = true) Then
            If (Not (Me.tablerp_eibform) Is Nothing) Then
                Me.tablerp_eibform.InitVars
            End If
        End If
        Me.tableRp_MonthPm = CType(MyBase.Tables("Rp_MonthPm"),Rp_MonthPmDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_MonthPm) Is Nothing) Then
                Me.tableRp_MonthPm.InitVars
            End If
        End If
        Me.tableRp_WorkForm_Kargozini = CType(MyBase.Tables("Rp_WorkForm_Kargozini"),Rp_WorkForm_KargoziniDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_WorkForm_Kargozini) Is Nothing) Then
                Me.tableRp_WorkForm_Kargozini.InitVars
            End If
        End If
        Me.tableTimeCard_WorkForm = CType(MyBase.Tables("TimeCard_WorkForm"),TimeCard_WorkFormDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTimeCard_WorkForm) Is Nothing) Then
                Me.tableTimeCard_WorkForm.InitVars
            End If
        End If
        Me.tableRp_HazineCodeEzafeKar = CType(MyBase.Tables("Rp_HazineCodeEzafeKar"),Rp_HazineCodeEzafeKarDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_HazineCodeEzafeKar) Is Nothing) Then
                Me.tableRp_HazineCodeEzafeKar.InitVars
            End If
        End If
        Me.tableRp_SummaryExtraWorkFanavaran = CType(MyBase.Tables("Rp_SummaryExtraWorkFanavaran"),Rp_SummaryExtraWorkFanavaranDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_SummaryExtraWorkFanavaran) Is Nothing) Then
                Me.tableRp_SummaryExtraWorkFanavaran.InitVars
            End If
        End If
        Me.tableRp_ExtraWorkAzarakhsh = CType(MyBase.Tables("Rp_ExtraWorkAzarakhsh"),Rp_ExtraWorkAzarakhshDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_ExtraWorkAzarakhsh) Is Nothing) Then
                Me.tableRp_ExtraWorkAzarakhsh.InitVars
            End If
        End If
        Me.tableRp_ExtraWorkFanavaran = CType(MyBase.Tables("Rp_ExtraWorkFanavaran"),Rp_ExtraWorkFanavaranDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_ExtraWorkFanavaran) Is Nothing) Then
                Me.tableRp_ExtraWorkFanavaran.InitVars
            End If
        End If
        Me.tableRp_SummaryStatusstatementExtraWork = CType(MyBase.Tables("Rp_SummaryStatusstatementExtraWork"),Rp_SummaryStatusstatementExtraWorkDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_SummaryStatusstatementExtraWork) Is Nothing) Then
                Me.tableRp_SummaryStatusstatementExtraWork.InitVars
            End If
        End If
        Me.tableRp_ConfirmedMultiEzafeKarStatusStatement = CType(MyBase.Tables("Rp_ConfirmedMultiEzafeKarStatusStatement"),Rp_ConfirmedMultiEzafeKarStatusStatementDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_ConfirmedMultiEzafeKarStatusStatement) Is Nothing) Then
                Me.tableRp_ConfirmedMultiEzafeKarStatusStatement.InitVars
            End If
        End If
        Me.tableRp_Pishnahad = CType(MyBase.Tables("Rp_Pishnahad"),Rp_PishnahadDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRp_Pishnahad) Is Nothing) Then
                Me.tableRp_Pishnahad.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "Ds_Rp"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Ds_Rp.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableRp_SummaryExtraWork = New Rp_SummaryExtraWorkDataTable
        MyBase.Tables.Add(Me.tableRp_SummaryExtraWork)
        Me.tableRp_Pm_KalaUse = New Rp_Pm_KalaUseDataTable
        MyBase.Tables.Add(Me.tableRp_Pm_KalaUse)
        Me.tableRp_MojodiAnbar = New Rp_MojodiAnbarDataTable
        MyBase.Tables.Add(Me.tableRp_MojodiAnbar)
        Me.tableRp_GroupEibForm = New Rp_GroupEibFormDataTable
        MyBase.Tables.Add(Me.tableRp_GroupEibForm)
        Me.tableRp_NafarSatGroup = New Rp_NafarSatGroupDataTable
        MyBase.Tables.Add(Me.tableRp_NafarSatGroup)
        Me.tableRp_WorkFormMaster1 = New Rp_WorkFormMaster1DataTable
        MyBase.Tables.Add(Me.tableRp_WorkFormMaster1)
        Me.tableRp_WorkForm = New Rp_WorkFormDataTable
        MyBase.Tables.Add(Me.tableRp_WorkForm)
        Me.tableRp_VahedEibForm = New Rp_VahedEibFormDataTable
        MyBase.Tables.Add(Me.tableRp_VahedEibForm)
        Me.tableRp_EibTypeEibForm = New Rp_EibTypeEibFormDataTable
        MyBase.Tables.Add(Me.tableRp_EibTypeEibForm)
        Me.tableRp_PostEibform = New Rp_PostEibformDataTable
        MyBase.Tables.Add(Me.tableRp_PostEibform)
        Me.tableRp_CompareGroupEibForm = New Rp_CompareGroupEibFormDataTable
        MyBase.Tables.Add(Me.tableRp_CompareGroupEibForm)
        Me.tableRp_WorkFormWorkDis = New Rp_WorkFormWorkDisDataTable
        MyBase.Tables.Add(Me.tableRp_WorkFormWorkDis)
        Me.tableRp_NafarSatProject = New Rp_NafarSatProjectDataTable
        MyBase.Tables.Add(Me.tableRp_NafarSatProject)
        Me.tableRp_KholaseWorkFormTmp = New Rp_KholaseWorkFormTmpDataTable
        MyBase.Tables.Add(Me.tableRp_KholaseWorkFormTmp)
        Me.tableRp_SaghfeKar = New Rp_SaghfeKarDataTable
        MyBase.Tables.Add(Me.tableRp_SaghfeKar)
        Me.tableRp_SaghfKarTotal = New Rp_SaghfKarTotalDataTable
        MyBase.Tables.Add(Me.tableRp_SaghfKarTotal)
        Me.tableRp_WorkFormMasterWithTEMP = New Rp_WorkFormMasterWithTEMPDataTable
        MyBase.Tables.Add(Me.tableRp_WorkFormMasterWithTEMP)
        Me.tableRp_WorkFormMaster = New Rp_WorkFormMasterDataTable
        MyBase.Tables.Add(Me.tableRp_WorkFormMaster)
        Me.tableRp_KholaseWorkForm = New Rp_KholaseWorkFormDataTable
        MyBase.Tables.Add(Me.tableRp_KholaseWorkForm)
        Me.tableRp_ExtraWork = New Rp_ExtraWorkDataTable
        MyBase.Tables.Add(Me.tableRp_ExtraWork)
        Me.tableRp_WorkFormMasterSearch = New Rp_WorkFormMasterSearchDataTable
        MyBase.Tables.Add(Me.tableRp_WorkFormMasterSearch)
        Me.tableRp_MultiEzafeKar = New Rp_MultiEzafeKarDataTable
        MyBase.Tables.Add(Me.tableRp_MultiEzafeKar)
        Me.tableRp_Rele = New Rp_ReleDataTable
        MyBase.Tables.Add(Me.tableRp_Rele)
        Me.tableRp_TranseGhodrat = New Rp_TranseGhodratDataTable
        MyBase.Tables.Add(Me.tableRp_TranseGhodrat)
        Me.tableRp_Barghgir = New Rp_BarghgirDataTable
        MyBase.Tables.Add(Me.tableRp_Barghgir)
        Me.tableRp_Sexioner = New Rp_SexionerDataTable
        MyBase.Tables.Add(Me.tableRp_Sexioner)
        Me.tableRp_Breaker = New Rp_BreakerDataTable
        MyBase.Tables.Add(Me.tableRp_Breaker)
        Me.tableRp_Teranse = New Rp_TeranseDataTable
        MyBase.Tables.Add(Me.tableRp_Teranse)
        Me.tableRp_Tajhiz = New Rp_TajhizDataTable
        MyBase.Tables.Add(Me.tableRp_Tajhiz)
        Me.tableRp_Cable = New Rp_CableDataTable
        MyBase.Tables.Add(Me.tableRp_Cable)
        Me.tableRp_EibForm2 = New Rp_EibForm2DataTable
        MyBase.Tables.Add(Me.tableRp_EibForm2)
        Me.tablePm_PostPm = New Pm_PostPmDataTable
        MyBase.Tables.Add(Me.tablePm_PostPm)
        Me.tableRp_TajhizPm = New Rp_TajhizPmDataTable
        MyBase.Tables.Add(Me.tableRp_TajhizPm)
        Me.tableRp_PmCancle = New Rp_PmCancleDataTable
        MyBase.Tables.Add(Me.tableRp_PmCancle)
        Me.tablePm_Sms = New Pm_SmsDataTable
        MyBase.Tables.Add(Me.tablePm_Sms)
        Me.tablerp_eibform = New rp_eibformDataTable
        MyBase.Tables.Add(Me.tablerp_eibform)
        Me.tableRp_MonthPm = New Rp_MonthPmDataTable
        MyBase.Tables.Add(Me.tableRp_MonthPm)
        Me.tableRp_WorkForm_Kargozini = New Rp_WorkForm_KargoziniDataTable
        MyBase.Tables.Add(Me.tableRp_WorkForm_Kargozini)
        Me.tableTimeCard_WorkForm = New TimeCard_WorkFormDataTable
        MyBase.Tables.Add(Me.tableTimeCard_WorkForm)
        Me.tableRp_HazineCodeEzafeKar = New Rp_HazineCodeEzafeKarDataTable
        MyBase.Tables.Add(Me.tableRp_HazineCodeEzafeKar)
        Me.tableRp_SummaryExtraWorkFanavaran = New Rp_SummaryExtraWorkFanavaranDataTable
        MyBase.Tables.Add(Me.tableRp_SummaryExtraWorkFanavaran)
        Me.tableRp_ExtraWorkAzarakhsh = New Rp_ExtraWorkAzarakhshDataTable
        MyBase.Tables.Add(Me.tableRp_ExtraWorkAzarakhsh)
        Me.tableRp_ExtraWorkFanavaran = New Rp_ExtraWorkFanavaranDataTable
        MyBase.Tables.Add(Me.tableRp_ExtraWorkFanavaran)
        Me.tableRp_SummaryStatusstatementExtraWork = New Rp_SummaryStatusstatementExtraWorkDataTable
        MyBase.Tables.Add(Me.tableRp_SummaryStatusstatementExtraWork)
        Me.tableRp_ConfirmedMultiEzafeKarStatusStatement = New Rp_ConfirmedMultiEzafeKarStatusStatementDataTable
        MyBase.Tables.Add(Me.tableRp_ConfirmedMultiEzafeKarStatusStatement)
        Me.tableRp_Pishnahad = New Rp_PishnahadDataTable
        MyBase.Tables.Add(Me.tableRp_Pishnahad)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_SummaryExtraWork() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Pm_KalaUse() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_MojodiAnbar() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_GroupEibForm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_NafarSatGroup() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_WorkFormMaster1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_WorkForm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_VahedEibForm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_EibTypeEibForm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_PostEibform() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_CompareGroupEibForm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_WorkFormWorkDis() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_NafarSatProject() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_KholaseWorkFormTmp() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_SaghfeKar() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_SaghfKarTotal() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_WorkFormMasterWithTEMP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_WorkFormMaster() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_KholaseWorkForm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_ExtraWork() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_WorkFormMasterSearch() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_MultiEzafeKar() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Rele() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_TranseGhodrat() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Barghgir() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Sexioner() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Breaker() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Teranse() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Tajhiz() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Cable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_EibForm2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePm_PostPm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_TajhizPm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_PmCancle() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePm_Sms() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializerp_eibform() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_MonthPm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_WorkForm_Kargozini() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTimeCard_WorkForm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_HazineCodeEzafeKar() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_SummaryExtraWorkFanavaran() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_ExtraWorkAzarakhsh() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_ExtraWorkFanavaran() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_SummaryStatusstatementExtraWork() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_ConfirmedMultiEzafeKarStatusStatement() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRp_Pishnahad() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Ds_Rp = New Ds_Rp
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub Rp_SummaryExtraWorkRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_SummaryExtraWorkRowChangeEvent)
    
    Public Delegate Sub Rp_Pm_KalaUseRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_Pm_KalaUseRowChangeEvent)
    
    Public Delegate Sub Rp_MojodiAnbarRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_MojodiAnbarRowChangeEvent)
    
    Public Delegate Sub Rp_GroupEibFormRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_GroupEibFormRowChangeEvent)
    
    Public Delegate Sub Rp_NafarSatGroupRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_NafarSatGroupRowChangeEvent)
    
    Public Delegate Sub Rp_WorkFormMaster1RowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_WorkFormMaster1RowChangeEvent)
    
    Public Delegate Sub Rp_WorkFormRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_WorkFormRowChangeEvent)
    
    Public Delegate Sub Rp_VahedEibFormRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_VahedEibFormRowChangeEvent)
    
    Public Delegate Sub Rp_EibTypeEibFormRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_EibTypeEibFormRowChangeEvent)
    
    Public Delegate Sub Rp_PostEibformRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_PostEibformRowChangeEvent)
    
    Public Delegate Sub Rp_CompareGroupEibFormRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_CompareGroupEibFormRowChangeEvent)
    
    Public Delegate Sub Rp_WorkFormWorkDisRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_WorkFormWorkDisRowChangeEvent)
    
    Public Delegate Sub Rp_NafarSatProjectRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_NafarSatProjectRowChangeEvent)
    
    Public Delegate Sub Rp_KholaseWorkFormTmpRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_KholaseWorkFormTmpRowChangeEvent)
    
    Public Delegate Sub Rp_SaghfeKarRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_SaghfeKarRowChangeEvent)
    
    Public Delegate Sub Rp_SaghfKarTotalRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_SaghfKarTotalRowChangeEvent)
    
    Public Delegate Sub Rp_WorkFormMasterWithTEMPRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_WorkFormMasterWithTEMPRowChangeEvent)
    
    Public Delegate Sub Rp_WorkFormMasterRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_WorkFormMasterRowChangeEvent)
    
    Public Delegate Sub Rp_KholaseWorkFormRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_KholaseWorkFormRowChangeEvent)
    
    Public Delegate Sub Rp_ExtraWorkRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_ExtraWorkRowChangeEvent)
    
    Public Delegate Sub Rp_WorkFormMasterSearchRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_WorkFormMasterSearchRowChangeEvent)
    
    Public Delegate Sub Rp_MultiEzafeKarRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_MultiEzafeKarRowChangeEvent)
    
    Public Delegate Sub Rp_ReleRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_ReleRowChangeEvent)
    
    Public Delegate Sub Rp_TranseGhodratRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_TranseGhodratRowChangeEvent)
    
    Public Delegate Sub Rp_BarghgirRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_BarghgirRowChangeEvent)
    
    Public Delegate Sub Rp_SexionerRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_SexionerRowChangeEvent)
    
    Public Delegate Sub Rp_BreakerRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_BreakerRowChangeEvent)
    
    Public Delegate Sub Rp_TeranseRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_TeranseRowChangeEvent)
    
    Public Delegate Sub Rp_TajhizRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_TajhizRowChangeEvent)
    
    Public Delegate Sub Rp_CableRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_CableRowChangeEvent)
    
    Public Delegate Sub Rp_EibForm2RowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_EibForm2RowChangeEvent)
    
    Public Delegate Sub Pm_PostPmRowChangeEventHandler(ByVal sender As Object, ByVal e As Pm_PostPmRowChangeEvent)
    
    Public Delegate Sub Rp_TajhizPmRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_TajhizPmRowChangeEvent)
    
    Public Delegate Sub Rp_PmCancleRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_PmCancleRowChangeEvent)
    
    Public Delegate Sub Pm_SmsRowChangeEventHandler(ByVal sender As Object, ByVal e As Pm_SmsRowChangeEvent)
    
    Public Delegate Sub rp_eibformRowChangeEventHandler(ByVal sender As Object, ByVal e As rp_eibformRowChangeEvent)
    
    Public Delegate Sub Rp_MonthPmRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_MonthPmRowChangeEvent)
    
    Public Delegate Sub Rp_WorkForm_KargoziniRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_WorkForm_KargoziniRowChangeEvent)
    
    Public Delegate Sub TimeCard_WorkFormRowChangeEventHandler(ByVal sender As Object, ByVal e As TimeCard_WorkFormRowChangeEvent)
    
    Public Delegate Sub Rp_HazineCodeEzafeKarRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_HazineCodeEzafeKarRowChangeEvent)
    
    Public Delegate Sub Rp_SummaryExtraWorkFanavaranRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_SummaryExtraWorkFanavaranRowChangeEvent)
    
    Public Delegate Sub Rp_ExtraWorkAzarakhshRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_ExtraWorkAzarakhshRowChangeEvent)
    
    Public Delegate Sub Rp_ExtraWorkFanavaranRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_ExtraWorkFanavaranRowChangeEvent)
    
    Public Delegate Sub Rp_SummaryStatusstatementExtraWorkRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_SummaryStatusstatementExtraWorkRowChangeEvent)
    
    Public Delegate Sub Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEvent)
    
    Public Delegate Sub Rp_PishnahadRowChangeEventHandler(ByVal sender As Object, ByVal e As Rp_PishnahadRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_SummaryExtraWorkDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_SummaryExtraWorkRow)
        
        Private columnکد_شناسایی As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnجمع_اضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_فرم_کار As Global.System.Data.DataColumn
        
        Private columnSrl_Ashkhas As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_ستاد As Global.System.Data.DataColumn
        
        Private columnجمع_مازاد_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnSrl_Pm_Company As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_SummaryExtraWork"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_شناساییColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_شناسایی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_اضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_AshkhasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Ashkhas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ستادColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_ستاد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_مازاد_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_مازاد_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_Company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_SummaryExtraWorkRow
            Get
                Return CType(Me.Rows(index),Rp_SummaryExtraWorkRow)
            End Get
        End Property
        
        Public Event Rp_SummaryExtraWorkRowChanging As Rp_SummaryExtraWorkRowChangeEventHandler
        
        Public Event Rp_SummaryExtraWorkRowChanged As Rp_SummaryExtraWorkRowChangeEventHandler
        
        Public Event Rp_SummaryExtraWorkRowDeleting As Rp_SummaryExtraWorkRowChangeEventHandler
        
        Public Event Rp_SummaryExtraWorkRowDeleted As Rp_SummaryExtraWorkRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_SummaryExtraWorkRow(ByVal row As Rp_SummaryExtraWorkRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_SummaryExtraWorkRow(ByVal کد_شناسایی As Long, ByVal نام As String, ByVal جمع_اضافه_کار_تردد As String, ByVal اضافه_کار_فرم_کار As String, ByVal Srl_Ashkhas As Integer, ByVal اضافه_کار_ستاد As String, ByVal جمع_مازاد_اضافه_کار As String, ByVal Srl_Pm_Company As Integer) As Rp_SummaryExtraWorkRow
            Dim rowRp_SummaryExtraWorkRow As Rp_SummaryExtraWorkRow = CType(Me.NewRow,Rp_SummaryExtraWorkRow)
            Dim columnValuesArray() As Object = New Object() {کد_شناسایی, نام, جمع_اضافه_کار_تردد, اضافه_کار_فرم_کار, Srl_Ashkhas, اضافه_کار_ستاد, جمع_مازاد_اضافه_کار, Srl_Pm_Company}
            rowRp_SummaryExtraWorkRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_SummaryExtraWorkRow)
            Return rowRp_SummaryExtraWorkRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_SummaryExtraWorkDataTable = CType(MyBase.Clone,Rp_SummaryExtraWorkDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_SummaryExtraWorkDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnکد_شناسایی = MyBase.Columns("کد شناسایی")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnجمع_اضافه_کار_تردد = MyBase.Columns("جمع اضافه کار تردد")
            Me.columnاضافه_کار_فرم_کار = MyBase.Columns("اضافه کار فرم کار")
            Me.columnSrl_Ashkhas = MyBase.Columns("Srl_Ashkhas")
            Me.columnاضافه_کار_ستاد = MyBase.Columns("اضافه کار ستاد")
            Me.columnجمع_مازاد_اضافه_کار = MyBase.Columns("جمع مازاد اضافه کار")
            Me.columnSrl_Pm_Company = MyBase.Columns("Srl_Pm_Company")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnکد_شناسایی = New Global.System.Data.DataColumn("کد شناسایی", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_شناسایی)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnجمع_اضافه_کار_تردد = New Global.System.Data.DataColumn("جمع اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_اضافه_کار_تردد)
            Me.columnاضافه_کار_فرم_کار = New Global.System.Data.DataColumn("اضافه کار فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_فرم_کار)
            Me.columnSrl_Ashkhas = New Global.System.Data.DataColumn("Srl_Ashkhas", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Ashkhas)
            Me.columnاضافه_کار_ستاد = New Global.System.Data.DataColumn("اضافه کار ستاد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_ستاد)
            Me.columnجمع_مازاد_اضافه_کار = New Global.System.Data.DataColumn("جمع مازاد اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_مازاد_اضافه_کار)
            Me.columnSrl_Pm_Company = New Global.System.Data.DataColumn("Srl_Pm_Company", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_Company)
            Me.columnنام.ReadOnly = true
            Me.columnنام.MaxLength = 103
            Me.columnجمع_اضافه_کار_تردد.ReadOnly = true
            Me.columnجمع_اضافه_کار_تردد.MaxLength = 17
            Me.columnاضافه_کار_فرم_کار.ReadOnly = true
            Me.columnاضافه_کار_فرم_کار.MaxLength = 17
            Me.columnSrl_Ashkhas.ReadOnly = true
            Me.columnاضافه_کار_ستاد.ReadOnly = true
            Me.columnاضافه_کار_ستاد.MaxLength = 61
            Me.columnجمع_مازاد_اضافه_کار.ReadOnly = true
            Me.columnجمع_مازاد_اضافه_کار.MaxLength = 17
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_SummaryExtraWorkRow() As Rp_SummaryExtraWorkRow
            Return CType(Me.NewRow,Rp_SummaryExtraWorkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_SummaryExtraWorkRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_SummaryExtraWorkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_SummaryExtraWorkRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryExtraWorkRowChanged(Me, New Rp_SummaryExtraWorkRowChangeEvent(CType(e.Row,Rp_SummaryExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_SummaryExtraWorkRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryExtraWorkRowChanging(Me, New Rp_SummaryExtraWorkRowChangeEvent(CType(e.Row,Rp_SummaryExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_SummaryExtraWorkRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryExtraWorkRowDeleted(Me, New Rp_SummaryExtraWorkRowChangeEvent(CType(e.Row,Rp_SummaryExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_SummaryExtraWorkRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryExtraWorkRowDeleting(Me, New Rp_SummaryExtraWorkRowChangeEvent(CType(e.Row,Rp_SummaryExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_SummaryExtraWorkRow(ByVal row As Rp_SummaryExtraWorkRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_SummaryExtraWorkDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_Pm_KalaUseDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_Pm_KalaUseRow)
        
        Private columnنام_کالا As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnنام_گروه As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnتعداد As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Pm_KalaUse"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_کالاColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_کالا
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_گروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعدادColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعداد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_Pm_KalaUseRow
            Get
                Return CType(Me.Rows(index),Rp_Pm_KalaUseRow)
            End Get
        End Property
        
        Public Event Rp_Pm_KalaUseRowChanging As Rp_Pm_KalaUseRowChangeEventHandler
        
        Public Event Rp_Pm_KalaUseRowChanged As Rp_Pm_KalaUseRowChangeEventHandler
        
        Public Event Rp_Pm_KalaUseRowDeleting As Rp_Pm_KalaUseRowChangeEventHandler
        
        Public Event Rp_Pm_KalaUseRowDeleted As Rp_Pm_KalaUseRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_Pm_KalaUseRow(ByVal row As Rp_Pm_KalaUseRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_Pm_KalaUseRow(ByVal نام_کالا As String, ByVal نام_پست As String, ByVal نام_گروه As String, ByVal شماره_فرم_کار As String, ByVal تاریخ As String, ByVal تعداد As Double) As Rp_Pm_KalaUseRow
            Dim rowRp_Pm_KalaUseRow As Rp_Pm_KalaUseRow = CType(Me.NewRow,Rp_Pm_KalaUseRow)
            Dim columnValuesArray() As Object = New Object() {نام_کالا, نام_پست, نام_گروه, شماره_فرم_کار, تاریخ, تعداد}
            rowRp_Pm_KalaUseRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_Pm_KalaUseRow)
            Return rowRp_Pm_KalaUseRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_Pm_KalaUseDataTable = CType(MyBase.Clone,Rp_Pm_KalaUseDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_Pm_KalaUseDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnنام_کالا = MyBase.Columns("نام کالا")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnنام_گروه = MyBase.Columns("نام گروه")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnتعداد = MyBase.Columns("تعداد")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnنام_کالا = New Global.System.Data.DataColumn("نام کالا", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_کالا)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnنام_گروه = New Global.System.Data.DataColumn("نام گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_گروه)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnتعداد = New Global.System.Data.DataColumn("تعداد", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعداد)
            Me.columnنام_کالا.MaxLength = 500
            Me.columnنام_پست.MaxLength = 50
            Me.columnنام_گروه.MaxLength = 50
            Me.columnشماره_فرم_کار.MaxLength = 500
            Me.columnتاریخ.MaxLength = 11
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_Pm_KalaUseRow() As Rp_Pm_KalaUseRow
            Return CType(Me.NewRow,Rp_Pm_KalaUseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_Pm_KalaUseRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_Pm_KalaUseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_Pm_KalaUseRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_Pm_KalaUseRowChanged(Me, New Rp_Pm_KalaUseRowChangeEvent(CType(e.Row,Rp_Pm_KalaUseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_Pm_KalaUseRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_Pm_KalaUseRowChanging(Me, New Rp_Pm_KalaUseRowChangeEvent(CType(e.Row,Rp_Pm_KalaUseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_Pm_KalaUseRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_Pm_KalaUseRowDeleted(Me, New Rp_Pm_KalaUseRowChangeEvent(CType(e.Row,Rp_Pm_KalaUseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_Pm_KalaUseRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_Pm_KalaUseRowDeleting(Me, New Rp_Pm_KalaUseRowChangeEvent(CType(e.Row,Rp_Pm_KalaUseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_Pm_KalaUseRow(ByVal row As Rp_Pm_KalaUseRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_Pm_KalaUseDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_MojodiAnbarDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_MojodiAnbarRow)
        
        Private columnSrl_Kala As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnموجودی_انبار As Global.System.Data.DataColumn
        
        Private columnمیزان_مصرف As Global.System.Data.DataColumn
        
        Private columnتعداد As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_MojodiAnbar"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_KalaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Kala
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property موجودی_انبارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnموجودی_انبار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property میزان_مصرفColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمیزان_مصرف
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعدادColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعداد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_MojodiAnbarRow
            Get
                Return CType(Me.Rows(index),Rp_MojodiAnbarRow)
            End Get
        End Property
        
        Public Event Rp_MojodiAnbarRowChanging As Rp_MojodiAnbarRowChangeEventHandler
        
        Public Event Rp_MojodiAnbarRowChanged As Rp_MojodiAnbarRowChangeEventHandler
        
        Public Event Rp_MojodiAnbarRowDeleting As Rp_MojodiAnbarRowChangeEventHandler
        
        Public Event Rp_MojodiAnbarRowDeleted As Rp_MojodiAnbarRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_MojodiAnbarRow(ByVal row As Rp_MojodiAnbarRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_MojodiAnbarRow(ByVal Srl_Kala As Integer, ByVal نام As String, ByVal موجودی_انبار As Double, ByVal میزان_مصرف As Double, ByVal تعداد As Double) As Rp_MojodiAnbarRow
            Dim rowRp_MojodiAnbarRow As Rp_MojodiAnbarRow = CType(Me.NewRow,Rp_MojodiAnbarRow)
            Dim columnValuesArray() As Object = New Object() {Srl_Kala, نام, موجودی_انبار, میزان_مصرف, تعداد}
            rowRp_MojodiAnbarRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_MojodiAnbarRow)
            Return rowRp_MojodiAnbarRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_MojodiAnbarDataTable = CType(MyBase.Clone,Rp_MojodiAnbarDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_MojodiAnbarDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl_Kala = MyBase.Columns("Srl_Kala")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnموجودی_انبار = MyBase.Columns("موجودی انبار")
            Me.columnمیزان_مصرف = MyBase.Columns("میزان مصرف")
            Me.columnتعداد = MyBase.Columns("تعداد")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl_Kala = New Global.System.Data.DataColumn("Srl_Kala", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Kala)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnموجودی_انبار = New Global.System.Data.DataColumn("موجودی انبار", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnموجودی_انبار)
            Me.columnمیزان_مصرف = New Global.System.Data.DataColumn("میزان مصرف", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمیزان_مصرف)
            Me.columnتعداد = New Global.System.Data.DataColumn("تعداد", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعداد)
            Me.columnSrl_Kala.ReadOnly = true
            Me.columnنام.ReadOnly = true
            Me.columnنام.MaxLength = 500
            Me.columnموجودی_انبار.ReadOnly = true
            Me.columnمیزان_مصرف.ReadOnly = true
            Me.columnتعداد.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_MojodiAnbarRow() As Rp_MojodiAnbarRow
            Return CType(Me.NewRow,Rp_MojodiAnbarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_MojodiAnbarRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_MojodiAnbarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_MojodiAnbarRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_MojodiAnbarRowChanged(Me, New Rp_MojodiAnbarRowChangeEvent(CType(e.Row,Rp_MojodiAnbarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_MojodiAnbarRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_MojodiAnbarRowChanging(Me, New Rp_MojodiAnbarRowChangeEvent(CType(e.Row,Rp_MojodiAnbarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_MojodiAnbarRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_MojodiAnbarRowDeleted(Me, New Rp_MojodiAnbarRowChangeEvent(CType(e.Row,Rp_MojodiAnbarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_MojodiAnbarRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_MojodiAnbarRowDeleting(Me, New Rp_MojodiAnbarRowChangeEvent(CType(e.Row,Rp_MojodiAnbarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_MojodiAnbarRow(ByVal row As Rp_MojodiAnbarRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_MojodiAnbarDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_GroupEibFormDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_GroupEibFormRow)
        
        Private columnSrl_Group As Global.System.Data.DataColumn
        
        Private columnرفع_نشده As Global.System.Data.DataColumn
        
        Private columnرفع_شده As Global.System.Data.DataColumn
        
        Private columnکل As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_GroupEibForm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_GroupEibFormRow
            Get
                Return CType(Me.Rows(index),Rp_GroupEibFormRow)
            End Get
        End Property
        
        Public Event Rp_GroupEibFormRowChanging As Rp_GroupEibFormRowChangeEventHandler
        
        Public Event Rp_GroupEibFormRowChanged As Rp_GroupEibFormRowChangeEventHandler
        
        Public Event Rp_GroupEibFormRowDeleting As Rp_GroupEibFormRowChangeEventHandler
        
        Public Event Rp_GroupEibFormRowDeleted As Rp_GroupEibFormRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_GroupEibFormRow(ByVal row As Rp_GroupEibFormRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_GroupEibFormRow(ByVal Srl_Group As Integer, ByVal رفع_نشده As Integer, ByVal رفع_شده As Integer, ByVal کل As Integer, ByVal نام As String) As Rp_GroupEibFormRow
            Dim rowRp_GroupEibFormRow As Rp_GroupEibFormRow = CType(Me.NewRow,Rp_GroupEibFormRow)
            Dim columnValuesArray() As Object = New Object() {Srl_Group, رفع_نشده, رفع_شده, کل, نام}
            rowRp_GroupEibFormRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_GroupEibFormRow)
            Return rowRp_GroupEibFormRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_GroupEibFormDataTable = CType(MyBase.Clone,Rp_GroupEibFormDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_GroupEibFormDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl_Group = MyBase.Columns("Srl_Group")
            Me.columnرفع_نشده = MyBase.Columns("رفع نشده")
            Me.columnرفع_شده = MyBase.Columns("رفع شده")
            Me.columnکل = MyBase.Columns("کل")
            Me.columnنام = MyBase.Columns("نام")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl_Group = New Global.System.Data.DataColumn("Srl_Group", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Group)
            Me.columnرفع_نشده = New Global.System.Data.DataColumn("رفع نشده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_نشده)
            Me.columnرفع_شده = New Global.System.Data.DataColumn("رفع شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_شده)
            Me.columnکل = New Global.System.Data.DataColumn("کل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکل)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnSrl_Group.ReadOnly = true
            Me.columnرفع_نشده.ReadOnly = true
            Me.columnرفع_شده.ReadOnly = true
            Me.columnکل.ReadOnly = true
            Me.columnنام.ReadOnly = true
            Me.columnنام.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_GroupEibFormRow() As Rp_GroupEibFormRow
            Return CType(Me.NewRow,Rp_GroupEibFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_GroupEibFormRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_GroupEibFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_GroupEibFormRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_GroupEibFormRowChanged(Me, New Rp_GroupEibFormRowChangeEvent(CType(e.Row,Rp_GroupEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_GroupEibFormRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_GroupEibFormRowChanging(Me, New Rp_GroupEibFormRowChangeEvent(CType(e.Row,Rp_GroupEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_GroupEibFormRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_GroupEibFormRowDeleted(Me, New Rp_GroupEibFormRowChangeEvent(CType(e.Row,Rp_GroupEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_GroupEibFormRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_GroupEibFormRowDeleting(Me, New Rp_GroupEibFormRowChangeEvent(CType(e.Row,Rp_GroupEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_GroupEibFormRow(ByVal row As Rp_GroupEibFormRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_GroupEibFormDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_NafarSatGroupDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_NafarSatGroupRow)
        
        Private columnSrl_Pm_Group As Global.System.Data.DataColumn
        
        Private columnTime As Global.System.Data.DataColumn
        
        Private columnجمع_ساعت_کار As Global.System.Data.DataColumn
        
        Private columnنام_گروه As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_NafarSatGroup"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_Group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_ساعت_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_ساعت_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_گروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_NafarSatGroupRow
            Get
                Return CType(Me.Rows(index),Rp_NafarSatGroupRow)
            End Get
        End Property
        
        Public Event Rp_NafarSatGroupRowChanging As Rp_NafarSatGroupRowChangeEventHandler
        
        Public Event Rp_NafarSatGroupRowChanged As Rp_NafarSatGroupRowChangeEventHandler
        
        Public Event Rp_NafarSatGroupRowDeleting As Rp_NafarSatGroupRowChangeEventHandler
        
        Public Event Rp_NafarSatGroupRowDeleted As Rp_NafarSatGroupRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_NafarSatGroupRow(ByVal row As Rp_NafarSatGroupRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_NafarSatGroupRow(ByVal Srl_Pm_Group As Integer, ByVal Time As String, ByVal جمع_ساعت_کار As Integer, ByVal نام_گروه As String) As Rp_NafarSatGroupRow
            Dim rowRp_NafarSatGroupRow As Rp_NafarSatGroupRow = CType(Me.NewRow,Rp_NafarSatGroupRow)
            Dim columnValuesArray() As Object = New Object() {Srl_Pm_Group, Time, جمع_ساعت_کار, نام_گروه}
            rowRp_NafarSatGroupRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_NafarSatGroupRow)
            Return rowRp_NafarSatGroupRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_NafarSatGroupDataTable = CType(MyBase.Clone,Rp_NafarSatGroupDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_NafarSatGroupDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl_Pm_Group = MyBase.Columns("Srl_Pm_Group")
            Me.columnTime = MyBase.Columns("Time")
            Me.columnجمع_ساعت_کار = MyBase.Columns("جمع ساعت کار")
            Me.columnنام_گروه = MyBase.Columns("نام گروه")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl_Pm_Group = New Global.System.Data.DataColumn("Srl_Pm_Group", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_Group)
            Me.columnTime = New Global.System.Data.DataColumn("Time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTime)
            Me.columnجمع_ساعت_کار = New Global.System.Data.DataColumn("جمع ساعت کار", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_ساعت_کار)
            Me.columnنام_گروه = New Global.System.Data.DataColumn("نام گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_گروه)
            Me.columnجمع_ساعت_کار.ReadOnly = true
            Me.columnنام_گروه.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_NafarSatGroupRow() As Rp_NafarSatGroupRow
            Return CType(Me.NewRow,Rp_NafarSatGroupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_NafarSatGroupRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_NafarSatGroupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_NafarSatGroupRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_NafarSatGroupRowChanged(Me, New Rp_NafarSatGroupRowChangeEvent(CType(e.Row,Rp_NafarSatGroupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_NafarSatGroupRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_NafarSatGroupRowChanging(Me, New Rp_NafarSatGroupRowChangeEvent(CType(e.Row,Rp_NafarSatGroupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_NafarSatGroupRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_NafarSatGroupRowDeleted(Me, New Rp_NafarSatGroupRowChangeEvent(CType(e.Row,Rp_NafarSatGroupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_NafarSatGroupRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_NafarSatGroupRowDeleting(Me, New Rp_NafarSatGroupRowChangeEvent(CType(e.Row,Rp_NafarSatGroupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_NafarSatGroupRow(ByVal row As Rp_NafarSatGroupRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_NafarSatGroupDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_WorkFormMaster1DataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_WorkFormMaster1Row)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnواحد As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ_فرم_کار As Global.System.Data.DataColumn
        
        Private columnسرپرست As Global.System.Data.DataColumn
        
        Private columnمبدا As Global.System.Data.DataColumn
        
        Private columnمقصد As Global.System.Data.DataColumn
        
        Private columnگروه As Global.System.Data.DataColumn
        
        Private columnتوضیح_کار As Global.System.Data.DataColumn
        
        Private columnنام_پروژه As Global.System.Data.DataColumn
        
        Private columnشرح_کار As Global.System.Data.DataColumn
        
        Private columnتعداد_نفرات As Global.System.Data.DataColumn
        
        Private columnنفر_ساعت As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_WorkFormMaster1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnواحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سرپرستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسرپرست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مبداColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمبدا
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مقصدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمقصد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnگروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توضیح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوضیح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پروژهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پروژه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شرح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشرح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعداد_نفراتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعداد_نفرات
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نفر_ساعتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنفر_ساعت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_WorkFormMaster1Row
            Get
                Return CType(Me.Rows(index),Rp_WorkFormMaster1Row)
            End Get
        End Property
        
        Public Event Rp_WorkFormMaster1RowChanging As Rp_WorkFormMaster1RowChangeEventHandler
        
        Public Event Rp_WorkFormMaster1RowChanged As Rp_WorkFormMaster1RowChangeEventHandler
        
        Public Event Rp_WorkFormMaster1RowDeleting As Rp_WorkFormMaster1RowChangeEventHandler
        
        Public Event Rp_WorkFormMaster1RowDeleted As Rp_WorkFormMaster1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_WorkFormMaster1Row(ByVal row As Rp_WorkFormMaster1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_WorkFormMaster1Row(ByVal کد_هزینه As String, ByVal تاریخ As String, ByVal واحد As String, ByVal شماره As Integer, ByVal شماره_فرم_کار As String, ByVal تاریخ_فرم_کار As String, ByVal سرپرست As String, ByVal مبدا As String, ByVal مقصد As String, ByVal گروه As String, ByVal توضیح_کار As String, ByVal نام_پروژه As String, ByVal شرح_کار As String, ByVal تعداد_نفرات As Integer, ByVal نفر_ساعت As String) As Rp_WorkFormMaster1Row
            Dim rowRp_WorkFormMaster1Row As Rp_WorkFormMaster1Row = CType(Me.NewRow,Rp_WorkFormMaster1Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, کد_هزینه, تاریخ, واحد, شماره, شماره_فرم_کار, تاریخ_فرم_کار, سرپرست, مبدا, مقصد, گروه, توضیح_کار, نام_پروژه, شرح_کار, تعداد_نفرات, نفر_ساعت}
            rowRp_WorkFormMaster1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_WorkFormMaster1Row)
            Return rowRp_WorkFormMaster1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_WorkFormMaster1Row
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_WorkFormMaster1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_WorkFormMaster1DataTable = CType(MyBase.Clone,Rp_WorkFormMaster1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_WorkFormMaster1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnواحد = MyBase.Columns("واحد")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ_فرم_کار = MyBase.Columns("تاریخ فرم کار")
            Me.columnسرپرست = MyBase.Columns("سرپرست")
            Me.columnمبدا = MyBase.Columns("مبدا")
            Me.columnمقصد = MyBase.Columns("مقصد")
            Me.columnگروه = MyBase.Columns("گروه")
            Me.columnتوضیح_کار = MyBase.Columns("توضیح کار")
            Me.columnنام_پروژه = MyBase.Columns("نام پروژه")
            Me.columnشرح_کار = MyBase.Columns("شرح کار")
            Me.columnتعداد_نفرات = MyBase.Columns("تعداد نفرات")
            Me.columnنفر_ساعت = MyBase.Columns("نفر ساعت")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnواحد = New Global.System.Data.DataColumn("واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnواحد)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ_فرم_کار = New Global.System.Data.DataColumn("تاریخ فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_فرم_کار)
            Me.columnسرپرست = New Global.System.Data.DataColumn("سرپرست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسرپرست)
            Me.columnمبدا = New Global.System.Data.DataColumn("مبدا", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمبدا)
            Me.columnمقصد = New Global.System.Data.DataColumn("مقصد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمقصد)
            Me.columnگروه = New Global.System.Data.DataColumn("گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnگروه)
            Me.columnتوضیح_کار = New Global.System.Data.DataColumn("توضیح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوضیح_کار)
            Me.columnنام_پروژه = New Global.System.Data.DataColumn("نام پروژه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پروژه)
            Me.columnشرح_کار = New Global.System.Data.DataColumn("شرح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشرح_کار)
            Me.columnتعداد_نفرات = New Global.System.Data.DataColumn("تعداد نفرات", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعداد_نفرات)
            Me.columnنفر_ساعت = New Global.System.Data.DataColumn("نفر ساعت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنفر_ساعت)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnتاریخ.MaxLength = 11
            Me.columnواحد.MaxLength = 50
            Me.columnشماره_فرم_کار.MaxLength = 50
            Me.columnتاریخ_فرم_کار.MaxLength = 11
            Me.columnسرپرست.MaxLength = 50
            Me.columnمبدا.MaxLength = 50
            Me.columnمقصد.MaxLength = 50
            Me.columnگروه.MaxLength = 50
            Me.columnتوضیح_کار.MaxLength = 100
            Me.columnنام_پروژه.MaxLength = 500
            Me.columnشرح_کار.MaxLength = 100
            Me.columnتعداد_نفرات.ReadOnly = true
            Me.columnنفر_ساعت.ReadOnly = true
            Me.columnنفر_ساعت.MaxLength = 61
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_WorkFormMaster1Row() As Rp_WorkFormMaster1Row
            Return CType(Me.NewRow,Rp_WorkFormMaster1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_WorkFormMaster1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_WorkFormMaster1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_WorkFormMaster1RowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMaster1RowChanged(Me, New Rp_WorkFormMaster1RowChangeEvent(CType(e.Row,Rp_WorkFormMaster1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_WorkFormMaster1RowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMaster1RowChanging(Me, New Rp_WorkFormMaster1RowChangeEvent(CType(e.Row,Rp_WorkFormMaster1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_WorkFormMaster1RowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMaster1RowDeleted(Me, New Rp_WorkFormMaster1RowChangeEvent(CType(e.Row,Rp_WorkFormMaster1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_WorkFormMaster1RowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMaster1RowDeleting(Me, New Rp_WorkFormMaster1RowChangeEvent(CType(e.Row,Rp_WorkFormMaster1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_WorkFormMaster1Row(ByVal row As Rp_WorkFormMaster1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_WorkFormMaster1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_WorkFormDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_WorkFormRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnواحد As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ_فرم_کار As Global.System.Data.DataColumn
        
        Private columnسرپرست As Global.System.Data.DataColumn
        
        Private columnمبدا As Global.System.Data.DataColumn
        
        Private columnمقصد As Global.System.Data.DataColumn
        
        Private columnگروه As Global.System.Data.DataColumn
        
        Private columnتوضیح_کار As Global.System.Data.DataColumn
        
        Private columnنام_پروژه As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_WorkForm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnواحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سرپرستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسرپرست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مبداColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمبدا
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مقصدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمقصد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnگروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توضیح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوضیح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پروژهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پروژه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_WorkFormRow
            Get
                Return CType(Me.Rows(index),Rp_WorkFormRow)
            End Get
        End Property
        
        Public Event Rp_WorkFormRowChanging As Rp_WorkFormRowChangeEventHandler
        
        Public Event Rp_WorkFormRowChanged As Rp_WorkFormRowChangeEventHandler
        
        Public Event Rp_WorkFormRowDeleting As Rp_WorkFormRowChangeEventHandler
        
        Public Event Rp_WorkFormRowDeleted As Rp_WorkFormRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_WorkFormRow(ByVal row As Rp_WorkFormRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_WorkFormRow(ByVal کد_هزینه As String, ByVal تاریخ As String, ByVal واحد As String, ByVal شماره As Integer, ByVal شماره_فرم_کار As String, ByVal تاریخ_فرم_کار As String, ByVal سرپرست As String, ByVal مبدا As String, ByVal مقصد As String, ByVal گروه As String, ByVal توضیح_کار As String, ByVal نام_پروژه As String) As Rp_WorkFormRow
            Dim rowRp_WorkFormRow As Rp_WorkFormRow = CType(Me.NewRow,Rp_WorkFormRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, کد_هزینه, تاریخ, واحد, شماره, شماره_فرم_کار, تاریخ_فرم_کار, سرپرست, مبدا, مقصد, گروه, توضیح_کار, نام_پروژه}
            rowRp_WorkFormRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_WorkFormRow)
            Return rowRp_WorkFormRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_WorkFormRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_WorkFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_WorkFormDataTable = CType(MyBase.Clone,Rp_WorkFormDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_WorkFormDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnواحد = MyBase.Columns("واحد")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ_فرم_کار = MyBase.Columns("تاریخ فرم کار")
            Me.columnسرپرست = MyBase.Columns("سرپرست")
            Me.columnمبدا = MyBase.Columns("مبدا")
            Me.columnمقصد = MyBase.Columns("مقصد")
            Me.columnگروه = MyBase.Columns("گروه")
            Me.columnتوضیح_کار = MyBase.Columns("توضیح کار")
            Me.columnنام_پروژه = MyBase.Columns("نام پروژه")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnواحد = New Global.System.Data.DataColumn("واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnواحد)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ_فرم_کار = New Global.System.Data.DataColumn("تاریخ فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_فرم_کار)
            Me.columnسرپرست = New Global.System.Data.DataColumn("سرپرست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسرپرست)
            Me.columnمبدا = New Global.System.Data.DataColumn("مبدا", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمبدا)
            Me.columnمقصد = New Global.System.Data.DataColumn("مقصد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمقصد)
            Me.columnگروه = New Global.System.Data.DataColumn("گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnگروه)
            Me.columnتوضیح_کار = New Global.System.Data.DataColumn("توضیح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوضیح_کار)
            Me.columnنام_پروژه = New Global.System.Data.DataColumn("نام پروژه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پروژه)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnتاریخ.MaxLength = 11
            Me.columnواحد.MaxLength = 50
            Me.columnشماره_فرم_کار.MaxLength = 50
            Me.columnتاریخ_فرم_کار.MaxLength = 11
            Me.columnسرپرست.MaxLength = 50
            Me.columnمبدا.MaxLength = 50
            Me.columnمقصد.MaxLength = 50
            Me.columnگروه.MaxLength = 50
            Me.columnتوضیح_کار.MaxLength = 100
            Me.columnنام_پروژه.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_WorkFormRow() As Rp_WorkFormRow
            Return CType(Me.NewRow,Rp_WorkFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_WorkFormRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_WorkFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_WorkFormRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormRowChanged(Me, New Rp_WorkFormRowChangeEvent(CType(e.Row,Rp_WorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_WorkFormRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormRowChanging(Me, New Rp_WorkFormRowChangeEvent(CType(e.Row,Rp_WorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_WorkFormRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormRowDeleted(Me, New Rp_WorkFormRowChangeEvent(CType(e.Row,Rp_WorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_WorkFormRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormRowDeleting(Me, New Rp_WorkFormRowChangeEvent(CType(e.Row,Rp_WorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_WorkFormRow(ByVal row As Rp_WorkFormRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_WorkFormDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_VahedEibFormDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_VahedEibFormRow)
        
        Private columnSrl_Vahed As Global.System.Data.DataColumn
        
        Private columnرفع_نشده As Global.System.Data.DataColumn
        
        Private columnرفع_شده As Global.System.Data.DataColumn
        
        Private columnکل As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_VahedEibForm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_VahedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Vahed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_VahedEibFormRow
            Get
                Return CType(Me.Rows(index),Rp_VahedEibFormRow)
            End Get
        End Property
        
        Public Event Rp_VahedEibFormRowChanging As Rp_VahedEibFormRowChangeEventHandler
        
        Public Event Rp_VahedEibFormRowChanged As Rp_VahedEibFormRowChangeEventHandler
        
        Public Event Rp_VahedEibFormRowDeleting As Rp_VahedEibFormRowChangeEventHandler
        
        Public Event Rp_VahedEibFormRowDeleted As Rp_VahedEibFormRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_VahedEibFormRow(ByVal row As Rp_VahedEibFormRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_VahedEibFormRow(ByVal Srl_Vahed As Integer, ByVal رفع_نشده As Integer, ByVal رفع_شده As Integer, ByVal کل As Integer, ByVal نام As String) As Rp_VahedEibFormRow
            Dim rowRp_VahedEibFormRow As Rp_VahedEibFormRow = CType(Me.NewRow,Rp_VahedEibFormRow)
            Dim columnValuesArray() As Object = New Object() {Srl_Vahed, رفع_نشده, رفع_شده, کل, نام}
            rowRp_VahedEibFormRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_VahedEibFormRow)
            Return rowRp_VahedEibFormRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_VahedEibFormDataTable = CType(MyBase.Clone,Rp_VahedEibFormDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_VahedEibFormDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl_Vahed = MyBase.Columns("Srl_Vahed")
            Me.columnرفع_نشده = MyBase.Columns("رفع نشده")
            Me.columnرفع_شده = MyBase.Columns("رفع شده")
            Me.columnکل = MyBase.Columns("کل")
            Me.columnنام = MyBase.Columns("نام")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl_Vahed = New Global.System.Data.DataColumn("Srl_Vahed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Vahed)
            Me.columnرفع_نشده = New Global.System.Data.DataColumn("رفع نشده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_نشده)
            Me.columnرفع_شده = New Global.System.Data.DataColumn("رفع شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_شده)
            Me.columnکل = New Global.System.Data.DataColumn("کل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکل)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnSrl_Vahed.ReadOnly = true
            Me.columnرفع_نشده.ReadOnly = true
            Me.columnرفع_شده.ReadOnly = true
            Me.columnکل.ReadOnly = true
            Me.columnنام.ReadOnly = true
            Me.columnنام.MaxLength = 400
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_VahedEibFormRow() As Rp_VahedEibFormRow
            Return CType(Me.NewRow,Rp_VahedEibFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_VahedEibFormRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_VahedEibFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_VahedEibFormRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_VahedEibFormRowChanged(Me, New Rp_VahedEibFormRowChangeEvent(CType(e.Row,Rp_VahedEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_VahedEibFormRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_VahedEibFormRowChanging(Me, New Rp_VahedEibFormRowChangeEvent(CType(e.Row,Rp_VahedEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_VahedEibFormRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_VahedEibFormRowDeleted(Me, New Rp_VahedEibFormRowChangeEvent(CType(e.Row,Rp_VahedEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_VahedEibFormRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_VahedEibFormRowDeleting(Me, New Rp_VahedEibFormRowChangeEvent(CType(e.Row,Rp_VahedEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_VahedEibFormRow(ByVal row As Rp_VahedEibFormRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_VahedEibFormDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_EibTypeEibFormDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_EibTypeEibFormRow)
        
        Private columnSrl_Pm_EibType As Global.System.Data.DataColumn
        
        Private columnرفع_نشده As Global.System.Data.DataColumn
        
        Private columnرفع_شده As Global.System.Data.DataColumn
        
        Private columnکل As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_EibTypeEibForm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_EibTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_EibType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_EibTypeEibFormRow
            Get
                Return CType(Me.Rows(index),Rp_EibTypeEibFormRow)
            End Get
        End Property
        
        Public Event Rp_EibTypeEibFormRowChanging As Rp_EibTypeEibFormRowChangeEventHandler
        
        Public Event Rp_EibTypeEibFormRowChanged As Rp_EibTypeEibFormRowChangeEventHandler
        
        Public Event Rp_EibTypeEibFormRowDeleting As Rp_EibTypeEibFormRowChangeEventHandler
        
        Public Event Rp_EibTypeEibFormRowDeleted As Rp_EibTypeEibFormRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_EibTypeEibFormRow(ByVal row As Rp_EibTypeEibFormRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_EibTypeEibFormRow(ByVal Srl_Pm_EibType As Integer, ByVal رفع_نشده As Integer, ByVal رفع_شده As Integer, ByVal کل As Integer, ByVal نام As String) As Rp_EibTypeEibFormRow
            Dim rowRp_EibTypeEibFormRow As Rp_EibTypeEibFormRow = CType(Me.NewRow,Rp_EibTypeEibFormRow)
            Dim columnValuesArray() As Object = New Object() {Srl_Pm_EibType, رفع_نشده, رفع_شده, کل, نام}
            rowRp_EibTypeEibFormRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_EibTypeEibFormRow)
            Return rowRp_EibTypeEibFormRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_EibTypeEibFormDataTable = CType(MyBase.Clone,Rp_EibTypeEibFormDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_EibTypeEibFormDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl_Pm_EibType = MyBase.Columns("Srl_Pm_EibType")
            Me.columnرفع_نشده = MyBase.Columns("رفع نشده")
            Me.columnرفع_شده = MyBase.Columns("رفع شده")
            Me.columnکل = MyBase.Columns("کل")
            Me.columnنام = MyBase.Columns("نام")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl_Pm_EibType = New Global.System.Data.DataColumn("Srl_Pm_EibType", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_EibType)
            Me.columnرفع_نشده = New Global.System.Data.DataColumn("رفع نشده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_نشده)
            Me.columnرفع_شده = New Global.System.Data.DataColumn("رفع شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_شده)
            Me.columnکل = New Global.System.Data.DataColumn("کل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکل)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnSrl_Pm_EibType.ReadOnly = true
            Me.columnرفع_نشده.ReadOnly = true
            Me.columnرفع_شده.ReadOnly = true
            Me.columnکل.ReadOnly = true
            Me.columnنام.ReadOnly = true
            Me.columnنام.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_EibTypeEibFormRow() As Rp_EibTypeEibFormRow
            Return CType(Me.NewRow,Rp_EibTypeEibFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_EibTypeEibFormRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_EibTypeEibFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_EibTypeEibFormRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_EibTypeEibFormRowChanged(Me, New Rp_EibTypeEibFormRowChangeEvent(CType(e.Row,Rp_EibTypeEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_EibTypeEibFormRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_EibTypeEibFormRowChanging(Me, New Rp_EibTypeEibFormRowChangeEvent(CType(e.Row,Rp_EibTypeEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_EibTypeEibFormRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_EibTypeEibFormRowDeleted(Me, New Rp_EibTypeEibFormRowChangeEvent(CType(e.Row,Rp_EibTypeEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_EibTypeEibFormRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_EibTypeEibFormRowDeleting(Me, New Rp_EibTypeEibFormRowChangeEvent(CType(e.Row,Rp_EibTypeEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_EibTypeEibFormRow(ByVal row As Rp_EibTypeEibFormRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_EibTypeEibFormDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_PostEibformDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_PostEibformRow)
        
        Private columnSrl_Post As Global.System.Data.DataColumn
        
        Private columnرفع_نشده As Global.System.Data.DataColumn
        
        Private columnرفع_شده As Global.System.Data.DataColumn
        
        Private columnکل As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_PostEibform"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_PostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Post
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_PostEibformRow
            Get
                Return CType(Me.Rows(index),Rp_PostEibformRow)
            End Get
        End Property
        
        Public Event Rp_PostEibformRowChanging As Rp_PostEibformRowChangeEventHandler
        
        Public Event Rp_PostEibformRowChanged As Rp_PostEibformRowChangeEventHandler
        
        Public Event Rp_PostEibformRowDeleting As Rp_PostEibformRowChangeEventHandler
        
        Public Event Rp_PostEibformRowDeleted As Rp_PostEibformRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_PostEibformRow(ByVal row As Rp_PostEibformRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_PostEibformRow(ByVal Srl_Post As Integer, ByVal رفع_نشده As Integer, ByVal رفع_شده As Integer, ByVal کل As Integer, ByVal نام As String) As Rp_PostEibformRow
            Dim rowRp_PostEibformRow As Rp_PostEibformRow = CType(Me.NewRow,Rp_PostEibformRow)
            Dim columnValuesArray() As Object = New Object() {Srl_Post, رفع_نشده, رفع_شده, کل, نام}
            rowRp_PostEibformRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_PostEibformRow)
            Return rowRp_PostEibformRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_PostEibformDataTable = CType(MyBase.Clone,Rp_PostEibformDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_PostEibformDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl_Post = MyBase.Columns("Srl_Post")
            Me.columnرفع_نشده = MyBase.Columns("رفع نشده")
            Me.columnرفع_شده = MyBase.Columns("رفع شده")
            Me.columnکل = MyBase.Columns("کل")
            Me.columnنام = MyBase.Columns("نام")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl_Post = New Global.System.Data.DataColumn("Srl_Post", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Post)
            Me.columnرفع_نشده = New Global.System.Data.DataColumn("رفع نشده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_نشده)
            Me.columnرفع_شده = New Global.System.Data.DataColumn("رفع شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_شده)
            Me.columnکل = New Global.System.Data.DataColumn("کل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکل)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnSrl_Post.ReadOnly = true
            Me.columnرفع_نشده.ReadOnly = true
            Me.columnرفع_شده.ReadOnly = true
            Me.columnکل.ReadOnly = true
            Me.columnنام.ReadOnly = true
            Me.columnنام.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_PostEibformRow() As Rp_PostEibformRow
            Return CType(Me.NewRow,Rp_PostEibformRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_PostEibformRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_PostEibformRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_PostEibformRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_PostEibformRowChanged(Me, New Rp_PostEibformRowChangeEvent(CType(e.Row,Rp_PostEibformRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_PostEibformRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_PostEibformRowChanging(Me, New Rp_PostEibformRowChangeEvent(CType(e.Row,Rp_PostEibformRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_PostEibformRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_PostEibformRowDeleted(Me, New Rp_PostEibformRowChangeEvent(CType(e.Row,Rp_PostEibformRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_PostEibformRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_PostEibformRowDeleting(Me, New Rp_PostEibformRowChangeEvent(CType(e.Row,Rp_PostEibformRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_PostEibformRow(ByVal row As Rp_PostEibformRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_PostEibformDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_CompareGroupEibFormDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_CompareGroupEibFormRow)
        
        Private columnنام_گروه As Global.System.Data.DataColumn
        
        Private columnنام_واحد As Global.System.Data.DataColumn
        
        Private columnمسئول_گروه As Global.System.Data.DataColumn
        
        Private columnSrl_Group As Global.System.Data.DataColumn
        
        Private columnرفع_نشده As Global.System.Data.DataColumn
        
        Private columnرفع_شده As Global.System.Data.DataColumn
        
        Private columnکل As Global.System.Data.DataColumn
        
        Private columnدرصد_رفع_شده As Global.System.Data.DataColumn
        
        Private columnدرصد_رفع_نشده As Global.System.Data.DataColumn
        
        Private columnدرصد_نقص_به_کل_نواقص As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_CompareGroupEibForm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_گروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_واحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مسئول_گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمسئول_گروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property درصد_رفع_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnدرصد_رفع_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property درصد_رفع_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnدرصد_رفع_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property درصد_نقص_به_کل_نواقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnدرصد_نقص_به_کل_نواقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_CompareGroupEibFormRow
            Get
                Return CType(Me.Rows(index),Rp_CompareGroupEibFormRow)
            End Get
        End Property
        
        Public Event Rp_CompareGroupEibFormRowChanging As Rp_CompareGroupEibFormRowChangeEventHandler
        
        Public Event Rp_CompareGroupEibFormRowChanged As Rp_CompareGroupEibFormRowChangeEventHandler
        
        Public Event Rp_CompareGroupEibFormRowDeleting As Rp_CompareGroupEibFormRowChangeEventHandler
        
        Public Event Rp_CompareGroupEibFormRowDeleted As Rp_CompareGroupEibFormRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_CompareGroupEibFormRow(ByVal row As Rp_CompareGroupEibFormRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_CompareGroupEibFormRow(ByVal نام_گروه As String, ByVal نام_واحد As String, ByVal مسئول_گروه As String, ByVal Srl_Group As Integer, ByVal رفع_نشده As Integer, ByVal رفع_شده As Integer, ByVal کل As Integer, ByVal درصد_رفع_شده As Double, ByVal درصد_رفع_نشده As Double, ByVal درصد_نقص_به_کل_نواقص As Integer) As Rp_CompareGroupEibFormRow
            Dim rowRp_CompareGroupEibFormRow As Rp_CompareGroupEibFormRow = CType(Me.NewRow,Rp_CompareGroupEibFormRow)
            Dim columnValuesArray() As Object = New Object() {نام_گروه, نام_واحد, مسئول_گروه, Srl_Group, رفع_نشده, رفع_شده, کل, درصد_رفع_شده, درصد_رفع_نشده, درصد_نقص_به_کل_نواقص}
            rowRp_CompareGroupEibFormRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_CompareGroupEibFormRow)
            Return rowRp_CompareGroupEibFormRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_CompareGroupEibFormDataTable = CType(MyBase.Clone,Rp_CompareGroupEibFormDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_CompareGroupEibFormDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnنام_گروه = MyBase.Columns("نام گروه")
            Me.columnنام_واحد = MyBase.Columns("نام واحد")
            Me.columnمسئول_گروه = MyBase.Columns("مسئول گروه")
            Me.columnSrl_Group = MyBase.Columns("Srl_Group")
            Me.columnرفع_نشده = MyBase.Columns("رفع نشده")
            Me.columnرفع_شده = MyBase.Columns("رفع شده")
            Me.columnکل = MyBase.Columns("کل")
            Me.columnدرصد_رفع_شده = MyBase.Columns("درصد رفع شده")
            Me.columnدرصد_رفع_نشده = MyBase.Columns("درصد رفع نشده")
            Me.columnدرصد_نقص_به_کل_نواقص = MyBase.Columns("درصد نقص به کل نواقص")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnنام_گروه = New Global.System.Data.DataColumn("نام گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_گروه)
            Me.columnنام_واحد = New Global.System.Data.DataColumn("نام واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_واحد)
            Me.columnمسئول_گروه = New Global.System.Data.DataColumn("مسئول گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمسئول_گروه)
            Me.columnSrl_Group = New Global.System.Data.DataColumn("Srl_Group", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Group)
            Me.columnرفع_نشده = New Global.System.Data.DataColumn("رفع نشده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_نشده)
            Me.columnرفع_شده = New Global.System.Data.DataColumn("رفع شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_شده)
            Me.columnکل = New Global.System.Data.DataColumn("کل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکل)
            Me.columnدرصد_رفع_شده = New Global.System.Data.DataColumn("درصد رفع شده", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnدرصد_رفع_شده)
            Me.columnدرصد_رفع_نشده = New Global.System.Data.DataColumn("درصد رفع نشده", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnدرصد_رفع_نشده)
            Me.columnدرصد_نقص_به_کل_نواقص = New Global.System.Data.DataColumn("درصد نقص به کل نواقص", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnدرصد_نقص_به_کل_نواقص)
            Me.columnنام_گروه.ReadOnly = true
            Me.columnنام_گروه.MaxLength = 50
            Me.columnنام_واحد.ReadOnly = true
            Me.columnنام_واحد.MaxLength = 50
            Me.columnمسئول_گروه.ReadOnly = true
            Me.columnمسئول_گروه.MaxLength = 101
            Me.columnSrl_Group.ReadOnly = true
            Me.columnرفع_نشده.ReadOnly = true
            Me.columnرفع_شده.ReadOnly = true
            Me.columnکل.ReadOnly = true
            Me.columnدرصد_رفع_شده.ReadOnly = true
            Me.columnدرصد_رفع_نشده.ReadOnly = true
            Me.columnدرصد_نقص_به_کل_نواقص.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_CompareGroupEibFormRow() As Rp_CompareGroupEibFormRow
            Return CType(Me.NewRow,Rp_CompareGroupEibFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_CompareGroupEibFormRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_CompareGroupEibFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_CompareGroupEibFormRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_CompareGroupEibFormRowChanged(Me, New Rp_CompareGroupEibFormRowChangeEvent(CType(e.Row,Rp_CompareGroupEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_CompareGroupEibFormRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_CompareGroupEibFormRowChanging(Me, New Rp_CompareGroupEibFormRowChangeEvent(CType(e.Row,Rp_CompareGroupEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_CompareGroupEibFormRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_CompareGroupEibFormRowDeleted(Me, New Rp_CompareGroupEibFormRowChangeEvent(CType(e.Row,Rp_CompareGroupEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_CompareGroupEibFormRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_CompareGroupEibFormRowDeleting(Me, New Rp_CompareGroupEibFormRowChangeEvent(CType(e.Row,Rp_CompareGroupEibFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_CompareGroupEibFormRow(ByVal row As Rp_CompareGroupEibFormRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_CompareGroupEibFormDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_WorkFormWorkDisDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_WorkFormWorkDisRow)
        
        Private columnمجموع As Global.System.Data.DataColumn
        
        Private columnموضوع_کار As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_WorkFormWorkDis"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مجموعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمجموع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property موضوع_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnموضوع_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_WorkFormWorkDisRow
            Get
                Return CType(Me.Rows(index),Rp_WorkFormWorkDisRow)
            End Get
        End Property
        
        Public Event Rp_WorkFormWorkDisRowChanging As Rp_WorkFormWorkDisRowChangeEventHandler
        
        Public Event Rp_WorkFormWorkDisRowChanged As Rp_WorkFormWorkDisRowChangeEventHandler
        
        Public Event Rp_WorkFormWorkDisRowDeleting As Rp_WorkFormWorkDisRowChangeEventHandler
        
        Public Event Rp_WorkFormWorkDisRowDeleted As Rp_WorkFormWorkDisRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_WorkFormWorkDisRow(ByVal row As Rp_WorkFormWorkDisRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_WorkFormWorkDisRow(ByVal مجموع As String, ByVal موضوع_کار As String) As Rp_WorkFormWorkDisRow
            Dim rowRp_WorkFormWorkDisRow As Rp_WorkFormWorkDisRow = CType(Me.NewRow,Rp_WorkFormWorkDisRow)
            Dim columnValuesArray() As Object = New Object() {مجموع, موضوع_کار}
            rowRp_WorkFormWorkDisRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_WorkFormWorkDisRow)
            Return rowRp_WorkFormWorkDisRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_WorkFormWorkDisDataTable = CType(MyBase.Clone,Rp_WorkFormWorkDisDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_WorkFormWorkDisDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnمجموع = MyBase.Columns("مجموع")
            Me.columnموضوع_کار = MyBase.Columns("موضوع کار")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnمجموع = New Global.System.Data.DataColumn("مجموع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمجموع)
            Me.columnموضوع_کار = New Global.System.Data.DataColumn("موضوع کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnموضوع_کار)
            Me.columnمجموع.ReadOnly = true
            Me.columnمجموع.MaxLength = 61
            Me.columnموضوع_کار.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_WorkFormWorkDisRow() As Rp_WorkFormWorkDisRow
            Return CType(Me.NewRow,Rp_WorkFormWorkDisRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_WorkFormWorkDisRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_WorkFormWorkDisRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_WorkFormWorkDisRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormWorkDisRowChanged(Me, New Rp_WorkFormWorkDisRowChangeEvent(CType(e.Row,Rp_WorkFormWorkDisRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_WorkFormWorkDisRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormWorkDisRowChanging(Me, New Rp_WorkFormWorkDisRowChangeEvent(CType(e.Row,Rp_WorkFormWorkDisRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_WorkFormWorkDisRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormWorkDisRowDeleted(Me, New Rp_WorkFormWorkDisRowChangeEvent(CType(e.Row,Rp_WorkFormWorkDisRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_WorkFormWorkDisRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormWorkDisRowDeleting(Me, New Rp_WorkFormWorkDisRowChangeEvent(CType(e.Row,Rp_WorkFormWorkDisRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_WorkFormWorkDisRow(ByVal row As Rp_WorkFormWorkDisRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_WorkFormWorkDisDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_NafarSatProjectDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_NafarSatProjectRow)
        
        Private columnنام_پروژه As Global.System.Data.DataColumn
        
        Private columnجمع_ساعت_کار As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_NafarSatProject"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پروژهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پروژه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_ساعت_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_ساعت_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_NafarSatProjectRow
            Get
                Return CType(Me.Rows(index),Rp_NafarSatProjectRow)
            End Get
        End Property
        
        Public Event Rp_NafarSatProjectRowChanging As Rp_NafarSatProjectRowChangeEventHandler
        
        Public Event Rp_NafarSatProjectRowChanged As Rp_NafarSatProjectRowChangeEventHandler
        
        Public Event Rp_NafarSatProjectRowDeleting As Rp_NafarSatProjectRowChangeEventHandler
        
        Public Event Rp_NafarSatProjectRowDeleted As Rp_NafarSatProjectRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_NafarSatProjectRow(ByVal row As Rp_NafarSatProjectRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_NafarSatProjectRow(ByVal نام_پروژه As String, ByVal جمع_ساعت_کار As Integer) As Rp_NafarSatProjectRow
            Dim rowRp_NafarSatProjectRow As Rp_NafarSatProjectRow = CType(Me.NewRow,Rp_NafarSatProjectRow)
            Dim columnValuesArray() As Object = New Object() {نام_پروژه, جمع_ساعت_کار}
            rowRp_NafarSatProjectRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_NafarSatProjectRow)
            Return rowRp_NafarSatProjectRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_NafarSatProjectDataTable = CType(MyBase.Clone,Rp_NafarSatProjectDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_NafarSatProjectDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnنام_پروژه = MyBase.Columns("نام پروژه")
            Me.columnجمع_ساعت_کار = MyBase.Columns("جمع ساعت کار")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnنام_پروژه = New Global.System.Data.DataColumn("نام پروژه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پروژه)
            Me.columnجمع_ساعت_کار = New Global.System.Data.DataColumn("جمع ساعت کار", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_ساعت_کار)
            Me.columnنام_پروژه.MaxLength = 500
            Me.columnجمع_ساعت_کار.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_NafarSatProjectRow() As Rp_NafarSatProjectRow
            Return CType(Me.NewRow,Rp_NafarSatProjectRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_NafarSatProjectRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_NafarSatProjectRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_NafarSatProjectRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_NafarSatProjectRowChanged(Me, New Rp_NafarSatProjectRowChangeEvent(CType(e.Row,Rp_NafarSatProjectRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_NafarSatProjectRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_NafarSatProjectRowChanging(Me, New Rp_NafarSatProjectRowChangeEvent(CType(e.Row,Rp_NafarSatProjectRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_NafarSatProjectRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_NafarSatProjectRowDeleted(Me, New Rp_NafarSatProjectRowChangeEvent(CType(e.Row,Rp_NafarSatProjectRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_NafarSatProjectRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_NafarSatProjectRowDeleting(Me, New Rp_NafarSatProjectRowChangeEvent(CType(e.Row,Rp_NafarSatProjectRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_NafarSatProjectRow(ByVal row As Rp_NafarSatProjectRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_NafarSatProjectDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_KholaseWorkFormTmpDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_KholaseWorkFormTmpRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ_فرم_کار As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnساعت_شروع As Global.System.Data.DataColumn
        
        Private columnساعت_پایان As Global.System.Data.DataColumn
        
        Private columnجمع_اضافه_کار As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_KholaseWorkFormTmp"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعت_شروعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت_شروع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعت_پایانColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت_پایان
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_KholaseWorkFormTmpRow
            Get
                Return CType(Me.Rows(index),Rp_KholaseWorkFormTmpRow)
            End Get
        End Property
        
        Public Event Rp_KholaseWorkFormTmpRowChanging As Rp_KholaseWorkFormTmpRowChangeEventHandler
        
        Public Event Rp_KholaseWorkFormTmpRowChanged As Rp_KholaseWorkFormTmpRowChangeEventHandler
        
        Public Event Rp_KholaseWorkFormTmpRowDeleting As Rp_KholaseWorkFormTmpRowChangeEventHandler
        
        Public Event Rp_KholaseWorkFormTmpRowDeleted As Rp_KholaseWorkFormTmpRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_KholaseWorkFormTmpRow(ByVal row As Rp_KholaseWorkFormTmpRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_KholaseWorkFormTmpRow(ByVal شماره_فرم_کار As String, ByVal تاریخ_فرم_کار As String, ByVal محل_فعالیت As String, ByVal اضافه_کار_تردد As String, ByVal ساعت_شروع As String, ByVal ساعت_پایان As String, ByVal جمع_اضافه_کار As String) As Rp_KholaseWorkFormTmpRow
            Dim rowRp_KholaseWorkFormTmpRow As Rp_KholaseWorkFormTmpRow = CType(Me.NewRow,Rp_KholaseWorkFormTmpRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, شماره_فرم_کار, تاریخ_فرم_کار, محل_فعالیت, اضافه_کار_تردد, ساعت_شروع, ساعت_پایان, جمع_اضافه_کار}
            rowRp_KholaseWorkFormTmpRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_KholaseWorkFormTmpRow)
            Return rowRp_KholaseWorkFormTmpRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_KholaseWorkFormTmpRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_KholaseWorkFormTmpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_KholaseWorkFormTmpDataTable = CType(MyBase.Clone,Rp_KholaseWorkFormTmpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_KholaseWorkFormTmpDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ_فرم_کار = MyBase.Columns("تاریخ فرم کار")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnاضافه_کار_تردد = MyBase.Columns("اضافه کار تردد")
            Me.columnساعت_شروع = MyBase.Columns("ساعت شروع")
            Me.columnساعت_پایان = MyBase.Columns("ساعت پایان")
            Me.columnجمع_اضافه_کار = MyBase.Columns("جمع اضافه کار")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ_فرم_کار = New Global.System.Data.DataColumn("تاریخ فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_فرم_کار)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnاضافه_کار_تردد = New Global.System.Data.DataColumn("اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_تردد)
            Me.columnساعت_شروع = New Global.System.Data.DataColumn("ساعت شروع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت_شروع)
            Me.columnساعت_پایان = New Global.System.Data.DataColumn("ساعت پایان", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت_پایان)
            Me.columnجمع_اضافه_کار = New Global.System.Data.DataColumn("جمع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_اضافه_کار)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
            Me.columnشماره_فرم_کار.MaxLength = 50
            Me.columnتاریخ_فرم_کار.MaxLength = 11
            Me.columnمحل_فعالیت.MaxLength = 50
            Me.columnاضافه_کار_تردد.ReadOnly = true
            Me.columnاضافه_کار_تردد.MaxLength = 61
            Me.columnساعت_شروع.MaxLength = 5
            Me.columnساعت_پایان.MaxLength = 5
            Me.columnجمع_اضافه_کار.ReadOnly = true
            Me.columnجمع_اضافه_کار.MaxLength = 61
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_KholaseWorkFormTmpRow() As Rp_KholaseWorkFormTmpRow
            Return CType(Me.NewRow,Rp_KholaseWorkFormTmpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_KholaseWorkFormTmpRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_KholaseWorkFormTmpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_KholaseWorkFormTmpRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_KholaseWorkFormTmpRowChanged(Me, New Rp_KholaseWorkFormTmpRowChangeEvent(CType(e.Row,Rp_KholaseWorkFormTmpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_KholaseWorkFormTmpRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_KholaseWorkFormTmpRowChanging(Me, New Rp_KholaseWorkFormTmpRowChangeEvent(CType(e.Row,Rp_KholaseWorkFormTmpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_KholaseWorkFormTmpRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_KholaseWorkFormTmpRowDeleted(Me, New Rp_KholaseWorkFormTmpRowChangeEvent(CType(e.Row,Rp_KholaseWorkFormTmpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_KholaseWorkFormTmpRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_KholaseWorkFormTmpRowDeleting(Me, New Rp_KholaseWorkFormTmpRowChangeEvent(CType(e.Row,Rp_KholaseWorkFormTmpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_KholaseWorkFormTmpRow(ByVal row As Rp_KholaseWorkFormTmpRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_KholaseWorkFormTmpDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_SaghfeKarDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_SaghfeKarRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnسقف_اضاقه_کار As Global.System.Data.DataColumn
        
        Private columnنفر_ساعت As Global.System.Data.DataColumn
        
        Private columnاضافه_کار As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnعضو_گروه As Global.System.Data.DataColumn
        
        Private columnنام_گروه As Global.System.Data.DataColumn
        
        Private columnروز_هفته As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_SaghfeKar"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سقف_اضاقه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسقف_اضاقه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نفر_ساعتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنفر_ساعت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property عضو_گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnعضو_گروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_گروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property روز_هفتهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnروز_هفته
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_SaghfeKarRow
            Get
                Return CType(Me.Rows(index),Rp_SaghfeKarRow)
            End Get
        End Property
        
        Public Event Rp_SaghfeKarRowChanging As Rp_SaghfeKarRowChangeEventHandler
        
        Public Event Rp_SaghfeKarRowChanged As Rp_SaghfeKarRowChangeEventHandler
        
        Public Event Rp_SaghfeKarRowDeleting As Rp_SaghfeKarRowChangeEventHandler
        
        Public Event Rp_SaghfeKarRowDeleted As Rp_SaghfeKarRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_SaghfeKarRow(ByVal row As Rp_SaghfeKarRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_SaghfeKarRow(ByVal شماره_فرم_کار As Integer, ByVal تاریخ As String, ByVal سقف_اضاقه_کار As String, ByVal نفر_ساعت As String, ByVal اضافه_کار As String, ByVal اضافه_کار_تردد As String, ByVal عضو_گروه As String, ByVal نام_گروه As String, ByVal روز_هفته As String) As Rp_SaghfeKarRow
            Dim rowRp_SaghfeKarRow As Rp_SaghfeKarRow = CType(Me.NewRow,Rp_SaghfeKarRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, شماره_فرم_کار, تاریخ, سقف_اضاقه_کار, نفر_ساعت, اضافه_کار, اضافه_کار_تردد, عضو_گروه, نام_گروه, روز_هفته}
            rowRp_SaghfeKarRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_SaghfeKarRow)
            Return rowRp_SaghfeKarRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_SaghfeKarRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_SaghfeKarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_SaghfeKarDataTable = CType(MyBase.Clone,Rp_SaghfeKarDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_SaghfeKarDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnسقف_اضاقه_کار = MyBase.Columns("سقف اضاقه کار")
            Me.columnنفر_ساعت = MyBase.Columns("نفر ساعت")
            Me.columnاضافه_کار = MyBase.Columns("اضافه کار")
            Me.columnاضافه_کار_تردد = MyBase.Columns("اضافه کار تردد")
            Me.columnعضو_گروه = MyBase.Columns("عضو گروه")
            Me.columnنام_گروه = MyBase.Columns("نام گروه")
            Me.columnروز_هفته = MyBase.Columns("روز هفته")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnسقف_اضاقه_کار = New Global.System.Data.DataColumn("سقف اضاقه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسقف_اضاقه_کار)
            Me.columnنفر_ساعت = New Global.System.Data.DataColumn("نفر ساعت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنفر_ساعت)
            Me.columnاضافه_کار = New Global.System.Data.DataColumn("اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار)
            Me.columnاضافه_کار_تردد = New Global.System.Data.DataColumn("اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_تردد)
            Me.columnعضو_گروه = New Global.System.Data.DataColumn("عضو گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnعضو_گروه)
            Me.columnنام_گروه = New Global.System.Data.DataColumn("نام گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_گروه)
            Me.columnروز_هفته = New Global.System.Data.DataColumn("روز هفته", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnروز_هفته)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
            Me.columnتاریخ.MaxLength = 11
            Me.columnسقف_اضاقه_کار.MaxLength = 5
            Me.columnنفر_ساعت.MaxLength = 5
            Me.columnاضافه_کار.MaxLength = 5
            Me.columnاضافه_کار_تردد.MaxLength = 5
            Me.columnعضو_گروه.ReadOnly = true
            Me.columnعضو_گروه.MaxLength = 101
            Me.columnنام_گروه.MaxLength = 50
            Me.columnروز_هفته.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_SaghfeKarRow() As Rp_SaghfeKarRow
            Return CType(Me.NewRow,Rp_SaghfeKarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_SaghfeKarRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_SaghfeKarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_SaghfeKarRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_SaghfeKarRowChanged(Me, New Rp_SaghfeKarRowChangeEvent(CType(e.Row,Rp_SaghfeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_SaghfeKarRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_SaghfeKarRowChanging(Me, New Rp_SaghfeKarRowChangeEvent(CType(e.Row,Rp_SaghfeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_SaghfeKarRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_SaghfeKarRowDeleted(Me, New Rp_SaghfeKarRowChangeEvent(CType(e.Row,Rp_SaghfeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_SaghfeKarRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_SaghfeKarRowDeleting(Me, New Rp_SaghfeKarRowChangeEvent(CType(e.Row,Rp_SaghfeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_SaghfeKarRow(ByVal row As Rp_SaghfeKarRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_SaghfeKarDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_SaghfKarTotalDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_SaghfKarTotalRow)
        
        Private columnکد_پرسنلی As Global.System.Data.DataColumn
        
        Private columnنام_و_نام_خانوادگی As Global.System.Data.DataColumn
        
        Private columnمجموع_ساعت_کار As Global.System.Data.DataColumn
        
        Private columnمجموع_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnمجموع_اضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnمجموع_سقف_کار As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_SaghfKarTotal"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_پرسنلیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_پرسنلی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_و_نام_خانوادگیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_و_نام_خانوادگی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مجموع_ساعت_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمجموع_ساعت_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مجموع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمجموع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مجموع_اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمجموع_اضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مجموع_سقف_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمجموع_سقف_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_SaghfKarTotalRow
            Get
                Return CType(Me.Rows(index),Rp_SaghfKarTotalRow)
            End Get
        End Property
        
        Public Event Rp_SaghfKarTotalRowChanging As Rp_SaghfKarTotalRowChangeEventHandler
        
        Public Event Rp_SaghfKarTotalRowChanged As Rp_SaghfKarTotalRowChangeEventHandler
        
        Public Event Rp_SaghfKarTotalRowDeleting As Rp_SaghfKarTotalRowChangeEventHandler
        
        Public Event Rp_SaghfKarTotalRowDeleted As Rp_SaghfKarTotalRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_SaghfKarTotalRow(ByVal row As Rp_SaghfKarTotalRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_SaghfKarTotalRow(ByVal کد_پرسنلی As Long, ByVal نام_و_نام_خانوادگی As String, ByVal مجموع_ساعت_کار As String, ByVal مجموع_اضافه_کار As String, ByVal مجموع_اضافه_کار_تردد As String, ByVal مجموع_سقف_کار As String) As Rp_SaghfKarTotalRow
            Dim rowRp_SaghfKarTotalRow As Rp_SaghfKarTotalRow = CType(Me.NewRow,Rp_SaghfKarTotalRow)
            Dim columnValuesArray() As Object = New Object() {کد_پرسنلی, نام_و_نام_خانوادگی, مجموع_ساعت_کار, مجموع_اضافه_کار, مجموع_اضافه_کار_تردد, مجموع_سقف_کار}
            rowRp_SaghfKarTotalRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_SaghfKarTotalRow)
            Return rowRp_SaghfKarTotalRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_SaghfKarTotalDataTable = CType(MyBase.Clone,Rp_SaghfKarTotalDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_SaghfKarTotalDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnکد_پرسنلی = MyBase.Columns("کد پرسنلی")
            Me.columnنام_و_نام_خانوادگی = MyBase.Columns("نام و نام خانوادگی")
            Me.columnمجموع_ساعت_کار = MyBase.Columns("مجموع ساعت کار")
            Me.columnمجموع_اضافه_کار = MyBase.Columns("مجموع اضافه کار")
            Me.columnمجموع_اضافه_کار_تردد = MyBase.Columns("مجموع اضافه کار تردد")
            Me.columnمجموع_سقف_کار = MyBase.Columns("مجموع سقف کار")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnکد_پرسنلی = New Global.System.Data.DataColumn("کد پرسنلی", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_پرسنلی)
            Me.columnنام_و_نام_خانوادگی = New Global.System.Data.DataColumn("نام و نام خانوادگی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_و_نام_خانوادگی)
            Me.columnمجموع_ساعت_کار = New Global.System.Data.DataColumn("مجموع ساعت کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمجموع_ساعت_کار)
            Me.columnمجموع_اضافه_کار = New Global.System.Data.DataColumn("مجموع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمجموع_اضافه_کار)
            Me.columnمجموع_اضافه_کار_تردد = New Global.System.Data.DataColumn("مجموع اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمجموع_اضافه_کار_تردد)
            Me.columnمجموع_سقف_کار = New Global.System.Data.DataColumn("مجموع سقف کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمجموع_سقف_کار)
            Me.columnنام_و_نام_خانوادگی.ReadOnly = true
            Me.columnنام_و_نام_خانوادگی.MaxLength = 101
            Me.columnمجموع_ساعت_کار.ReadOnly = true
            Me.columnمجموع_ساعت_کار.MaxLength = 101
            Me.columnمجموع_اضافه_کار.ReadOnly = true
            Me.columnمجموع_اضافه_کار.MaxLength = 101
            Me.columnمجموع_اضافه_کار_تردد.ReadOnly = true
            Me.columnمجموع_اضافه_کار_تردد.MaxLength = 101
            Me.columnمجموع_سقف_کار.ReadOnly = true
            Me.columnمجموع_سقف_کار.MaxLength = 101
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_SaghfKarTotalRow() As Rp_SaghfKarTotalRow
            Return CType(Me.NewRow,Rp_SaghfKarTotalRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_SaghfKarTotalRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_SaghfKarTotalRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_SaghfKarTotalRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_SaghfKarTotalRowChanged(Me, New Rp_SaghfKarTotalRowChangeEvent(CType(e.Row,Rp_SaghfKarTotalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_SaghfKarTotalRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_SaghfKarTotalRowChanging(Me, New Rp_SaghfKarTotalRowChangeEvent(CType(e.Row,Rp_SaghfKarTotalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_SaghfKarTotalRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_SaghfKarTotalRowDeleted(Me, New Rp_SaghfKarTotalRowChangeEvent(CType(e.Row,Rp_SaghfKarTotalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_SaghfKarTotalRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_SaghfKarTotalRowDeleting(Me, New Rp_SaghfKarTotalRowChangeEvent(CType(e.Row,Rp_SaghfKarTotalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_SaghfKarTotalRow(ByVal row As Rp_SaghfKarTotalRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_SaghfKarTotalDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_WorkFormMasterWithTEMPDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_WorkFormMasterWithTEMPRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnواحد As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ_فرم_کار As Global.System.Data.DataColumn
        
        Private columnسرپرست As Global.System.Data.DataColumn
        
        Private columnمبدا As Global.System.Data.DataColumn
        
        Private columnمقصد As Global.System.Data.DataColumn
        
        Private columnگروه As Global.System.Data.DataColumn
        
        Private columnتوضیح_کار As Global.System.Data.DataColumn
        
        Private columnنام_پروژه As Global.System.Data.DataColumn
        
        Private columnشرح_کار As Global.System.Data.DataColumn
        
        Private columnتعداد_نفرات As Global.System.Data.DataColumn
        
        Private columnنفر_ساعت As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_WorkFormMasterWithTEMP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnواحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سرپرستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسرپرست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مبداColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمبدا
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مقصدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمقصد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnگروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توضیح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوضیح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پروژهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پروژه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شرح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشرح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعداد_نفراتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعداد_نفرات
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نفر_ساعتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنفر_ساعت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_WorkFormMasterWithTEMPRow
            Get
                Return CType(Me.Rows(index),Rp_WorkFormMasterWithTEMPRow)
            End Get
        End Property
        
        Public Event Rp_WorkFormMasterWithTEMPRowChanging As Rp_WorkFormMasterWithTEMPRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterWithTEMPRowChanged As Rp_WorkFormMasterWithTEMPRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterWithTEMPRowDeleting As Rp_WorkFormMasterWithTEMPRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterWithTEMPRowDeleted As Rp_WorkFormMasterWithTEMPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_WorkFormMasterWithTEMPRow(ByVal row As Rp_WorkFormMasterWithTEMPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_WorkFormMasterWithTEMPRow(ByVal کد_هزینه As String, ByVal تاریخ As String, ByVal واحد As String, ByVal شماره As Integer, ByVal شماره_فرم_کار As String, ByVal تاریخ_فرم_کار As String, ByVal سرپرست As String, ByVal مبدا As String, ByVal مقصد As String, ByVal گروه As String, ByVal توضیح_کار As String, ByVal نام_پروژه As String, ByVal شرح_کار As String, ByVal تعداد_نفرات As Integer, ByVal نفر_ساعت As String) As Rp_WorkFormMasterWithTEMPRow
            Dim rowRp_WorkFormMasterWithTEMPRow As Rp_WorkFormMasterWithTEMPRow = CType(Me.NewRow,Rp_WorkFormMasterWithTEMPRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, کد_هزینه, تاریخ, واحد, شماره, شماره_فرم_کار, تاریخ_فرم_کار, سرپرست, مبدا, مقصد, گروه, توضیح_کار, نام_پروژه, شرح_کار, تعداد_نفرات, نفر_ساعت}
            rowRp_WorkFormMasterWithTEMPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_WorkFormMasterWithTEMPRow)
            Return rowRp_WorkFormMasterWithTEMPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_WorkFormMasterWithTEMPRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_WorkFormMasterWithTEMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_WorkFormMasterWithTEMPDataTable = CType(MyBase.Clone,Rp_WorkFormMasterWithTEMPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_WorkFormMasterWithTEMPDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnواحد = MyBase.Columns("واحد")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ_فرم_کار = MyBase.Columns("تاریخ فرم کار")
            Me.columnسرپرست = MyBase.Columns("سرپرست")
            Me.columnمبدا = MyBase.Columns("مبدا")
            Me.columnمقصد = MyBase.Columns("مقصد")
            Me.columnگروه = MyBase.Columns("گروه")
            Me.columnتوضیح_کار = MyBase.Columns("توضیح کار")
            Me.columnنام_پروژه = MyBase.Columns("نام پروژه")
            Me.columnشرح_کار = MyBase.Columns("شرح کار")
            Me.columnتعداد_نفرات = MyBase.Columns("تعداد نفرات")
            Me.columnنفر_ساعت = MyBase.Columns("نفر ساعت")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnواحد = New Global.System.Data.DataColumn("واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnواحد)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ_فرم_کار = New Global.System.Data.DataColumn("تاریخ فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_فرم_کار)
            Me.columnسرپرست = New Global.System.Data.DataColumn("سرپرست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسرپرست)
            Me.columnمبدا = New Global.System.Data.DataColumn("مبدا", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمبدا)
            Me.columnمقصد = New Global.System.Data.DataColumn("مقصد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمقصد)
            Me.columnگروه = New Global.System.Data.DataColumn("گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnگروه)
            Me.columnتوضیح_کار = New Global.System.Data.DataColumn("توضیح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوضیح_کار)
            Me.columnنام_پروژه = New Global.System.Data.DataColumn("نام پروژه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پروژه)
            Me.columnشرح_کار = New Global.System.Data.DataColumn("شرح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشرح_کار)
            Me.columnتعداد_نفرات = New Global.System.Data.DataColumn("تعداد نفرات", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعداد_نفرات)
            Me.columnنفر_ساعت = New Global.System.Data.DataColumn("نفر ساعت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنفر_ساعت)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnتاریخ.MaxLength = 11
            Me.columnواحد.MaxLength = 50
            Me.columnشماره_فرم_کار.MaxLength = 50
            Me.columnتاریخ_فرم_کار.MaxLength = 11
            Me.columnسرپرست.MaxLength = 50
            Me.columnمبدا.MaxLength = 50
            Me.columnمقصد.MaxLength = 50
            Me.columnگروه.MaxLength = 50
            Me.columnتوضیح_کار.MaxLength = 100
            Me.columnنام_پروژه.MaxLength = 500
            Me.columnشرح_کار.MaxLength = 100
            Me.columnتعداد_نفرات.ReadOnly = true
            Me.columnنفر_ساعت.ReadOnly = true
            Me.columnنفر_ساعت.MaxLength = 61
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_WorkFormMasterWithTEMPRow() As Rp_WorkFormMasterWithTEMPRow
            Return CType(Me.NewRow,Rp_WorkFormMasterWithTEMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_WorkFormMasterWithTEMPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_WorkFormMasterWithTEMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_WorkFormMasterWithTEMPRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterWithTEMPRowChanged(Me, New Rp_WorkFormMasterWithTEMPRowChangeEvent(CType(e.Row,Rp_WorkFormMasterWithTEMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_WorkFormMasterWithTEMPRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterWithTEMPRowChanging(Me, New Rp_WorkFormMasterWithTEMPRowChangeEvent(CType(e.Row,Rp_WorkFormMasterWithTEMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_WorkFormMasterWithTEMPRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterWithTEMPRowDeleted(Me, New Rp_WorkFormMasterWithTEMPRowChangeEvent(CType(e.Row,Rp_WorkFormMasterWithTEMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_WorkFormMasterWithTEMPRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterWithTEMPRowDeleting(Me, New Rp_WorkFormMasterWithTEMPRowChangeEvent(CType(e.Row,Rp_WorkFormMasterWithTEMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_WorkFormMasterWithTEMPRow(ByVal row As Rp_WorkFormMasterWithTEMPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_WorkFormMasterWithTEMPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_WorkFormMasterDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_WorkFormMasterRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ_فرم_کار As Global.System.Data.DataColumn
        
        Private columnعضو As Global.System.Data.DataColumn
        
        Private columnسرپرست As Global.System.Data.DataColumn
        
        Private columnمبدا As Global.System.Data.DataColumn
        
        Private columnمقصد As Global.System.Data.DataColumn
        
        Private columnگروه As Global.System.Data.DataColumn
        
        Private columnواحد As Global.System.Data.DataColumn
        
        Private columnتوضیح_کار As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnنام_پروژه As Global.System.Data.DataColumn
        
        Private columnشرح_کار As Global.System.Data.DataColumn
        
        Private columnSrl_Pm_Ashkhas_Sarparast As Global.System.Data.DataColumn
        
        Private columnاعضا As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_WorkFormMaster"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property عضوColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnعضو
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سرپرستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسرپرست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مبداColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمبدا
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مقصدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمقصد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnگروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnواحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توضیح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوضیح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پروژهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پروژه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شرح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشرح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_Ashkhas_SarparastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_Ashkhas_Sarparast
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اعضاColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاعضا
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_WorkFormMasterRow
            Get
                Return CType(Me.Rows(index),Rp_WorkFormMasterRow)
            End Get
        End Property
        
        Public Event Rp_WorkFormMasterRowChanging As Rp_WorkFormMasterRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterRowChanged As Rp_WorkFormMasterRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterRowDeleting As Rp_WorkFormMasterRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterRowDeleted As Rp_WorkFormMasterRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_WorkFormMasterRow(ByVal row As Rp_WorkFormMasterRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_WorkFormMasterRow( _
                    ByVal شماره As Integer,  _
                    ByVal تاریخ As String,  _
                    ByVal شماره_فرم_کار As String,  _
                    ByVal تاریخ_فرم_کار As String,  _
                    ByVal عضو As String,  _
                    ByVal سرپرست As String,  _
                    ByVal مبدا As String,  _
                    ByVal مقصد As String,  _
                    ByVal گروه As String,  _
                    ByVal واحد As String,  _
                    ByVal توضیح_کار As String,  _
                    ByVal کد_هزینه As String,  _
                    ByVal نام_پروژه As String,  _
                    ByVal شرح_کار As String,  _
                    ByVal Srl_Pm_Ashkhas_Sarparast As Integer,  _
                    ByVal اعضا As String) As Rp_WorkFormMasterRow
            Dim rowRp_WorkFormMasterRow As Rp_WorkFormMasterRow = CType(Me.NewRow,Rp_WorkFormMasterRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, شماره, تاریخ, شماره_فرم_کار, تاریخ_فرم_کار, عضو, سرپرست, مبدا, مقصد, گروه, واحد, توضیح_کار, کد_هزینه, نام_پروژه, شرح_کار, Srl_Pm_Ashkhas_Sarparast, اعضا}
            rowRp_WorkFormMasterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_WorkFormMasterRow)
            Return rowRp_WorkFormMasterRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_WorkFormMasterRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_WorkFormMasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_WorkFormMasterDataTable = CType(MyBase.Clone,Rp_WorkFormMasterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_WorkFormMasterDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ_فرم_کار = MyBase.Columns("تاریخ فرم کار")
            Me.columnعضو = MyBase.Columns("عضو")
            Me.columnسرپرست = MyBase.Columns("سرپرست")
            Me.columnمبدا = MyBase.Columns("مبدا")
            Me.columnمقصد = MyBase.Columns("مقصد")
            Me.columnگروه = MyBase.Columns("گروه")
            Me.columnواحد = MyBase.Columns("واحد")
            Me.columnتوضیح_کار = MyBase.Columns("توضیح کار")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnنام_پروژه = MyBase.Columns("نام پروژه")
            Me.columnشرح_کار = MyBase.Columns("شرح کار")
            Me.columnSrl_Pm_Ashkhas_Sarparast = MyBase.Columns("Srl_Pm_Ashkhas_Sarparast")
            Me.columnاعضا = MyBase.Columns("اعضا")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ_فرم_کار = New Global.System.Data.DataColumn("تاریخ فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_فرم_کار)
            Me.columnعضو = New Global.System.Data.DataColumn("عضو", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnعضو)
            Me.columnسرپرست = New Global.System.Data.DataColumn("سرپرست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسرپرست)
            Me.columnمبدا = New Global.System.Data.DataColumn("مبدا", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمبدا)
            Me.columnمقصد = New Global.System.Data.DataColumn("مقصد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمقصد)
            Me.columnگروه = New Global.System.Data.DataColumn("گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnگروه)
            Me.columnواحد = New Global.System.Data.DataColumn("واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnواحد)
            Me.columnتوضیح_کار = New Global.System.Data.DataColumn("توضیح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوضیح_کار)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnنام_پروژه = New Global.System.Data.DataColumn("نام پروژه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پروژه)
            Me.columnشرح_کار = New Global.System.Data.DataColumn("شرح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشرح_کار)
            Me.columnSrl_Pm_Ashkhas_Sarparast = New Global.System.Data.DataColumn("Srl_Pm_Ashkhas_Sarparast", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_Ashkhas_Sarparast)
            Me.columnاعضا = New Global.System.Data.DataColumn("اعضا", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاعضا)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
            Me.columnتاریخ.MaxLength = 11
            Me.columnشماره_فرم_کار.MaxLength = 50
            Me.columnتاریخ_فرم_کار.MaxLength = 11
            Me.columnعضو.ReadOnly = true
            Me.columnعضو.MaxLength = 101
            Me.columnسرپرست.ReadOnly = true
            Me.columnسرپرست.MaxLength = 101
            Me.columnمبدا.MaxLength = 50
            Me.columnمقصد.MaxLength = 50
            Me.columnگروه.MaxLength = 50
            Me.columnواحد.MaxLength = 400
            Me.columnتوضیح_کار.ReadOnly = true
            Me.columnتوضیح_کار.MaxLength = 400
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnنام_پروژه.MaxLength = 400
            Me.columnشرح_کار.MaxLength = 400
            Me.columnاعضا.ReadOnly = true
            Me.columnاعضا.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_WorkFormMasterRow() As Rp_WorkFormMasterRow
            Return CType(Me.NewRow,Rp_WorkFormMasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_WorkFormMasterRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_WorkFormMasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_WorkFormMasterRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterRowChanged(Me, New Rp_WorkFormMasterRowChangeEvent(CType(e.Row,Rp_WorkFormMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_WorkFormMasterRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterRowChanging(Me, New Rp_WorkFormMasterRowChangeEvent(CType(e.Row,Rp_WorkFormMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_WorkFormMasterRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterRowDeleted(Me, New Rp_WorkFormMasterRowChangeEvent(CType(e.Row,Rp_WorkFormMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_WorkFormMasterRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterRowDeleting(Me, New Rp_WorkFormMasterRowChangeEvent(CType(e.Row,Rp_WorkFormMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_WorkFormMasterRow(ByVal row As Rp_WorkFormMasterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_WorkFormMasterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_KholaseWorkFormDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_KholaseWorkFormRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ_فرم_کار As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnساعت_شروع As Global.System.Data.DataColumn
        
        Private columnساعت_پایان As Global.System.Data.DataColumn
        
        Private columnجمع_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_KholaseWorkForm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعت_شروعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت_شروع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعت_پایانColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت_پایان
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_KholaseWorkFormRow
            Get
                Return CType(Me.Rows(index),Rp_KholaseWorkFormRow)
            End Get
        End Property
        
        Public Event Rp_KholaseWorkFormRowChanging As Rp_KholaseWorkFormRowChangeEventHandler
        
        Public Event Rp_KholaseWorkFormRowChanged As Rp_KholaseWorkFormRowChangeEventHandler
        
        Public Event Rp_KholaseWorkFormRowDeleting As Rp_KholaseWorkFormRowChangeEventHandler
        
        Public Event Rp_KholaseWorkFormRowDeleted As Rp_KholaseWorkFormRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_KholaseWorkFormRow(ByVal row As Rp_KholaseWorkFormRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_KholaseWorkFormRow(ByVal شماره_فرم_کار As String, ByVal تاریخ_فرم_کار As String, ByVal محل_فعالیت As String, ByVal ساعت_شروع As String, ByVal ساعت_پایان As String, ByVal جمع_اضافه_کار As String, ByVal اضافه_کار_تردد As String, ByVal شماره As Integer) As Rp_KholaseWorkFormRow
            Dim rowRp_KholaseWorkFormRow As Rp_KholaseWorkFormRow = CType(Me.NewRow,Rp_KholaseWorkFormRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, شماره_فرم_کار, تاریخ_فرم_کار, محل_فعالیت, ساعت_شروع, ساعت_پایان, جمع_اضافه_کار, اضافه_کار_تردد, شماره}
            rowRp_KholaseWorkFormRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_KholaseWorkFormRow)
            Return rowRp_KholaseWorkFormRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_KholaseWorkFormRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_KholaseWorkFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_KholaseWorkFormDataTable = CType(MyBase.Clone,Rp_KholaseWorkFormDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_KholaseWorkFormDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ_فرم_کار = MyBase.Columns("تاریخ فرم کار")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnساعت_شروع = MyBase.Columns("ساعت شروع")
            Me.columnساعت_پایان = MyBase.Columns("ساعت پایان")
            Me.columnجمع_اضافه_کار = MyBase.Columns("جمع اضافه کار")
            Me.columnاضافه_کار_تردد = MyBase.Columns("اضافه کار تردد")
            Me.columnشماره = MyBase.Columns("شماره")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ_فرم_کار = New Global.System.Data.DataColumn("تاریخ فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_فرم_کار)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnساعت_شروع = New Global.System.Data.DataColumn("ساعت شروع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت_شروع)
            Me.columnساعت_پایان = New Global.System.Data.DataColumn("ساعت پایان", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت_پایان)
            Me.columnجمع_اضافه_کار = New Global.System.Data.DataColumn("جمع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_اضافه_کار)
            Me.columnاضافه_کار_تردد = New Global.System.Data.DataColumn("اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_تردد)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
            Me.columnشماره_فرم_کار.MaxLength = 50
            Me.columnتاریخ_فرم_کار.MaxLength = 11
            Me.columnمحل_فعالیت.MaxLength = 50
            Me.columnساعت_شروع.MaxLength = 5
            Me.columnساعت_پایان.MaxLength = 5
            Me.columnجمع_اضافه_کار.ReadOnly = true
            Me.columnجمع_اضافه_کار.MaxLength = 101
            Me.columnاضافه_کار_تردد.ReadOnly = true
            Me.columnاضافه_کار_تردد.MaxLength = 101
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_KholaseWorkFormRow() As Rp_KholaseWorkFormRow
            Return CType(Me.NewRow,Rp_KholaseWorkFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_KholaseWorkFormRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_KholaseWorkFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_KholaseWorkFormRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_KholaseWorkFormRowChanged(Me, New Rp_KholaseWorkFormRowChangeEvent(CType(e.Row,Rp_KholaseWorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_KholaseWorkFormRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_KholaseWorkFormRowChanging(Me, New Rp_KholaseWorkFormRowChangeEvent(CType(e.Row,Rp_KholaseWorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_KholaseWorkFormRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_KholaseWorkFormRowDeleted(Me, New Rp_KholaseWorkFormRowChangeEvent(CType(e.Row,Rp_KholaseWorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_KholaseWorkFormRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_KholaseWorkFormRowDeleting(Me, New Rp_KholaseWorkFormRowChangeEvent(CType(e.Row,Rp_KholaseWorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_KholaseWorkFormRow(ByVal row As Rp_KholaseWorkFormRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_KholaseWorkFormDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_ExtraWorkDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_ExtraWorkRow)
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnنام_فرد As Global.System.Data.DataColumn
        
        Private columnکد_شناسایی As Global.System.Data.DataColumn
        
        Private columnفرم_کار As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnاضافه_کار As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnکسر_کار As Global.System.Data.DataColumn
        
        Private columnجمع_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnتعطیل As Global.System.Data.DataColumn
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnماموریت As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_ExtraWork"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_فردColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_فرد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_شناساییColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_شناسایی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کسر_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکسر_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعطیلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعطیل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ماموریتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnماموریت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_ExtraWorkRow
            Get
                Return CType(Me.Rows(index),Rp_ExtraWorkRow)
            End Get
        End Property
        
        Public Event Rp_ExtraWorkRowChanging As Rp_ExtraWorkRowChangeEventHandler
        
        Public Event Rp_ExtraWorkRowChanged As Rp_ExtraWorkRowChangeEventHandler
        
        Public Event Rp_ExtraWorkRowDeleting As Rp_ExtraWorkRowChangeEventHandler
        
        Public Event Rp_ExtraWorkRowDeleted As Rp_ExtraWorkRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_ExtraWorkRow(ByVal row As Rp_ExtraWorkRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_ExtraWorkRow(ByVal تاریخ As String, ByVal نام_فرد As String, ByVal کد_شناسایی As Long, ByVal فرم_کار As String, ByVal شماره As String, ByVal کد_هزینه As String, ByVal محل_فعالیت As String, ByVal اضافه_کار As String, ByVal اضافه_کار_تردد As String, ByVal کسر_کار As String, ByVal جمع_اضافه_کار As String, ByVal تعطیل As Integer, ByVal Srl As Integer, ByVal ماموریت As String) As Rp_ExtraWorkRow
            Dim rowRp_ExtraWorkRow As Rp_ExtraWorkRow = CType(Me.NewRow,Rp_ExtraWorkRow)
            Dim columnValuesArray() As Object = New Object() {تاریخ, نام_فرد, کد_شناسایی, فرم_کار, شماره, کد_هزینه, محل_فعالیت, اضافه_کار, اضافه_کار_تردد, کسر_کار, جمع_اضافه_کار, تعطیل, Srl, ماموریت}
            rowRp_ExtraWorkRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_ExtraWorkRow)
            Return rowRp_ExtraWorkRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_ExtraWorkDataTable = CType(MyBase.Clone,Rp_ExtraWorkDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_ExtraWorkDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnنام_فرد = MyBase.Columns("نام فرد")
            Me.columnکد_شناسایی = MyBase.Columns("کد شناسایی")
            Me.columnفرم_کار = MyBase.Columns("فرم کار")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnاضافه_کار = MyBase.Columns("اضافه کار")
            Me.columnاضافه_کار_تردد = MyBase.Columns("اضافه کار تردد")
            Me.columnکسر_کار = MyBase.Columns("کسر کار")
            Me.columnجمع_اضافه_کار = MyBase.Columns("جمع اضافه کار")
            Me.columnتعطیل = MyBase.Columns("تعطیل")
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnماموریت = MyBase.Columns("ماموریت")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnنام_فرد = New Global.System.Data.DataColumn("نام فرد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_فرد)
            Me.columnکد_شناسایی = New Global.System.Data.DataColumn("کد شناسایی", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_شناسایی)
            Me.columnفرم_کار = New Global.System.Data.DataColumn("فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرم_کار)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnاضافه_کار = New Global.System.Data.DataColumn("اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار)
            Me.columnاضافه_کار_تردد = New Global.System.Data.DataColumn("اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_تردد)
            Me.columnکسر_کار = New Global.System.Data.DataColumn("کسر کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکسر_کار)
            Me.columnجمع_اضافه_کار = New Global.System.Data.DataColumn("جمع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_اضافه_کار)
            Me.columnتعطیل = New Global.System.Data.DataColumn("تعطیل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعطیل)
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnماموریت = New Global.System.Data.DataColumn("ماموریت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnماموریت)
            Me.columnتاریخ.ReadOnly = true
            Me.columnتاریخ.MaxLength = 10
            Me.columnنام_فرد.ReadOnly = true
            Me.columnنام_فرد.MaxLength = 101
            Me.columnکد_شناسایی.ReadOnly = true
            Me.columnفرم_کار.ReadOnly = true
            Me.columnفرم_کار.MaxLength = 50
            Me.columnشماره.ReadOnly = true
            Me.columnشماره.MaxLength = 30
            Me.columnکد_هزینه.ReadOnly = true
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnمحل_فعالیت.ReadOnly = true
            Me.columnمحل_فعالیت.MaxLength = 50
            Me.columnاضافه_کار.ReadOnly = true
            Me.columnاضافه_کار.MaxLength = 30
            Me.columnاضافه_کار_تردد.ReadOnly = true
            Me.columnاضافه_کار_تردد.MaxLength = 5
            Me.columnکسر_کار.ReadOnly = true
            Me.columnکسر_کار.MaxLength = 17
            Me.columnجمع_اضافه_کار.ReadOnly = true
            Me.columnجمع_اضافه_کار.MaxLength = 61
            Me.columnتعطیل.ReadOnly = true
            Me.columnSrl.ReadOnly = true
            Me.columnماموریت.ReadOnly = true
            Me.columnماموریت.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_ExtraWorkRow() As Rp_ExtraWorkRow
            Return CType(Me.NewRow,Rp_ExtraWorkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_ExtraWorkRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_ExtraWorkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_ExtraWorkRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkRowChanged(Me, New Rp_ExtraWorkRowChangeEvent(CType(e.Row,Rp_ExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_ExtraWorkRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkRowChanging(Me, New Rp_ExtraWorkRowChangeEvent(CType(e.Row,Rp_ExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_ExtraWorkRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkRowDeleted(Me, New Rp_ExtraWorkRowChangeEvent(CType(e.Row,Rp_ExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_ExtraWorkRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkRowDeleting(Me, New Rp_ExtraWorkRowChangeEvent(CType(e.Row,Rp_ExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_ExtraWorkRow(ByVal row As Rp_ExtraWorkRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_ExtraWorkDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_WorkFormMasterSearchDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_WorkFormMasterSearchRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ_فرم_کار As Global.System.Data.DataColumn
        
        Private columnسرپرست As Global.System.Data.DataColumn
        
        Private columnمبدا As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnاعضا As Global.System.Data.DataColumn
        
        Private columnگروه As Global.System.Data.DataColumn
        
        Private columnواحد As Global.System.Data.DataColumn
        
        Private columnتوضیح_کار As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnنام_پروژه As Global.System.Data.DataColumn
        
        Private columnشرح_کار As Global.System.Data.DataColumn
        
        Private columnSrl_Pm_Ashkhas_Sarparast As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_WorkFormMasterSearch"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سرپرستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسرپرست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مبداColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمبدا
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اعضاColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاعضا
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnگروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnواحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توضیح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوضیح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پروژهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پروژه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شرح_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشرح_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_Ashkhas_SarparastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_Ashkhas_Sarparast
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_WorkFormMasterSearchRow
            Get
                Return CType(Me.Rows(index),Rp_WorkFormMasterSearchRow)
            End Get
        End Property
        
        Public Event Rp_WorkFormMasterSearchRowChanging As Rp_WorkFormMasterSearchRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterSearchRowChanged As Rp_WorkFormMasterSearchRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterSearchRowDeleting As Rp_WorkFormMasterSearchRowChangeEventHandler
        
        Public Event Rp_WorkFormMasterSearchRowDeleted As Rp_WorkFormMasterSearchRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_WorkFormMasterSearchRow(ByVal row As Rp_WorkFormMasterSearchRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_WorkFormMasterSearchRow(ByVal شماره As Integer, ByVal تاریخ As String, ByVal شماره_فرم_کار As String, ByVal تاریخ_فرم_کار As String, ByVal سرپرست As String, ByVal مبدا As String, ByVal محل_فعالیت As String, ByVal اعضا As String, ByVal گروه As String, ByVal واحد As String, ByVal توضیح_کار As String, ByVal کد_هزینه As String, ByVal نام_پروژه As String, ByVal شرح_کار As String, ByVal Srl_Pm_Ashkhas_Sarparast As Integer) As Rp_WorkFormMasterSearchRow
            Dim rowRp_WorkFormMasterSearchRow As Rp_WorkFormMasterSearchRow = CType(Me.NewRow,Rp_WorkFormMasterSearchRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, شماره, تاریخ, شماره_فرم_کار, تاریخ_فرم_کار, سرپرست, مبدا, محل_فعالیت, اعضا, گروه, واحد, توضیح_کار, کد_هزینه, نام_پروژه, شرح_کار, Srl_Pm_Ashkhas_Sarparast}
            rowRp_WorkFormMasterSearchRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_WorkFormMasterSearchRow)
            Return rowRp_WorkFormMasterSearchRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_WorkFormMasterSearchRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_WorkFormMasterSearchRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_WorkFormMasterSearchDataTable = CType(MyBase.Clone,Rp_WorkFormMasterSearchDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_WorkFormMasterSearchDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnشماره_فرم_کار = MyBase.Columns("شماره فرم کار")
            Me.columnتاریخ_فرم_کار = MyBase.Columns("تاریخ فرم کار")
            Me.columnسرپرست = MyBase.Columns("سرپرست")
            Me.columnمبدا = MyBase.Columns("مبدا")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnاعضا = MyBase.Columns("اعضا")
            Me.columnگروه = MyBase.Columns("گروه")
            Me.columnواحد = MyBase.Columns("واحد")
            Me.columnتوضیح_کار = MyBase.Columns("توضیح کار")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnنام_پروژه = MyBase.Columns("نام پروژه")
            Me.columnشرح_کار = MyBase.Columns("شرح کار")
            Me.columnSrl_Pm_Ashkhas_Sarparast = MyBase.Columns("Srl_Pm_Ashkhas_Sarparast")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnشماره_فرم_کار = New Global.System.Data.DataColumn("شماره فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_کار)
            Me.columnتاریخ_فرم_کار = New Global.System.Data.DataColumn("تاریخ فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_فرم_کار)
            Me.columnسرپرست = New Global.System.Data.DataColumn("سرپرست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسرپرست)
            Me.columnمبدا = New Global.System.Data.DataColumn("مبدا", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمبدا)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnاعضا = New Global.System.Data.DataColumn("اعضا", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاعضا)
            Me.columnگروه = New Global.System.Data.DataColumn("گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnگروه)
            Me.columnواحد = New Global.System.Data.DataColumn("واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnواحد)
            Me.columnتوضیح_کار = New Global.System.Data.DataColumn("توضیح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوضیح_کار)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnنام_پروژه = New Global.System.Data.DataColumn("نام پروژه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پروژه)
            Me.columnشرح_کار = New Global.System.Data.DataColumn("شرح کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشرح_کار)
            Me.columnSrl_Pm_Ashkhas_Sarparast = New Global.System.Data.DataColumn("Srl_Pm_Ashkhas_Sarparast", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_Ashkhas_Sarparast)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
            Me.columnتاریخ.MaxLength = 11
            Me.columnشماره_فرم_کار.MaxLength = 50
            Me.columnتاریخ_فرم_کار.MaxLength = 11
            Me.columnسرپرست.ReadOnly = true
            Me.columnسرپرست.MaxLength = 101
            Me.columnمبدا.MaxLength = 50
            Me.columnمحل_فعالیت.MaxLength = 50
            Me.columnاعضا.ReadOnly = true
            Me.columnاعضا.MaxLength = 2147483647
            Me.columnگروه.MaxLength = 50
            Me.columnواحد.MaxLength = 400
            Me.columnتوضیح_کار.ReadOnly = true
            Me.columnتوضیح_کار.MaxLength = 400
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnنام_پروژه.MaxLength = 400
            Me.columnشرح_کار.MaxLength = 400
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_WorkFormMasterSearchRow() As Rp_WorkFormMasterSearchRow
            Return CType(Me.NewRow,Rp_WorkFormMasterSearchRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_WorkFormMasterSearchRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_WorkFormMasterSearchRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_WorkFormMasterSearchRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterSearchRowChanged(Me, New Rp_WorkFormMasterSearchRowChangeEvent(CType(e.Row,Rp_WorkFormMasterSearchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_WorkFormMasterSearchRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterSearchRowChanging(Me, New Rp_WorkFormMasterSearchRowChangeEvent(CType(e.Row,Rp_WorkFormMasterSearchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_WorkFormMasterSearchRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterSearchRowDeleted(Me, New Rp_WorkFormMasterSearchRowChangeEvent(CType(e.Row,Rp_WorkFormMasterSearchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_WorkFormMasterSearchRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkFormMasterSearchRowDeleting(Me, New Rp_WorkFormMasterSearchRowChangeEvent(CType(e.Row,Rp_WorkFormMasterSearchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_WorkFormMasterSearchRow(ByVal row As Rp_WorkFormMasterSearchRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_WorkFormMasterSearchDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_MultiEzafeKarDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_MultiEzafeKarRow)
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام_فرد As Global.System.Data.DataColumn
        
        Private columnکد_شناسایی As Global.System.Data.DataColumn
        
        Private columnفرم_کار As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnاضافه_کار As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnکسر_کار As Global.System.Data.DataColumn
        
        Private columnجمع_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnتعطیل As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_MultiEzafeKar"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_فردColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_فرد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_شناساییColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_شناسایی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کسر_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکسر_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعطیلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعطیل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_MultiEzafeKarRow
            Get
                Return CType(Me.Rows(index),Rp_MultiEzafeKarRow)
            End Get
        End Property
        
        Public Event Rp_MultiEzafeKarRowChanging As Rp_MultiEzafeKarRowChangeEventHandler
        
        Public Event Rp_MultiEzafeKarRowChanged As Rp_MultiEzafeKarRowChangeEventHandler
        
        Public Event Rp_MultiEzafeKarRowDeleting As Rp_MultiEzafeKarRowChangeEventHandler
        
        Public Event Rp_MultiEzafeKarRowDeleted As Rp_MultiEzafeKarRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_MultiEzafeKarRow(ByVal row As Rp_MultiEzafeKarRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_MultiEzafeKarRow(ByVal تاریخ As String, ByVal Srl As Integer, ByVal نام_فرد As String, ByVal کد_شناسایی As Long, ByVal فرم_کار As String, ByVal شماره As String, ByVal کد_هزینه As String, ByVal محل_فعالیت As String, ByVal اضافه_کار As String, ByVal اضافه_کار_تردد As String, ByVal کسر_کار As String, ByVal جمع_اضافه_کار As String, ByVal تعطیل As Integer) As Rp_MultiEzafeKarRow
            Dim rowRp_MultiEzafeKarRow As Rp_MultiEzafeKarRow = CType(Me.NewRow,Rp_MultiEzafeKarRow)
            Dim columnValuesArray() As Object = New Object() {تاریخ, Srl, نام_فرد, کد_شناسایی, فرم_کار, شماره, کد_هزینه, محل_فعالیت, اضافه_کار, اضافه_کار_تردد, کسر_کار, جمع_اضافه_کار, تعطیل}
            rowRp_MultiEzafeKarRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_MultiEzafeKarRow)
            Return rowRp_MultiEzafeKarRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_MultiEzafeKarDataTable = CType(MyBase.Clone,Rp_MultiEzafeKarDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_MultiEzafeKarDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام_فرد = MyBase.Columns("نام فرد")
            Me.columnکد_شناسایی = MyBase.Columns("کد شناسایی")
            Me.columnفرم_کار = MyBase.Columns("فرم کار")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnاضافه_کار = MyBase.Columns("اضافه کار")
            Me.columnاضافه_کار_تردد = MyBase.Columns("اضافه کار تردد")
            Me.columnکسر_کار = MyBase.Columns("کسر کار")
            Me.columnجمع_اضافه_کار = MyBase.Columns("جمع اضافه کار")
            Me.columnتعطیل = MyBase.Columns("تعطیل")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام_فرد = New Global.System.Data.DataColumn("نام فرد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_فرد)
            Me.columnکد_شناسایی = New Global.System.Data.DataColumn("کد شناسایی", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_شناسایی)
            Me.columnفرم_کار = New Global.System.Data.DataColumn("فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرم_کار)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnاضافه_کار = New Global.System.Data.DataColumn("اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار)
            Me.columnاضافه_کار_تردد = New Global.System.Data.DataColumn("اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_تردد)
            Me.columnکسر_کار = New Global.System.Data.DataColumn("کسر کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکسر_کار)
            Me.columnجمع_اضافه_کار = New Global.System.Data.DataColumn("جمع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_اضافه_کار)
            Me.columnتعطیل = New Global.System.Data.DataColumn("تعطیل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعطیل)
            Me.columnتاریخ.ReadOnly = true
            Me.columnتاریخ.MaxLength = 10
            Me.columnSrl.ReadOnly = true
            Me.columnنام_فرد.ReadOnly = true
            Me.columnنام_فرد.MaxLength = 101
            Me.columnکد_شناسایی.ReadOnly = true
            Me.columnفرم_کار.ReadOnly = true
            Me.columnفرم_کار.MaxLength = 50
            Me.columnشماره.ReadOnly = true
            Me.columnشماره.MaxLength = 30
            Me.columnکد_هزینه.ReadOnly = true
            Me.columnکد_هزینه.MaxLength = 100
            Me.columnمحل_فعالیت.ReadOnly = true
            Me.columnمحل_فعالیت.MaxLength = 500
            Me.columnاضافه_کار.ReadOnly = true
            Me.columnاضافه_کار.MaxLength = 30
            Me.columnاضافه_کار_تردد.ReadOnly = true
            Me.columnاضافه_کار_تردد.MaxLength = 5
            Me.columnکسر_کار.ReadOnly = true
            Me.columnکسر_کار.MaxLength = 17
            Me.columnجمع_اضافه_کار.ReadOnly = true
            Me.columnجمع_اضافه_کار.MaxLength = 61
            Me.columnتعطیل.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_MultiEzafeKarRow() As Rp_MultiEzafeKarRow
            Return CType(Me.NewRow,Rp_MultiEzafeKarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_MultiEzafeKarRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_MultiEzafeKarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_MultiEzafeKarRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_MultiEzafeKarRowChanged(Me, New Rp_MultiEzafeKarRowChangeEvent(CType(e.Row,Rp_MultiEzafeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_MultiEzafeKarRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_MultiEzafeKarRowChanging(Me, New Rp_MultiEzafeKarRowChangeEvent(CType(e.Row,Rp_MultiEzafeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_MultiEzafeKarRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_MultiEzafeKarRowDeleted(Me, New Rp_MultiEzafeKarRowChangeEvent(CType(e.Row,Rp_MultiEzafeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_MultiEzafeKarRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_MultiEzafeKarRowDeleting(Me, New Rp_MultiEzafeKarRowChangeEvent(CType(e.Row,Rp_MultiEzafeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_MultiEzafeKarRow(ByVal row As Rp_MultiEzafeKarRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_MultiEzafeKarDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_ReleDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_ReleRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnمدل As Global.System.Data.DataColumn
        
        Private columnتاریخ_ساخت As Global.System.Data.DataColumn
        
        Private columnتاریخ_بهره_برداری As Global.System.Data.DataColumn
        
        Private columnشماره_سریال As Global.System.Data.DataColumn
        
        Private columnکد_دیسپاچینگ As Global.System.Data.DataColumn
        
        Private columnنسبت_CT As Global.System.Data.DataColumn
        
        Private columnنسبت_VT As Global.System.Data.DataColumn
        
        Private columnکد_سفارش As Global.System.Data.DataColumn
        
        Private columnسازنده As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Rele"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مدلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمدل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ساختColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ساخت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_سریالColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_سریال
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_دیسپاچینگColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_دیسپاچینگ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نسبت_CTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنسبت_CT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نسبت_VTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنسبت_VT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_سفارشColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_سفارش
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سازندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسازنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_ReleRow
            Get
                Return CType(Me.Rows(index),Rp_ReleRow)
            End Get
        End Property
        
        Public Event Rp_ReleRowChanging As Rp_ReleRowChangeEventHandler
        
        Public Event Rp_ReleRowChanged As Rp_ReleRowChangeEventHandler
        
        Public Event Rp_ReleRowDeleting As Rp_ReleRowChangeEventHandler
        
        Public Event Rp_ReleRowDeleted As Rp_ReleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_ReleRow(ByVal row As Rp_ReleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_ReleRow(ByVal نام As String, ByVal نام_پست As String, ByVal مدل As String, ByVal تاریخ_ساخت As String, ByVal تاریخ_بهره_برداری As String, ByVal شماره_سریال As String, ByVal کد_دیسپاچینگ As String, ByVal نسبت_CT As String, ByVal نسبت_VT As String, ByVal کد_سفارش As String, ByVal سازنده As String) As Rp_ReleRow
            Dim rowRp_ReleRow As Rp_ReleRow = CType(Me.NewRow,Rp_ReleRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, نام, نام_پست, مدل, تاریخ_ساخت, تاریخ_بهره_برداری, شماره_سریال, کد_دیسپاچینگ, نسبت_CT, نسبت_VT, کد_سفارش, سازنده}
            rowRp_ReleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_ReleRow)
            Return rowRp_ReleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_ReleDataTable = CType(MyBase.Clone,Rp_ReleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_ReleDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnمدل = MyBase.Columns("مدل")
            Me.columnتاریخ_ساخت = MyBase.Columns("تاریخ ساخت")
            Me.columnتاریخ_بهره_برداری = MyBase.Columns("تاریخ بهره برداری")
            Me.columnشماره_سریال = MyBase.Columns("شماره سریال")
            Me.columnکد_دیسپاچینگ = MyBase.Columns("کد دیسپاچینگ")
            Me.columnنسبت_CT = MyBase.Columns("نسبت CT")
            Me.columnنسبت_VT = MyBase.Columns("نسبت VT")
            Me.columnکد_سفارش = MyBase.Columns("کد سفارش")
            Me.columnسازنده = MyBase.Columns("سازنده")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnمدل = New Global.System.Data.DataColumn("مدل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمدل)
            Me.columnتاریخ_ساخت = New Global.System.Data.DataColumn("تاریخ ساخت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ساخت)
            Me.columnتاریخ_بهره_برداری = New Global.System.Data.DataColumn("تاریخ بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_بهره_برداری)
            Me.columnشماره_سریال = New Global.System.Data.DataColumn("شماره سریال", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_سریال)
            Me.columnکد_دیسپاچینگ = New Global.System.Data.DataColumn("کد دیسپاچینگ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_دیسپاچینگ)
            Me.columnنسبت_CT = New Global.System.Data.DataColumn("نسبت CT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنسبت_CT)
            Me.columnنسبت_VT = New Global.System.Data.DataColumn("نسبت VT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنسبت_VT)
            Me.columnکد_سفارش = New Global.System.Data.DataColumn("کد سفارش", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_سفارش)
            Me.columnسازنده = New Global.System.Data.DataColumn("سازنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسازنده)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnنام.MaxLength = 2147483647
            Me.columnنام_پست.MaxLength = 50
            Me.columnمدل.MaxLength = 50
            Me.columnتاریخ_ساخت.MaxLength = 10
            Me.columnتاریخ_بهره_برداری.MaxLength = 10
            Me.columnشماره_سریال.MaxLength = 50
            Me.columnکد_دیسپاچینگ.MaxLength = 50
            Me.columnنسبت_CT.MaxLength = 50
            Me.columnنسبت_VT.MaxLength = 50
            Me.columnکد_سفارش.MaxLength = 50
            Me.columnسازنده.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_ReleRow() As Rp_ReleRow
            Return CType(Me.NewRow,Rp_ReleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_ReleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_ReleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_ReleRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_ReleRowChanged(Me, New Rp_ReleRowChangeEvent(CType(e.Row,Rp_ReleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_ReleRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_ReleRowChanging(Me, New Rp_ReleRowChangeEvent(CType(e.Row,Rp_ReleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_ReleRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_ReleRowDeleted(Me, New Rp_ReleRowChangeEvent(CType(e.Row,Rp_ReleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_ReleRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_ReleRowDeleting(Me, New Rp_ReleRowChangeEvent(CType(e.Row,Rp_ReleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_ReleRow(ByVal row As Rp_ReleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_ReleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_TranseGhodratDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_TranseGhodratRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnمدل As Global.System.Data.DataColumn
        
        Private columnتاریخ_ساخت As Global.System.Data.DataColumn
        
        Private columnتاریخ_بهره_برداری As Global.System.Data.DataColumn
        
        Private columnسازنده As Global.System.Data.DataColumn
        
        Private columnشماره_سریال As Global.System.Data.DataColumn
        
        Private columnکد_دیسپاچینگ As Global.System.Data.DataColumn
        
        Private columnخنک_کننده As Global.System.Data.DataColumn
        
        Private columnظرفیت_نامی As Global.System.Data.DataColumn
        
        Private columnگروه_برداری As Global.System.Data.DataColumn
        
        Private columnنسبت_تبدیل_ولتاژ As Global.System.Data.DataColumn
        
        Private columnسیستم_تغییر_تپ As Global.System.Data.DataColumn
        
        Private columnمکان_تپ As Global.System.Data.DataColumn
        
        Private columnنسبت_تبدیل_جریان As Global.System.Data.DataColumn
        
        Private columnBill As Global.System.Data.DataColumn
        
        Private columnدرصد_امپدانس As Global.System.Data.DataColumn
        
        Private columnفرکانس As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_TranseGhodrat"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مدلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمدل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ساختColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ساخت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سازندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسازنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_سریالColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_سریال
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_دیسپاچینگColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_دیسپاچینگ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property خنک_کنندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnخنک_کننده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ظرفیت_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnظرفیت_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property گروه_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnگروه_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نسبت_تبدیل_ولتاژColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنسبت_تبدیل_ولتاژ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سیستم_تغییر_تپColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسیستم_تغییر_تپ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مکان_تپColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمکان_تپ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نسبت_تبدیل_جریانColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنسبت_تبدیل_جریان
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property درصد_امپدانسColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnدرصد_امپدانس
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرکانسColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرکانس
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_TranseGhodratRow
            Get
                Return CType(Me.Rows(index),Rp_TranseGhodratRow)
            End Get
        End Property
        
        Public Event Rp_TranseGhodratRowChanging As Rp_TranseGhodratRowChangeEventHandler
        
        Public Event Rp_TranseGhodratRowChanged As Rp_TranseGhodratRowChangeEventHandler
        
        Public Event Rp_TranseGhodratRowDeleting As Rp_TranseGhodratRowChangeEventHandler
        
        Public Event Rp_TranseGhodratRowDeleted As Rp_TranseGhodratRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_TranseGhodratRow(ByVal row As Rp_TranseGhodratRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_TranseGhodratRow( _
                    ByVal نام As String,  _
                    ByVal نام_پست As String,  _
                    ByVal مدل As String,  _
                    ByVal تاریخ_ساخت As String,  _
                    ByVal تاریخ_بهره_برداری As String,  _
                    ByVal سازنده As String,  _
                    ByVal شماره_سریال As String,  _
                    ByVal کد_دیسپاچینگ As String,  _
                    ByVal خنک_کننده As String,  _
                    ByVal ظرفیت_نامی As String,  _
                    ByVal گروه_برداری As String,  _
                    ByVal نسبت_تبدیل_ولتاژ As String,  _
                    ByVal سیستم_تغییر_تپ As String,  _
                    ByVal مکان_تپ As String,  _
                    ByVal نسبت_تبدیل_جریان As String,  _
                    ByVal Bill As String,  _
                    ByVal درصد_امپدانس As String,  _
                    ByVal فرکانس As String) As Rp_TranseGhodratRow
            Dim rowRp_TranseGhodratRow As Rp_TranseGhodratRow = CType(Me.NewRow,Rp_TranseGhodratRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, نام, نام_پست, مدل, تاریخ_ساخت, تاریخ_بهره_برداری, سازنده, شماره_سریال, کد_دیسپاچینگ, خنک_کننده, ظرفیت_نامی, گروه_برداری, نسبت_تبدیل_ولتاژ, سیستم_تغییر_تپ, مکان_تپ, نسبت_تبدیل_جریان, Bill, درصد_امپدانس, فرکانس}
            rowRp_TranseGhodratRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_TranseGhodratRow)
            Return rowRp_TranseGhodratRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_TranseGhodratDataTable = CType(MyBase.Clone,Rp_TranseGhodratDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_TranseGhodratDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnمدل = MyBase.Columns("مدل")
            Me.columnتاریخ_ساخت = MyBase.Columns("تاریخ ساخت")
            Me.columnتاریخ_بهره_برداری = MyBase.Columns("تاریخ بهره برداری")
            Me.columnسازنده = MyBase.Columns("سازنده")
            Me.columnشماره_سریال = MyBase.Columns("شماره سریال")
            Me.columnکد_دیسپاچینگ = MyBase.Columns("کد دیسپاچینگ")
            Me.columnخنک_کننده = MyBase.Columns("خنک کننده")
            Me.columnظرفیت_نامی = MyBase.Columns("ظرفیت نامی")
            Me.columnگروه_برداری = MyBase.Columns("گروه برداری")
            Me.columnنسبت_تبدیل_ولتاژ = MyBase.Columns("نسبت تبدیل ولتاژ")
            Me.columnسیستم_تغییر_تپ = MyBase.Columns("سیستم تغییر تپ")
            Me.columnمکان_تپ = MyBase.Columns("مکان تپ")
            Me.columnنسبت_تبدیل_جریان = MyBase.Columns("نسبت تبدیل جریان")
            Me.columnBill = MyBase.Columns("Bill")
            Me.columnدرصد_امپدانس = MyBase.Columns("درصد امپدانس")
            Me.columnفرکانس = MyBase.Columns("فرکانس")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnمدل = New Global.System.Data.DataColumn("مدل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمدل)
            Me.columnتاریخ_ساخت = New Global.System.Data.DataColumn("تاریخ ساخت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ساخت)
            Me.columnتاریخ_بهره_برداری = New Global.System.Data.DataColumn("تاریخ بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_بهره_برداری)
            Me.columnسازنده = New Global.System.Data.DataColumn("سازنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسازنده)
            Me.columnشماره_سریال = New Global.System.Data.DataColumn("شماره سریال", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_سریال)
            Me.columnکد_دیسپاچینگ = New Global.System.Data.DataColumn("کد دیسپاچینگ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_دیسپاچینگ)
            Me.columnخنک_کننده = New Global.System.Data.DataColumn("خنک کننده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnخنک_کننده)
            Me.columnظرفیت_نامی = New Global.System.Data.DataColumn("ظرفیت نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnظرفیت_نامی)
            Me.columnگروه_برداری = New Global.System.Data.DataColumn("گروه برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnگروه_برداری)
            Me.columnنسبت_تبدیل_ولتاژ = New Global.System.Data.DataColumn("نسبت تبدیل ولتاژ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنسبت_تبدیل_ولتاژ)
            Me.columnسیستم_تغییر_تپ = New Global.System.Data.DataColumn("سیستم تغییر تپ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسیستم_تغییر_تپ)
            Me.columnمکان_تپ = New Global.System.Data.DataColumn("مکان تپ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمکان_تپ)
            Me.columnنسبت_تبدیل_جریان = New Global.System.Data.DataColumn("نسبت تبدیل جریان", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنسبت_تبدیل_جریان)
            Me.columnBill = New Global.System.Data.DataColumn("Bill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBill)
            Me.columnدرصد_امپدانس = New Global.System.Data.DataColumn("درصد امپدانس", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnدرصد_امپدانس)
            Me.columnفرکانس = New Global.System.Data.DataColumn("فرکانس", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرکانس)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnنام.MaxLength = 2147483647
            Me.columnنام_پست.MaxLength = 50
            Me.columnمدل.MaxLength = 50
            Me.columnتاریخ_ساخت.MaxLength = 10
            Me.columnتاریخ_بهره_برداری.MaxLength = 10
            Me.columnسازنده.MaxLength = 50
            Me.columnشماره_سریال.MaxLength = 50
            Me.columnکد_دیسپاچینگ.MaxLength = 50
            Me.columnخنک_کننده.MaxLength = 50
            Me.columnظرفیت_نامی.MaxLength = 50
            Me.columnگروه_برداری.MaxLength = 50
            Me.columnنسبت_تبدیل_ولتاژ.MaxLength = 50
            Me.columnسیستم_تغییر_تپ.MaxLength = 50
            Me.columnمکان_تپ.MaxLength = 50
            Me.columnنسبت_تبدیل_جریان.MaxLength = 50
            Me.columnBill.MaxLength = 50
            Me.columnدرصد_امپدانس.MaxLength = 50
            Me.columnفرکانس.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_TranseGhodratRow() As Rp_TranseGhodratRow
            Return CType(Me.NewRow,Rp_TranseGhodratRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_TranseGhodratRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_TranseGhodratRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_TranseGhodratRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_TranseGhodratRowChanged(Me, New Rp_TranseGhodratRowChangeEvent(CType(e.Row,Rp_TranseGhodratRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_TranseGhodratRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_TranseGhodratRowChanging(Me, New Rp_TranseGhodratRowChangeEvent(CType(e.Row,Rp_TranseGhodratRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_TranseGhodratRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_TranseGhodratRowDeleted(Me, New Rp_TranseGhodratRowChangeEvent(CType(e.Row,Rp_TranseGhodratRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_TranseGhodratRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_TranseGhodratRowDeleting(Me, New Rp_TranseGhodratRowChangeEvent(CType(e.Row,Rp_TranseGhodratRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_TranseGhodratRow(ByVal row As Rp_TranseGhodratRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_TranseGhodratDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_BarghgirDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_BarghgirRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnمدل As Global.System.Data.DataColumn
        
        Private columnتاریخ_ساخت As Global.System.Data.DataColumn
        
        Private columnتاریخ_بهره_برداری As Global.System.Data.DataColumn
        
        Private columnسازنده As Global.System.Data.DataColumn
        
        Private columnشماره_سریال As Global.System.Data.DataColumn
        
        Private columnکد_دیسپاچینگ As Global.System.Data.DataColumn
        
        Private columnتوان_نامی As Global.System.Data.DataColumn
        
        Private columnجریان_نامی As Global.System.Data.DataColumn
        
        Private columnولتاژ_نامی As Global.System.Data.DataColumn
        
        Private columnجریان_اتصال_کوتاه As Global.System.Data.DataColumn
        
        Private columnکلاس As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Barghgir"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مدلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمدل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ساختColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ساخت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سازندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسازنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_سریالColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_سریال
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_دیسپاچینگColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_دیسپاچینگ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توان_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوان_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ولتاژ_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnولتاژ_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_اتصال_کوتاهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_اتصال_کوتاه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلاسColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکلاس
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_BarghgirRow
            Get
                Return CType(Me.Rows(index),Rp_BarghgirRow)
            End Get
        End Property
        
        Public Event Rp_BarghgirRowChanging As Rp_BarghgirRowChangeEventHandler
        
        Public Event Rp_BarghgirRowChanged As Rp_BarghgirRowChangeEventHandler
        
        Public Event Rp_BarghgirRowDeleting As Rp_BarghgirRowChangeEventHandler
        
        Public Event Rp_BarghgirRowDeleted As Rp_BarghgirRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_BarghgirRow(ByVal row As Rp_BarghgirRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_BarghgirRow(ByVal نام As String, ByVal نام_پست As String, ByVal مدل As String, ByVal تاریخ_ساخت As String, ByVal تاریخ_بهره_برداری As String, ByVal سازنده As String, ByVal شماره_سریال As String, ByVal کد_دیسپاچینگ As String, ByVal توان_نامی As String, ByVal جریان_نامی As String, ByVal ولتاژ_نامی As String, ByVal جریان_اتصال_کوتاه As String, ByVal کلاس As String) As Rp_BarghgirRow
            Dim rowRp_BarghgirRow As Rp_BarghgirRow = CType(Me.NewRow,Rp_BarghgirRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, نام, نام_پست, مدل, تاریخ_ساخت, تاریخ_بهره_برداری, سازنده, شماره_سریال, کد_دیسپاچینگ, توان_نامی, جریان_نامی, ولتاژ_نامی, جریان_اتصال_کوتاه, کلاس}
            rowRp_BarghgirRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_BarghgirRow)
            Return rowRp_BarghgirRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_BarghgirDataTable = CType(MyBase.Clone,Rp_BarghgirDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_BarghgirDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnمدل = MyBase.Columns("مدل")
            Me.columnتاریخ_ساخت = MyBase.Columns("تاریخ ساخت")
            Me.columnتاریخ_بهره_برداری = MyBase.Columns("تاریخ بهره برداری")
            Me.columnسازنده = MyBase.Columns("سازنده")
            Me.columnشماره_سریال = MyBase.Columns("شماره سریال")
            Me.columnکد_دیسپاچینگ = MyBase.Columns("کد دیسپاچینگ")
            Me.columnتوان_نامی = MyBase.Columns("توان نامی")
            Me.columnجریان_نامی = MyBase.Columns("جریان نامی")
            Me.columnولتاژ_نامی = MyBase.Columns("ولتاژ نامی")
            Me.columnجریان_اتصال_کوتاه = MyBase.Columns("جریان اتصال کوتاه")
            Me.columnکلاس = MyBase.Columns("کلاس")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnمدل = New Global.System.Data.DataColumn("مدل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمدل)
            Me.columnتاریخ_ساخت = New Global.System.Data.DataColumn("تاریخ ساخت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ساخت)
            Me.columnتاریخ_بهره_برداری = New Global.System.Data.DataColumn("تاریخ بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_بهره_برداری)
            Me.columnسازنده = New Global.System.Data.DataColumn("سازنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسازنده)
            Me.columnشماره_سریال = New Global.System.Data.DataColumn("شماره سریال", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_سریال)
            Me.columnکد_دیسپاچینگ = New Global.System.Data.DataColumn("کد دیسپاچینگ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_دیسپاچینگ)
            Me.columnتوان_نامی = New Global.System.Data.DataColumn("توان نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوان_نامی)
            Me.columnجریان_نامی = New Global.System.Data.DataColumn("جریان نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_نامی)
            Me.columnولتاژ_نامی = New Global.System.Data.DataColumn("ولتاژ نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnولتاژ_نامی)
            Me.columnجریان_اتصال_کوتاه = New Global.System.Data.DataColumn("جریان اتصال کوتاه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_اتصال_کوتاه)
            Me.columnکلاس = New Global.System.Data.DataColumn("کلاس", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکلاس)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnنام.MaxLength = 2147483647
            Me.columnنام_پست.MaxLength = 50
            Me.columnمدل.MaxLength = 50
            Me.columnتاریخ_ساخت.MaxLength = 10
            Me.columnتاریخ_بهره_برداری.MaxLength = 10
            Me.columnسازنده.MaxLength = 50
            Me.columnشماره_سریال.MaxLength = 50
            Me.columnکد_دیسپاچینگ.MaxLength = 50
            Me.columnتوان_نامی.MaxLength = 50
            Me.columnجریان_نامی.MaxLength = 50
            Me.columnولتاژ_نامی.MaxLength = 50
            Me.columnجریان_اتصال_کوتاه.MaxLength = 50
            Me.columnکلاس.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_BarghgirRow() As Rp_BarghgirRow
            Return CType(Me.NewRow,Rp_BarghgirRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_BarghgirRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_BarghgirRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_BarghgirRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_BarghgirRowChanged(Me, New Rp_BarghgirRowChangeEvent(CType(e.Row,Rp_BarghgirRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_BarghgirRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_BarghgirRowChanging(Me, New Rp_BarghgirRowChangeEvent(CType(e.Row,Rp_BarghgirRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_BarghgirRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_BarghgirRowDeleted(Me, New Rp_BarghgirRowChangeEvent(CType(e.Row,Rp_BarghgirRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_BarghgirRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_BarghgirRowDeleting(Me, New Rp_BarghgirRowChangeEvent(CType(e.Row,Rp_BarghgirRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_BarghgirRow(ByVal row As Rp_BarghgirRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_BarghgirDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_SexionerDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_SexionerRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnمدل As Global.System.Data.DataColumn
        
        Private columnتاریخ_ساخت As Global.System.Data.DataColumn
        
        Private columnتاریخ_بهره_برداری As Global.System.Data.DataColumn
        
        Private columnسازنده As Global.System.Data.DataColumn
        
        Private columnشماره_سریال As Global.System.Data.DataColumn
        
        Private columnکد_دیسپاچینگ As Global.System.Data.DataColumn
        
        Private columnجریان_نامی As Global.System.Data.DataColumn
        
        Private columnولتاژ_نامی As Global.System.Data.DataColumn
        
        Private columnجریان_اتصال_کوتاه As Global.System.Data.DataColumn
        
        Private columnحداکثر_جریان As Global.System.Data.DataColumn
        
        Private columnولتاژ_قابل_بهره_برداری As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Sexioner"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مدلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمدل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ساختColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ساخت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سازندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسازنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_سریالColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_سریال
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_دیسپاچینگColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_دیسپاچینگ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ولتاژ_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnولتاژ_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_اتصال_کوتاهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_اتصال_کوتاه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property حداکثر_جریانColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnحداکثر_جریان
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ولتاژ_قابل_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnولتاژ_قابل_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_SexionerRow
            Get
                Return CType(Me.Rows(index),Rp_SexionerRow)
            End Get
        End Property
        
        Public Event Rp_SexionerRowChanging As Rp_SexionerRowChangeEventHandler
        
        Public Event Rp_SexionerRowChanged As Rp_SexionerRowChangeEventHandler
        
        Public Event Rp_SexionerRowDeleting As Rp_SexionerRowChangeEventHandler
        
        Public Event Rp_SexionerRowDeleted As Rp_SexionerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_SexionerRow(ByVal row As Rp_SexionerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_SexionerRow(ByVal نام As String, ByVal نام_پست As String, ByVal مدل As String, ByVal تاریخ_ساخت As String, ByVal تاریخ_بهره_برداری As String, ByVal سازنده As String, ByVal شماره_سریال As String, ByVal کد_دیسپاچینگ As String, ByVal جریان_نامی As String, ByVal ولتاژ_نامی As String, ByVal جریان_اتصال_کوتاه As String, ByVal حداکثر_جریان As String, ByVal ولتاژ_قابل_بهره_برداری As String) As Rp_SexionerRow
            Dim rowRp_SexionerRow As Rp_SexionerRow = CType(Me.NewRow,Rp_SexionerRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, نام, نام_پست, مدل, تاریخ_ساخت, تاریخ_بهره_برداری, سازنده, شماره_سریال, کد_دیسپاچینگ, جریان_نامی, ولتاژ_نامی, جریان_اتصال_کوتاه, حداکثر_جریان, ولتاژ_قابل_بهره_برداری}
            rowRp_SexionerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_SexionerRow)
            Return rowRp_SexionerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_SexionerDataTable = CType(MyBase.Clone,Rp_SexionerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_SexionerDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnمدل = MyBase.Columns("مدل")
            Me.columnتاریخ_ساخت = MyBase.Columns("تاریخ ساخت")
            Me.columnتاریخ_بهره_برداری = MyBase.Columns("تاریخ بهره برداری")
            Me.columnسازنده = MyBase.Columns("سازنده")
            Me.columnشماره_سریال = MyBase.Columns("شماره سریال")
            Me.columnکد_دیسپاچینگ = MyBase.Columns("کد دیسپاچینگ")
            Me.columnجریان_نامی = MyBase.Columns("جریان نامی")
            Me.columnولتاژ_نامی = MyBase.Columns("ولتاژ نامی")
            Me.columnجریان_اتصال_کوتاه = MyBase.Columns("جریان اتصال کوتاه")
            Me.columnحداکثر_جریان = MyBase.Columns("حداکثر جریان")
            Me.columnولتاژ_قابل_بهره_برداری = MyBase.Columns("ولتاژ قابل بهره برداری")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnمدل = New Global.System.Data.DataColumn("مدل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمدل)
            Me.columnتاریخ_ساخت = New Global.System.Data.DataColumn("تاریخ ساخت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ساخت)
            Me.columnتاریخ_بهره_برداری = New Global.System.Data.DataColumn("تاریخ بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_بهره_برداری)
            Me.columnسازنده = New Global.System.Data.DataColumn("سازنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسازنده)
            Me.columnشماره_سریال = New Global.System.Data.DataColumn("شماره سریال", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_سریال)
            Me.columnکد_دیسپاچینگ = New Global.System.Data.DataColumn("کد دیسپاچینگ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_دیسپاچینگ)
            Me.columnجریان_نامی = New Global.System.Data.DataColumn("جریان نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_نامی)
            Me.columnولتاژ_نامی = New Global.System.Data.DataColumn("ولتاژ نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnولتاژ_نامی)
            Me.columnجریان_اتصال_کوتاه = New Global.System.Data.DataColumn("جریان اتصال کوتاه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_اتصال_کوتاه)
            Me.columnحداکثر_جریان = New Global.System.Data.DataColumn("حداکثر جریان", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnحداکثر_جریان)
            Me.columnولتاژ_قابل_بهره_برداری = New Global.System.Data.DataColumn("ولتاژ قابل بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnولتاژ_قابل_بهره_برداری)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnنام.MaxLength = 2147483647
            Me.columnنام_پست.MaxLength = 50
            Me.columnمدل.MaxLength = 50
            Me.columnتاریخ_ساخت.MaxLength = 10
            Me.columnتاریخ_بهره_برداری.MaxLength = 10
            Me.columnسازنده.MaxLength = 50
            Me.columnشماره_سریال.MaxLength = 50
            Me.columnکد_دیسپاچینگ.MaxLength = 50
            Me.columnجریان_نامی.MaxLength = 50
            Me.columnولتاژ_نامی.MaxLength = 50
            Me.columnجریان_اتصال_کوتاه.MaxLength = 50
            Me.columnحداکثر_جریان.MaxLength = 50
            Me.columnولتاژ_قابل_بهره_برداری.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_SexionerRow() As Rp_SexionerRow
            Return CType(Me.NewRow,Rp_SexionerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_SexionerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_SexionerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_SexionerRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_SexionerRowChanged(Me, New Rp_SexionerRowChangeEvent(CType(e.Row,Rp_SexionerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_SexionerRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_SexionerRowChanging(Me, New Rp_SexionerRowChangeEvent(CType(e.Row,Rp_SexionerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_SexionerRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_SexionerRowDeleted(Me, New Rp_SexionerRowChangeEvent(CType(e.Row,Rp_SexionerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_SexionerRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_SexionerRowDeleting(Me, New Rp_SexionerRowChangeEvent(CType(e.Row,Rp_SexionerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_SexionerRow(ByVal row As Rp_SexionerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_SexionerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_BreakerDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_BreakerRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnمدل As Global.System.Data.DataColumn
        
        Private columnتاریخ_ساخت As Global.System.Data.DataColumn
        
        Private columnتاریخ_بهره_برداری As Global.System.Data.DataColumn
        
        Private columnسازنده As Global.System.Data.DataColumn
        
        Private columnشماره_سریال As Global.System.Data.DataColumn
        
        Private columnکد_دیسپاچینگ As Global.System.Data.DataColumn
        
        Private columnجریان_نامی As Global.System.Data.DataColumn
        
        Private columnولتاژ_نامی As Global.System.Data.DataColumn
        
        Private columnجریان_اتصال_کوتاه As Global.System.Data.DataColumn
        
        Private columnحداکثر_جریان As Global.System.Data.DataColumn
        
        Private columnحداکثر_ولتاژ As Global.System.Data.DataColumn
        
        Private columnزمان_قطع As Global.System.Data.DataColumn
        
        Private columnزمان_وصل As Global.System.Data.DataColumn
        
        Private columnBill As Global.System.Data.DataColumn
        
        Private columnنوع_مکانیزم As Global.System.Data.DataColumn
        
        Private columnسیستم_خاموش_کننده As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Breaker"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مدلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمدل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ساختColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ساخت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سازندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسازنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_سریالColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_سریال
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_دیسپاچینگColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_دیسپاچینگ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ولتاژ_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnولتاژ_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_اتصال_کوتاهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_اتصال_کوتاه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property حداکثر_جریانColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnحداکثر_جریان
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property حداکثر_ولتاژColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnحداکثر_ولتاژ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property زمان_قطعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnزمان_قطع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property زمان_وصلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnزمان_وصل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نوع_مکانیزمColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنوع_مکانیزم
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سیستم_خاموش_کنندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسیستم_خاموش_کننده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_BreakerRow
            Get
                Return CType(Me.Rows(index),Rp_BreakerRow)
            End Get
        End Property
        
        Public Event Rp_BreakerRowChanging As Rp_BreakerRowChangeEventHandler
        
        Public Event Rp_BreakerRowChanged As Rp_BreakerRowChangeEventHandler
        
        Public Event Rp_BreakerRowDeleting As Rp_BreakerRowChangeEventHandler
        
        Public Event Rp_BreakerRowDeleted As Rp_BreakerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_BreakerRow(ByVal row As Rp_BreakerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_BreakerRow( _
                    ByVal نام As String,  _
                    ByVal نام_پست As String,  _
                    ByVal مدل As String,  _
                    ByVal تاریخ_ساخت As String,  _
                    ByVal تاریخ_بهره_برداری As String,  _
                    ByVal سازنده As String,  _
                    ByVal شماره_سریال As String,  _
                    ByVal کد_دیسپاچینگ As String,  _
                    ByVal جریان_نامی As String,  _
                    ByVal ولتاژ_نامی As String,  _
                    ByVal جریان_اتصال_کوتاه As String,  _
                    ByVal حداکثر_جریان As String,  _
                    ByVal حداکثر_ولتاژ As String,  _
                    ByVal زمان_قطع As String,  _
                    ByVal زمان_وصل As String,  _
                    ByVal Bill As String,  _
                    ByVal نوع_مکانیزم As String,  _
                    ByVal سیستم_خاموش_کننده As String) As Rp_BreakerRow
            Dim rowRp_BreakerRow As Rp_BreakerRow = CType(Me.NewRow,Rp_BreakerRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, نام, نام_پست, مدل, تاریخ_ساخت, تاریخ_بهره_برداری, سازنده, شماره_سریال, کد_دیسپاچینگ, جریان_نامی, ولتاژ_نامی, جریان_اتصال_کوتاه, حداکثر_جریان, حداکثر_ولتاژ, زمان_قطع, زمان_وصل, Bill, نوع_مکانیزم, سیستم_خاموش_کننده}
            rowRp_BreakerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_BreakerRow)
            Return rowRp_BreakerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_BreakerDataTable = CType(MyBase.Clone,Rp_BreakerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_BreakerDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnمدل = MyBase.Columns("مدل")
            Me.columnتاریخ_ساخت = MyBase.Columns("تاریخ ساخت")
            Me.columnتاریخ_بهره_برداری = MyBase.Columns("تاریخ بهره برداری")
            Me.columnسازنده = MyBase.Columns("سازنده")
            Me.columnشماره_سریال = MyBase.Columns("شماره سریال")
            Me.columnکد_دیسپاچینگ = MyBase.Columns("کد دیسپاچینگ")
            Me.columnجریان_نامی = MyBase.Columns("جریان نامی")
            Me.columnولتاژ_نامی = MyBase.Columns("ولتاژ نامی")
            Me.columnجریان_اتصال_کوتاه = MyBase.Columns("جریان اتصال کوتاه")
            Me.columnحداکثر_جریان = MyBase.Columns("حداکثر جریان")
            Me.columnحداکثر_ولتاژ = MyBase.Columns("حداکثر ولتاژ")
            Me.columnزمان_قطع = MyBase.Columns("زمان قطع")
            Me.columnزمان_وصل = MyBase.Columns("زمان وصل")
            Me.columnBill = MyBase.Columns("Bill")
            Me.columnنوع_مکانیزم = MyBase.Columns("نوع مکانیزم")
            Me.columnسیستم_خاموش_کننده = MyBase.Columns("سیستم خاموش کننده")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnمدل = New Global.System.Data.DataColumn("مدل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمدل)
            Me.columnتاریخ_ساخت = New Global.System.Data.DataColumn("تاریخ ساخت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ساخت)
            Me.columnتاریخ_بهره_برداری = New Global.System.Data.DataColumn("تاریخ بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_بهره_برداری)
            Me.columnسازنده = New Global.System.Data.DataColumn("سازنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسازنده)
            Me.columnشماره_سریال = New Global.System.Data.DataColumn("شماره سریال", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_سریال)
            Me.columnکد_دیسپاچینگ = New Global.System.Data.DataColumn("کد دیسپاچینگ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_دیسپاچینگ)
            Me.columnجریان_نامی = New Global.System.Data.DataColumn("جریان نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_نامی)
            Me.columnولتاژ_نامی = New Global.System.Data.DataColumn("ولتاژ نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnولتاژ_نامی)
            Me.columnجریان_اتصال_کوتاه = New Global.System.Data.DataColumn("جریان اتصال کوتاه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_اتصال_کوتاه)
            Me.columnحداکثر_جریان = New Global.System.Data.DataColumn("حداکثر جریان", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnحداکثر_جریان)
            Me.columnحداکثر_ولتاژ = New Global.System.Data.DataColumn("حداکثر ولتاژ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnحداکثر_ولتاژ)
            Me.columnزمان_قطع = New Global.System.Data.DataColumn("زمان قطع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnزمان_قطع)
            Me.columnزمان_وصل = New Global.System.Data.DataColumn("زمان وصل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnزمان_وصل)
            Me.columnBill = New Global.System.Data.DataColumn("Bill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBill)
            Me.columnنوع_مکانیزم = New Global.System.Data.DataColumn("نوع مکانیزم", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنوع_مکانیزم)
            Me.columnسیستم_خاموش_کننده = New Global.System.Data.DataColumn("سیستم خاموش کننده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسیستم_خاموش_کننده)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnنام.MaxLength = 2147483647
            Me.columnنام_پست.MaxLength = 50
            Me.columnمدل.MaxLength = 50
            Me.columnتاریخ_ساخت.MaxLength = 10
            Me.columnتاریخ_بهره_برداری.MaxLength = 10
            Me.columnسازنده.MaxLength = 50
            Me.columnشماره_سریال.MaxLength = 50
            Me.columnکد_دیسپاچینگ.MaxLength = 50
            Me.columnجریان_نامی.MaxLength = 50
            Me.columnولتاژ_نامی.MaxLength = 50
            Me.columnجریان_اتصال_کوتاه.MaxLength = 50
            Me.columnحداکثر_جریان.MaxLength = 50
            Me.columnحداکثر_ولتاژ.MaxLength = 50
            Me.columnزمان_قطع.MaxLength = 50
            Me.columnزمان_وصل.MaxLength = 50
            Me.columnBill.MaxLength = 50
            Me.columnنوع_مکانیزم.MaxLength = 50
            Me.columnسیستم_خاموش_کننده.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_BreakerRow() As Rp_BreakerRow
            Return CType(Me.NewRow,Rp_BreakerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_BreakerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_BreakerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_BreakerRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_BreakerRowChanged(Me, New Rp_BreakerRowChangeEvent(CType(e.Row,Rp_BreakerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_BreakerRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_BreakerRowChanging(Me, New Rp_BreakerRowChangeEvent(CType(e.Row,Rp_BreakerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_BreakerRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_BreakerRowDeleted(Me, New Rp_BreakerRowChangeEvent(CType(e.Row,Rp_BreakerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_BreakerRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_BreakerRowDeleting(Me, New Rp_BreakerRowChangeEvent(CType(e.Row,Rp_BreakerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_BreakerRow(ByVal row As Rp_BreakerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_BreakerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_TeranseDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_TeranseRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnمدل As Global.System.Data.DataColumn
        
        Private columnتاریخ_ساخت As Global.System.Data.DataColumn
        
        Private columnتاریخ_بهره_برداری As Global.System.Data.DataColumn
        
        Private columnسازنده As Global.System.Data.DataColumn
        
        Private columnشماره_سریال As Global.System.Data.DataColumn
        
        Private columnکد_دیسپاچینگ As Global.System.Data.DataColumn
        
        Private columnجریان_نامی As Global.System.Data.DataColumn
        
        Private columnولتاژ_نامی As Global.System.Data.DataColumn
        
        Private columnجریان_اتصال_کوتاه As Global.System.Data.DataColumn
        
        Private columnحداکثر_جریان As Global.System.Data.DataColumn
        
        Private columnحداکثر_ولتاژ As Global.System.Data.DataColumn
        
        Private columnتعداد_هسته As Global.System.Data.DataColumn
        
        Private columnکلاس_دقت As Global.System.Data.DataColumn
        
        Private columnنسبت_تبدیل As Global.System.Data.DataColumn
        
        Private columnBill As Global.System.Data.DataColumn
        
        Private columnنوع_ترانس As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Teranse"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مدلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمدل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ساختColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ساخت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سازندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسازنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_سریالColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_سریال
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_دیسپاچینگColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_دیسپاچینگ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ولتاژ_نامیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnولتاژ_نامی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_اتصال_کوتاهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_اتصال_کوتاه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property حداکثر_جریانColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnحداکثر_جریان
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property حداکثر_ولتاژColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnحداکثر_ولتاژ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعداد_هستهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعداد_هسته
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلاس_دقتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکلاس_دقت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نسبت_تبدیلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنسبت_تبدیل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نوع_ترانسColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنوع_ترانس
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_TeranseRow
            Get
                Return CType(Me.Rows(index),Rp_TeranseRow)
            End Get
        End Property
        
        Public Event Rp_TeranseRowChanging As Rp_TeranseRowChangeEventHandler
        
        Public Event Rp_TeranseRowChanged As Rp_TeranseRowChangeEventHandler
        
        Public Event Rp_TeranseRowDeleting As Rp_TeranseRowChangeEventHandler
        
        Public Event Rp_TeranseRowDeleted As Rp_TeranseRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_TeranseRow(ByVal row As Rp_TeranseRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_TeranseRow( _
                    ByVal نام As String,  _
                    ByVal نام_پست As String,  _
                    ByVal مدل As String,  _
                    ByVal تاریخ_ساخت As String,  _
                    ByVal تاریخ_بهره_برداری As String,  _
                    ByVal سازنده As String,  _
                    ByVal شماره_سریال As String,  _
                    ByVal کد_دیسپاچینگ As String,  _
                    ByVal جریان_نامی As String,  _
                    ByVal ولتاژ_نامی As String,  _
                    ByVal جریان_اتصال_کوتاه As String,  _
                    ByVal حداکثر_جریان As String,  _
                    ByVal حداکثر_ولتاژ As String,  _
                    ByVal تعداد_هسته As String,  _
                    ByVal کلاس_دقت As String,  _
                    ByVal نسبت_تبدیل As String,  _
                    ByVal Bill As String,  _
                    ByVal نوع_ترانس As String) As Rp_TeranseRow
            Dim rowRp_TeranseRow As Rp_TeranseRow = CType(Me.NewRow,Rp_TeranseRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, نام, نام_پست, مدل, تاریخ_ساخت, تاریخ_بهره_برداری, سازنده, شماره_سریال, کد_دیسپاچینگ, جریان_نامی, ولتاژ_نامی, جریان_اتصال_کوتاه, حداکثر_جریان, حداکثر_ولتاژ, تعداد_هسته, کلاس_دقت, نسبت_تبدیل, Bill, نوع_ترانس}
            rowRp_TeranseRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_TeranseRow)
            Return rowRp_TeranseRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_TeranseDataTable = CType(MyBase.Clone,Rp_TeranseDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_TeranseDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnمدل = MyBase.Columns("مدل")
            Me.columnتاریخ_ساخت = MyBase.Columns("تاریخ ساخت")
            Me.columnتاریخ_بهره_برداری = MyBase.Columns("تاریخ بهره برداری")
            Me.columnسازنده = MyBase.Columns("سازنده")
            Me.columnشماره_سریال = MyBase.Columns("شماره سریال")
            Me.columnکد_دیسپاچینگ = MyBase.Columns("کد دیسپاچینگ")
            Me.columnجریان_نامی = MyBase.Columns("جریان نامی")
            Me.columnولتاژ_نامی = MyBase.Columns("ولتاژ نامی")
            Me.columnجریان_اتصال_کوتاه = MyBase.Columns("جریان اتصال کوتاه")
            Me.columnحداکثر_جریان = MyBase.Columns("حداکثر جریان")
            Me.columnحداکثر_ولتاژ = MyBase.Columns("حداکثر ولتاژ")
            Me.columnتعداد_هسته = MyBase.Columns("تعداد هسته")
            Me.columnکلاس_دقت = MyBase.Columns("کلاس دقت")
            Me.columnنسبت_تبدیل = MyBase.Columns("نسبت تبدیل")
            Me.columnBill = MyBase.Columns("Bill")
            Me.columnنوع_ترانس = MyBase.Columns("نوع ترانس")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnمدل = New Global.System.Data.DataColumn("مدل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمدل)
            Me.columnتاریخ_ساخت = New Global.System.Data.DataColumn("تاریخ ساخت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ساخت)
            Me.columnتاریخ_بهره_برداری = New Global.System.Data.DataColumn("تاریخ بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_بهره_برداری)
            Me.columnسازنده = New Global.System.Data.DataColumn("سازنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسازنده)
            Me.columnشماره_سریال = New Global.System.Data.DataColumn("شماره سریال", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_سریال)
            Me.columnکد_دیسپاچینگ = New Global.System.Data.DataColumn("کد دیسپاچینگ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_دیسپاچینگ)
            Me.columnجریان_نامی = New Global.System.Data.DataColumn("جریان نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_نامی)
            Me.columnولتاژ_نامی = New Global.System.Data.DataColumn("ولتاژ نامی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnولتاژ_نامی)
            Me.columnجریان_اتصال_کوتاه = New Global.System.Data.DataColumn("جریان اتصال کوتاه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_اتصال_کوتاه)
            Me.columnحداکثر_جریان = New Global.System.Data.DataColumn("حداکثر جریان", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnحداکثر_جریان)
            Me.columnحداکثر_ولتاژ = New Global.System.Data.DataColumn("حداکثر ولتاژ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnحداکثر_ولتاژ)
            Me.columnتعداد_هسته = New Global.System.Data.DataColumn("تعداد هسته", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعداد_هسته)
            Me.columnکلاس_دقت = New Global.System.Data.DataColumn("کلاس دقت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکلاس_دقت)
            Me.columnنسبت_تبدیل = New Global.System.Data.DataColumn("نسبت تبدیل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنسبت_تبدیل)
            Me.columnBill = New Global.System.Data.DataColumn("Bill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBill)
            Me.columnنوع_ترانس = New Global.System.Data.DataColumn("نوع ترانس", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنوع_ترانس)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnنام.MaxLength = 2147483647
            Me.columnنام_پست.MaxLength = 50
            Me.columnمدل.MaxLength = 50
            Me.columnتاریخ_ساخت.MaxLength = 10
            Me.columnتاریخ_بهره_برداری.MaxLength = 10
            Me.columnسازنده.MaxLength = 50
            Me.columnشماره_سریال.MaxLength = 50
            Me.columnکد_دیسپاچینگ.MaxLength = 50
            Me.columnجریان_نامی.MaxLength = 50
            Me.columnولتاژ_نامی.MaxLength = 50
            Me.columnجریان_اتصال_کوتاه.MaxLength = 50
            Me.columnحداکثر_جریان.MaxLength = 50
            Me.columnحداکثر_ولتاژ.MaxLength = 50
            Me.columnتعداد_هسته.MaxLength = 50
            Me.columnکلاس_دقت.MaxLength = 50
            Me.columnنسبت_تبدیل.MaxLength = 50
            Me.columnBill.MaxLength = 50
            Me.columnنوع_ترانس.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_TeranseRow() As Rp_TeranseRow
            Return CType(Me.NewRow,Rp_TeranseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_TeranseRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_TeranseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_TeranseRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_TeranseRowChanged(Me, New Rp_TeranseRowChangeEvent(CType(e.Row,Rp_TeranseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_TeranseRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_TeranseRowChanging(Me, New Rp_TeranseRowChangeEvent(CType(e.Row,Rp_TeranseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_TeranseRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_TeranseRowDeleted(Me, New Rp_TeranseRowChangeEvent(CType(e.Row,Rp_TeranseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_TeranseRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_TeranseRowDeleting(Me, New Rp_TeranseRowChangeEvent(CType(e.Row,Rp_TeranseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_TeranseRow(ByVal row As Rp_TeranseRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_TeranseDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_TajhizDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_TajhizRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnمدل As Global.System.Data.DataColumn
        
        Private columnتاریخ_ساخت As Global.System.Data.DataColumn
        
        Private columnتاریخ_بهره_برداری As Global.System.Data.DataColumn
        
        Private columnسازنده As Global.System.Data.DataColumn
        
        Private columnشماره_سریال As Global.System.Data.DataColumn
        
        Private columnکد_دیسپاچینگ As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnکد_سفارش As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Tajhiz"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مدلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمدل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ساختColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ساخت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سازندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسازنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_سریالColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_سریال
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_دیسپاچینگColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_دیسپاچینگ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_سفارشColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_سفارش
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_TajhizRow
            Get
                Return CType(Me.Rows(index),Rp_TajhizRow)
            End Get
        End Property
        
        Public Event Rp_TajhizRowChanging As Rp_TajhizRowChangeEventHandler
        
        Public Event Rp_TajhizRowChanged As Rp_TajhizRowChangeEventHandler
        
        Public Event Rp_TajhizRowDeleting As Rp_TajhizRowChangeEventHandler
        
        Public Event Rp_TajhizRowDeleted As Rp_TajhizRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_TajhizRow(ByVal row As Rp_TajhizRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_TajhizRow(ByVal نام_پست As String, ByVal مدل As String, ByVal تاریخ_ساخت As String, ByVal تاریخ_بهره_برداری As String, ByVal سازنده As String, ByVal شماره_سریال As String, ByVal کد_دیسپاچینگ As String, ByVal نام As String, ByVal کد_سفارش As String) As Rp_TajhizRow
            Dim rowRp_TajhizRow As Rp_TajhizRow = CType(Me.NewRow,Rp_TajhizRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, نام_پست, مدل, تاریخ_ساخت, تاریخ_بهره_برداری, سازنده, شماره_سریال, کد_دیسپاچینگ, نام, کد_سفارش}
            rowRp_TajhizRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_TajhizRow)
            Return rowRp_TajhizRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_TajhizDataTable = CType(MyBase.Clone,Rp_TajhizDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_TajhizDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnمدل = MyBase.Columns("مدل")
            Me.columnتاریخ_ساخت = MyBase.Columns("تاریخ ساخت")
            Me.columnتاریخ_بهره_برداری = MyBase.Columns("تاریخ بهره برداری")
            Me.columnسازنده = MyBase.Columns("سازنده")
            Me.columnشماره_سریال = MyBase.Columns("شماره سریال")
            Me.columnکد_دیسپاچینگ = MyBase.Columns("کد دیسپاچینگ")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnکد_سفارش = MyBase.Columns("کد سفارش")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnمدل = New Global.System.Data.DataColumn("مدل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمدل)
            Me.columnتاریخ_ساخت = New Global.System.Data.DataColumn("تاریخ ساخت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ساخت)
            Me.columnتاریخ_بهره_برداری = New Global.System.Data.DataColumn("تاریخ بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_بهره_برداری)
            Me.columnسازنده = New Global.System.Data.DataColumn("سازنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسازنده)
            Me.columnشماره_سریال = New Global.System.Data.DataColumn("شماره سریال", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_سریال)
            Me.columnکد_دیسپاچینگ = New Global.System.Data.DataColumn("کد دیسپاچینگ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_دیسپاچینگ)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnکد_سفارش = New Global.System.Data.DataColumn("کد سفارش", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_سفارش)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnنام_پست.MaxLength = 50
            Me.columnمدل.MaxLength = 50
            Me.columnتاریخ_ساخت.MaxLength = 10
            Me.columnتاریخ_بهره_برداری.MaxLength = 10
            Me.columnسازنده.MaxLength = 50
            Me.columnشماره_سریال.MaxLength = 50
            Me.columnکد_دیسپاچینگ.MaxLength = 50
            Me.columnنام.MaxLength = 1000
            Me.columnکد_سفارش.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_TajhizRow() As Rp_TajhizRow
            Return CType(Me.NewRow,Rp_TajhizRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_TajhizRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_TajhizRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_TajhizRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_TajhizRowChanged(Me, New Rp_TajhizRowChangeEvent(CType(e.Row,Rp_TajhizRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_TajhizRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_TajhizRowChanging(Me, New Rp_TajhizRowChangeEvent(CType(e.Row,Rp_TajhizRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_TajhizRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_TajhizRowDeleted(Me, New Rp_TajhizRowChangeEvent(CType(e.Row,Rp_TajhizRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_TajhizRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_TajhizRowDeleting(Me, New Rp_TajhizRowChangeEvent(CType(e.Row,Rp_TajhizRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_TajhizRow(ByVal row As Rp_TajhizRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_TajhizDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_CableDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_CableRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnمدل As Global.System.Data.DataColumn
        
        Private columnتاریخ_ساخت As Global.System.Data.DataColumn
        
        Private columnتاریخ_بهره_برداری As Global.System.Data.DataColumn
        
        Private columnسازنده As Global.System.Data.DataColumn
        
        Private columnکد_دیسپاچینگ As Global.System.Data.DataColumn
        
        Private columnسطح_ولتاژ As Global.System.Data.DataColumn
        
        Private columnجریان_مجاز As Global.System.Data.DataColumn
        
        Private columnمقطع_کایل As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Cable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مدلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمدل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ساختColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ساخت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_بهره_برداریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_بهره_برداری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سازندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسازنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_دیسپاچینگColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_دیسپاچینگ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property سطح_ولتاژColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnسطح_ولتاژ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جریان_مجازColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجریان_مجاز
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مقطع_کایلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمقطع_کایل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_CableRow
            Get
                Return CType(Me.Rows(index),Rp_CableRow)
            End Get
        End Property
        
        Public Event Rp_CableRowChanging As Rp_CableRowChangeEventHandler
        
        Public Event Rp_CableRowChanged As Rp_CableRowChangeEventHandler
        
        Public Event Rp_CableRowDeleting As Rp_CableRowChangeEventHandler
        
        Public Event Rp_CableRowDeleted As Rp_CableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_CableRow(ByVal row As Rp_CableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_CableRow(ByVal نام As String, ByVal نام_پست As String, ByVal مدل As String, ByVal تاریخ_ساخت As String, ByVal تاریخ_بهره_برداری As String, ByVal سازنده As String, ByVal کد_دیسپاچینگ As String, ByVal سطح_ولتاژ As String, ByVal جریان_مجاز As String, ByVal مقطع_کایل As String) As Rp_CableRow
            Dim rowRp_CableRow As Rp_CableRow = CType(Me.NewRow,Rp_CableRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, نام, نام_پست, مدل, تاریخ_ساخت, تاریخ_بهره_برداری, سازنده, کد_دیسپاچینگ, سطح_ولتاژ, جریان_مجاز, مقطع_کایل}
            rowRp_CableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_CableRow)
            Return rowRp_CableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_CableDataTable = CType(MyBase.Clone,Rp_CableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_CableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnمدل = MyBase.Columns("مدل")
            Me.columnتاریخ_ساخت = MyBase.Columns("تاریخ ساخت")
            Me.columnتاریخ_بهره_برداری = MyBase.Columns("تاریخ بهره برداری")
            Me.columnسازنده = MyBase.Columns("سازنده")
            Me.columnکد_دیسپاچینگ = MyBase.Columns("کد دیسپاچینگ")
            Me.columnسطح_ولتاژ = MyBase.Columns("سطح ولتاژ")
            Me.columnجریان_مجاز = MyBase.Columns("جریان مجاز")
            Me.columnمقطع_کایل = MyBase.Columns("مقطع کایل")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnمدل = New Global.System.Data.DataColumn("مدل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمدل)
            Me.columnتاریخ_ساخت = New Global.System.Data.DataColumn("تاریخ ساخت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ساخت)
            Me.columnتاریخ_بهره_برداری = New Global.System.Data.DataColumn("تاریخ بهره برداری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_بهره_برداری)
            Me.columnسازنده = New Global.System.Data.DataColumn("سازنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسازنده)
            Me.columnکد_دیسپاچینگ = New Global.System.Data.DataColumn("کد دیسپاچینگ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_دیسپاچینگ)
            Me.columnسطح_ولتاژ = New Global.System.Data.DataColumn("سطح ولتاژ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnسطح_ولتاژ)
            Me.columnجریان_مجاز = New Global.System.Data.DataColumn("جریان مجاز", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجریان_مجاز)
            Me.columnمقطع_کایل = New Global.System.Data.DataColumn("مقطع کایل", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمقطع_کایل)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnنام.MaxLength = 2147483647
            Me.columnنام_پست.MaxLength = 50
            Me.columnمدل.MaxLength = 50
            Me.columnتاریخ_ساخت.MaxLength = 10
            Me.columnتاریخ_بهره_برداری.MaxLength = 10
            Me.columnسازنده.MaxLength = 50
            Me.columnکد_دیسپاچینگ.MaxLength = 50
            Me.columnسطح_ولتاژ.MaxLength = 50
            Me.columnجریان_مجاز.MaxLength = 50
            Me.columnمقطع_کایل.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_CableRow() As Rp_CableRow
            Return CType(Me.NewRow,Rp_CableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_CableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_CableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_CableRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_CableRowChanged(Me, New Rp_CableRowChangeEvent(CType(e.Row,Rp_CableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_CableRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_CableRowChanging(Me, New Rp_CableRowChangeEvent(CType(e.Row,Rp_CableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_CableRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_CableRowDeleted(Me, New Rp_CableRowChangeEvent(CType(e.Row,Rp_CableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_CableRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_CableRowDeleting(Me, New Rp_CableRowChangeEvent(CType(e.Row,Rp_CableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_CableRow(ByVal row As Rp_CableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_CableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_EibForm2DataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_EibForm2Row)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_نقص As Global.System.Data.DataColumn
        
        Private columnشماره_اصلی As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnنام_واحد As Global.System.Data.DataColumn
        
        Private columnتاریخ_ارجاع As Global.System.Data.DataColumn
        
        Private columnتاریخ_ثبت As Global.System.Data.DataColumn
        
        Private columnنام_گروه As Global.System.Data.DataColumn
        
        Private columnرفع_نقص As Global.System.Data.DataColumn
        
        Private columnفرم_کار As Global.System.Data.DataColumn
        
        Private columnشرح_نقص As Global.System.Data.DataColumn
        
        Private columnنوع_نقص As Global.System.Data.DataColumn
        
        Private columnتوضیحات As Global.System.Data.DataColumn
        
        Private columnنوع_تیپ As Global.System.Data.DataColumn
        
        Private columnتعداد_فرم_نقص As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_EibForm2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_اصلیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_اصلی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_واحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ارجاعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ارجاع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ثبتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ثبت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_گروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شرح_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشرح_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نوع_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنوع_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توضیحاتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوضیحات
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نوع_تیپColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنوع_تیپ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعداد_فرم_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعداد_فرم_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_EibForm2Row
            Get
                Return CType(Me.Rows(index),Rp_EibForm2Row)
            End Get
        End Property
        
        Public Event Rp_EibForm2RowChanging As Rp_EibForm2RowChangeEventHandler
        
        Public Event Rp_EibForm2RowChanged As Rp_EibForm2RowChangeEventHandler
        
        Public Event Rp_EibForm2RowDeleting As Rp_EibForm2RowChangeEventHandler
        
        Public Event Rp_EibForm2RowDeleted As Rp_EibForm2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_EibForm2Row(ByVal row As Rp_EibForm2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_EibForm2Row(ByVal شماره_فرم_نقص As Integer, ByVal شماره_اصلی As String, ByVal تاریخ As String, ByVal نام_پست As String, ByVal نام_واحد As String, ByVal تاریخ_ارجاع As String, ByVal تاریخ_ثبت As String, ByVal نام_گروه As String, ByVal رفع_نقص As String, ByVal فرم_کار As String, ByVal شرح_نقص As String, ByVal نوع_نقص As String, ByVal توضیحات As String, ByVal نوع_تیپ As String, ByVal تعداد_فرم_نقص As Integer) As Rp_EibForm2Row
            Dim rowRp_EibForm2Row As Rp_EibForm2Row = CType(Me.NewRow,Rp_EibForm2Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, شماره_فرم_نقص, شماره_اصلی, تاریخ, نام_پست, نام_واحد, تاریخ_ارجاع, تاریخ_ثبت, نام_گروه, رفع_نقص, فرم_کار, شرح_نقص, نوع_نقص, توضیحات, نوع_تیپ, تعداد_فرم_نقص}
            rowRp_EibForm2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_EibForm2Row)
            Return rowRp_EibForm2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_EibForm2DataTable = CType(MyBase.Clone,Rp_EibForm2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_EibForm2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnشماره_فرم_نقص = MyBase.Columns("شماره فرم نقص")
            Me.columnشماره_اصلی = MyBase.Columns("شماره اصلی")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnنام_واحد = MyBase.Columns("نام واحد")
            Me.columnتاریخ_ارجاع = MyBase.Columns("تاریخ ارجاع")
            Me.columnتاریخ_ثبت = MyBase.Columns("تاریخ ثبت")
            Me.columnنام_گروه = MyBase.Columns("نام گروه")
            Me.columnرفع_نقص = MyBase.Columns("رفع نقص")
            Me.columnفرم_کار = MyBase.Columns("فرم کار")
            Me.columnشرح_نقص = MyBase.Columns("شرح نقص")
            Me.columnنوع_نقص = MyBase.Columns("نوع نقص")
            Me.columnتوضیحات = MyBase.Columns("توضیحات")
            Me.columnنوع_تیپ = MyBase.Columns("نوع تیپ")
            Me.columnتعداد_فرم_نقص = MyBase.Columns("تعداد فرم نقص")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnشماره_فرم_نقص = New Global.System.Data.DataColumn("شماره فرم نقص", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_نقص)
            Me.columnشماره_اصلی = New Global.System.Data.DataColumn("شماره اصلی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_اصلی)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnنام_واحد = New Global.System.Data.DataColumn("نام واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_واحد)
            Me.columnتاریخ_ارجاع = New Global.System.Data.DataColumn("تاریخ ارجاع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ارجاع)
            Me.columnتاریخ_ثبت = New Global.System.Data.DataColumn("تاریخ ثبت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ثبت)
            Me.columnنام_گروه = New Global.System.Data.DataColumn("نام گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_گروه)
            Me.columnرفع_نقص = New Global.System.Data.DataColumn("رفع نقص", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_نقص)
            Me.columnفرم_کار = New Global.System.Data.DataColumn("فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرم_کار)
            Me.columnشرح_نقص = New Global.System.Data.DataColumn("شرح نقص", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشرح_نقص)
            Me.columnنوع_نقص = New Global.System.Data.DataColumn("نوع نقص", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنوع_نقص)
            Me.columnتوضیحات = New Global.System.Data.DataColumn("توضیحات", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوضیحات)
            Me.columnنوع_تیپ = New Global.System.Data.DataColumn("نوع تیپ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنوع_تیپ)
            Me.columnتعداد_فرم_نقص = New Global.System.Data.DataColumn("تعداد فرم نقص", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعداد_فرم_نقص)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnشماره_اصلی.MaxLength = 50
            Me.columnتاریخ.MaxLength = 10
            Me.columnنام_پست.MaxLength = 50
            Me.columnنام_واحد.MaxLength = 400
            Me.columnتاریخ_ارجاع.MaxLength = 10
            Me.columnتاریخ_ثبت.MaxLength = 10
            Me.columnنام_گروه.MaxLength = 50
            Me.columnرفع_نقص.MaxLength = 10
            Me.columnفرم_کار.MaxLength = 100
            Me.columnشرح_نقص.ReadOnly = true
            Me.columnشرح_نقص.MaxLength = 1000
            Me.columnنوع_نقص.ReadOnly = true
            Me.columnنوع_نقص.MaxLength = 1000
            Me.columnتوضیحات.MaxLength = 1000
            Me.columnنوع_تیپ.MaxLength = 50
            Me.columnتعداد_فرم_نقص.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_EibForm2Row() As Rp_EibForm2Row
            Return CType(Me.NewRow,Rp_EibForm2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_EibForm2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_EibForm2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_EibForm2RowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_EibForm2RowChanged(Me, New Rp_EibForm2RowChangeEvent(CType(e.Row,Rp_EibForm2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_EibForm2RowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_EibForm2RowChanging(Me, New Rp_EibForm2RowChangeEvent(CType(e.Row,Rp_EibForm2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_EibForm2RowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_EibForm2RowDeleted(Me, New Rp_EibForm2RowChangeEvent(CType(e.Row,Rp_EibForm2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_EibForm2RowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_EibForm2RowDeleting(Me, New Rp_EibForm2RowChangeEvent(CType(e.Row,Rp_EibForm2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_EibForm2Row(ByVal row As Rp_EibForm2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_EibForm2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Pm_PostPmDataTable
        Inherits Global.System.Data.TypedTableBase(Of Pm_PostPmRow)
        
        Private columnانجام_شده As Global.System.Data.DataColumn
        
        Private columnکنسل_شده As Global.System.Data.DataColumn
        
        Private columnانجام_نشده As Global.System.Data.DataColumn
        
        Private columnکل As Global.System.Data.DataColumn
        
        Private columnنام_تجهیز As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Pm_PostPm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property انجام_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnانجام_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کنسل_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکنسل_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property انجام_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnانجام_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_تجهیزColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_تجهیز
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Pm_PostPmRow
            Get
                Return CType(Me.Rows(index),Pm_PostPmRow)
            End Get
        End Property
        
        Public Event Pm_PostPmRowChanging As Pm_PostPmRowChangeEventHandler
        
        Public Event Pm_PostPmRowChanged As Pm_PostPmRowChangeEventHandler
        
        Public Event Pm_PostPmRowDeleting As Pm_PostPmRowChangeEventHandler
        
        Public Event Pm_PostPmRowDeleted As Pm_PostPmRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPm_PostPmRow(ByVal row As Pm_PostPmRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPm_PostPmRow(ByVal انجام_شده As Integer, ByVal کنسل_شده As Integer, ByVal انجام_نشده As Integer, ByVal کل As Integer, ByVal نام_تجهیز As String) As Pm_PostPmRow
            Dim rowPm_PostPmRow As Pm_PostPmRow = CType(Me.NewRow,Pm_PostPmRow)
            Dim columnValuesArray() As Object = New Object() {انجام_شده, کنسل_شده, انجام_نشده, کل, نام_تجهیز}
            rowPm_PostPmRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPm_PostPmRow)
            Return rowPm_PostPmRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Pm_PostPmDataTable = CType(MyBase.Clone,Pm_PostPmDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Pm_PostPmDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnانجام_شده = MyBase.Columns("انجام شده")
            Me.columnکنسل_شده = MyBase.Columns("کنسل شده")
            Me.columnانجام_نشده = MyBase.Columns("انجام نشده")
            Me.columnکل = MyBase.Columns("کل")
            Me.columnنام_تجهیز = MyBase.Columns("نام تجهیز")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnانجام_شده = New Global.System.Data.DataColumn("انجام شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnانجام_شده)
            Me.columnکنسل_شده = New Global.System.Data.DataColumn("کنسل شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکنسل_شده)
            Me.columnانجام_نشده = New Global.System.Data.DataColumn("انجام نشده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnانجام_نشده)
            Me.columnکل = New Global.System.Data.DataColumn("کل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکل)
            Me.columnنام_تجهیز = New Global.System.Data.DataColumn("نام تجهیز", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_تجهیز)
            Me.columnانجام_شده.ReadOnly = true
            Me.columnکنسل_شده.ReadOnly = true
            Me.columnانجام_نشده.ReadOnly = true
            Me.columnکل.ReadOnly = true
            Me.columnنام_تجهیز.ReadOnly = true
            Me.columnنام_تجهیز.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPm_PostPmRow() As Pm_PostPmRow
            Return CType(Me.NewRow,Pm_PostPmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Pm_PostPmRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Pm_PostPmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Pm_PostPmRowChangedEvent) Is Nothing) Then
                RaiseEvent Pm_PostPmRowChanged(Me, New Pm_PostPmRowChangeEvent(CType(e.Row,Pm_PostPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Pm_PostPmRowChangingEvent) Is Nothing) Then
                RaiseEvent Pm_PostPmRowChanging(Me, New Pm_PostPmRowChangeEvent(CType(e.Row,Pm_PostPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Pm_PostPmRowDeletedEvent) Is Nothing) Then
                RaiseEvent Pm_PostPmRowDeleted(Me, New Pm_PostPmRowChangeEvent(CType(e.Row,Pm_PostPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Pm_PostPmRowDeletingEvent) Is Nothing) Then
                RaiseEvent Pm_PostPmRowDeleting(Me, New Pm_PostPmRowChangeEvent(CType(e.Row,Pm_PostPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePm_PostPmRow(ByVal row As Pm_PostPmRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Pm_PostPmDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_TajhizPmDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_TajhizPmRow)
        
        Private columnانجام_شده As Global.System.Data.DataColumn
        
        Private columnکنسل_شده As Global.System.Data.DataColumn
        
        Private columnانجام_نشده As Global.System.Data.DataColumn
        
        Private columnکل As Global.System.Data.DataColumn
        
        Private columnنام_تجهیز As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_TajhizPm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property انجام_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnانجام_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کنسل_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکنسل_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property انجام_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnانجام_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_تجهیزColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_تجهیز
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_TajhizPmRow
            Get
                Return CType(Me.Rows(index),Rp_TajhizPmRow)
            End Get
        End Property
        
        Public Event Rp_TajhizPmRowChanging As Rp_TajhizPmRowChangeEventHandler
        
        Public Event Rp_TajhizPmRowChanged As Rp_TajhizPmRowChangeEventHandler
        
        Public Event Rp_TajhizPmRowDeleting As Rp_TajhizPmRowChangeEventHandler
        
        Public Event Rp_TajhizPmRowDeleted As Rp_TajhizPmRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_TajhizPmRow(ByVal row As Rp_TajhizPmRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_TajhizPmRow(ByVal انجام_شده As Integer, ByVal کنسل_شده As Integer, ByVal انجام_نشده As Integer, ByVal کل As Integer, ByVal نام_تجهیز As String) As Rp_TajhizPmRow
            Dim rowRp_TajhizPmRow As Rp_TajhizPmRow = CType(Me.NewRow,Rp_TajhizPmRow)
            Dim columnValuesArray() As Object = New Object() {انجام_شده, کنسل_شده, انجام_نشده, کل, نام_تجهیز}
            rowRp_TajhizPmRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_TajhizPmRow)
            Return rowRp_TajhizPmRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_TajhizPmDataTable = CType(MyBase.Clone,Rp_TajhizPmDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_TajhizPmDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnانجام_شده = MyBase.Columns("انجام شده")
            Me.columnکنسل_شده = MyBase.Columns("کنسل شده")
            Me.columnانجام_نشده = MyBase.Columns("انجام نشده")
            Me.columnکل = MyBase.Columns("کل")
            Me.columnنام_تجهیز = MyBase.Columns("نام تجهیز")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnانجام_شده = New Global.System.Data.DataColumn("انجام شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnانجام_شده)
            Me.columnکنسل_شده = New Global.System.Data.DataColumn("کنسل شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکنسل_شده)
            Me.columnانجام_نشده = New Global.System.Data.DataColumn("انجام نشده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnانجام_نشده)
            Me.columnکل = New Global.System.Data.DataColumn("کل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکل)
            Me.columnنام_تجهیز = New Global.System.Data.DataColumn("نام تجهیز", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_تجهیز)
            Me.columnانجام_شده.ReadOnly = true
            Me.columnکنسل_شده.ReadOnly = true
            Me.columnانجام_نشده.ReadOnly = true
            Me.columnکل.ReadOnly = true
            Me.columnنام_تجهیز.ReadOnly = true
            Me.columnنام_تجهیز.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_TajhizPmRow() As Rp_TajhizPmRow
            Return CType(Me.NewRow,Rp_TajhizPmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_TajhizPmRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_TajhizPmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_TajhizPmRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_TajhizPmRowChanged(Me, New Rp_TajhizPmRowChangeEvent(CType(e.Row,Rp_TajhizPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_TajhizPmRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_TajhizPmRowChanging(Me, New Rp_TajhizPmRowChangeEvent(CType(e.Row,Rp_TajhizPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_TajhizPmRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_TajhizPmRowDeleted(Me, New Rp_TajhizPmRowChangeEvent(CType(e.Row,Rp_TajhizPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_TajhizPmRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_TajhizPmRowDeleting(Me, New Rp_TajhizPmRowChangeEvent(CType(e.Row,Rp_TajhizPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_TajhizPmRow(ByVal row As Rp_TajhizPmRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_TajhizPmDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_PmCancleDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_PmCancleRow)
        
        Private columnتجهیز As Global.System.Data.DataColumn
        
        Private columnپست As Global.System.Data.DataColumn
        
        Private columnدلیل_کنسلی As Global.System.Data.DataColumn
        
        Private columnتاریخ_pm As Global.System.Data.DataColumn
        
        Private columnتاریخ_انجام As Global.System.Data.DataColumn
        
        Private columnتوضیحات As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_PmCancle"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تجهیزColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتجهیز
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnپست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property دلیل_کنسلیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnدلیل_کنسلی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_pmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_pm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_انجامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_انجام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توضیحاتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوضیحات
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_PmCancleRow
            Get
                Return CType(Me.Rows(index),Rp_PmCancleRow)
            End Get
        End Property
        
        Public Event Rp_PmCancleRowChanging As Rp_PmCancleRowChangeEventHandler
        
        Public Event Rp_PmCancleRowChanged As Rp_PmCancleRowChangeEventHandler
        
        Public Event Rp_PmCancleRowDeleting As Rp_PmCancleRowChangeEventHandler
        
        Public Event Rp_PmCancleRowDeleted As Rp_PmCancleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_PmCancleRow(ByVal row As Rp_PmCancleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_PmCancleRow(ByVal تجهیز As String, ByVal پست As String, ByVal دلیل_کنسلی As String, ByVal تاریخ_pm As String, ByVal تاریخ_انجام As String, ByVal توضیحات As String) As Rp_PmCancleRow
            Dim rowRp_PmCancleRow As Rp_PmCancleRow = CType(Me.NewRow,Rp_PmCancleRow)
            Dim columnValuesArray() As Object = New Object() {تجهیز, پست, دلیل_کنسلی, تاریخ_pm, تاریخ_انجام, توضیحات}
            rowRp_PmCancleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_PmCancleRow)
            Return rowRp_PmCancleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_PmCancleDataTable = CType(MyBase.Clone,Rp_PmCancleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_PmCancleDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnتجهیز = MyBase.Columns("تجهیز")
            Me.columnپست = MyBase.Columns("پست")
            Me.columnدلیل_کنسلی = MyBase.Columns("دلیل کنسلی")
            Me.columnتاریخ_pm = MyBase.Columns("تاریخ pm")
            Me.columnتاریخ_انجام = MyBase.Columns("تاریخ انجام")
            Me.columnتوضیحات = MyBase.Columns("توضیحات")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnتجهیز = New Global.System.Data.DataColumn("تجهیز", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتجهیز)
            Me.columnپست = New Global.System.Data.DataColumn("پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnپست)
            Me.columnدلیل_کنسلی = New Global.System.Data.DataColumn("دلیل کنسلی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnدلیل_کنسلی)
            Me.columnتاریخ_pm = New Global.System.Data.DataColumn("تاریخ pm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_pm)
            Me.columnتاریخ_انجام = New Global.System.Data.DataColumn("تاریخ انجام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_انجام)
            Me.columnتوضیحات = New Global.System.Data.DataColumn("توضیحات", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوضیحات)
            Me.columnتجهیز.ReadOnly = true
            Me.columnتجهیز.MaxLength = 2147483647
            Me.columnپست.MaxLength = 50
            Me.columnدلیل_کنسلی.MaxLength = 1000
            Me.columnتاریخ_pm.MaxLength = 10
            Me.columnتاریخ_انجام.MaxLength = 10
            Me.columnتوضیحات.MaxLength = 1000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_PmCancleRow() As Rp_PmCancleRow
            Return CType(Me.NewRow,Rp_PmCancleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_PmCancleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_PmCancleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_PmCancleRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_PmCancleRowChanged(Me, New Rp_PmCancleRowChangeEvent(CType(e.Row,Rp_PmCancleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_PmCancleRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_PmCancleRowChanging(Me, New Rp_PmCancleRowChangeEvent(CType(e.Row,Rp_PmCancleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_PmCancleRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_PmCancleRowDeleted(Me, New Rp_PmCancleRowChangeEvent(CType(e.Row,Rp_PmCancleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_PmCancleRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_PmCancleRowDeleting(Me, New Rp_PmCancleRowChangeEvent(CType(e.Row,Rp_PmCancleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_PmCancleRow(ByVal row As Rp_PmCancleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_PmCancleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Pm_SmsDataTable
        Inherits Global.System.Data.TypedTableBase(Of Pm_SmsRow)
        
        Private columnمتن As Global.System.Data.DataColumn
        
        Private columnدریافت_کننده As Global.System.Data.DataColumn
        
        Private columnکاربر_ارسال_کننده As Global.System.Data.DataColumn
        
        Private columnتاربخ As Global.System.Data.DataColumn
        
        Private columnساعت As Global.System.Data.DataColumn
        
        Private columnفرم_نقص As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Pm_Sms"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property متنColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمتن
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property دریافت_کنندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnدریافت_کننده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کاربر_ارسال_کنندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکاربر_ارسال_کننده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاربخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاربخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرم_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرم_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Pm_SmsRow
            Get
                Return CType(Me.Rows(index),Pm_SmsRow)
            End Get
        End Property
        
        Public Event Pm_SmsRowChanging As Pm_SmsRowChangeEventHandler
        
        Public Event Pm_SmsRowChanged As Pm_SmsRowChangeEventHandler
        
        Public Event Pm_SmsRowDeleting As Pm_SmsRowChangeEventHandler
        
        Public Event Pm_SmsRowDeleted As Pm_SmsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPm_SmsRow(ByVal row As Pm_SmsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPm_SmsRow(ByVal متن As String, ByVal دریافت_کننده As String, ByVal کاربر_ارسال_کننده As String, ByVal تاربخ As String, ByVal ساعت As String, ByVal فرم_نقص As String) As Pm_SmsRow
            Dim rowPm_SmsRow As Pm_SmsRow = CType(Me.NewRow,Pm_SmsRow)
            Dim columnValuesArray() As Object = New Object() {متن, دریافت_کننده, کاربر_ارسال_کننده, تاربخ, ساعت, فرم_نقص}
            rowPm_SmsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPm_SmsRow)
            Return rowPm_SmsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Pm_SmsDataTable = CType(MyBase.Clone,Pm_SmsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Pm_SmsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnمتن = MyBase.Columns("متن")
            Me.columnدریافت_کننده = MyBase.Columns("دریافت کننده")
            Me.columnکاربر_ارسال_کننده = MyBase.Columns("کاربر ارسال کننده")
            Me.columnتاربخ = MyBase.Columns("تاربخ")
            Me.columnساعت = MyBase.Columns("ساعت")
            Me.columnفرم_نقص = MyBase.Columns("فرم نقص")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnمتن = New Global.System.Data.DataColumn("متن", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمتن)
            Me.columnدریافت_کننده = New Global.System.Data.DataColumn("دریافت کننده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnدریافت_کننده)
            Me.columnکاربر_ارسال_کننده = New Global.System.Data.DataColumn("کاربر ارسال کننده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکاربر_ارسال_کننده)
            Me.columnتاربخ = New Global.System.Data.DataColumn("تاربخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاربخ)
            Me.columnساعت = New Global.System.Data.DataColumn("ساعت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت)
            Me.columnفرم_نقص = New Global.System.Data.DataColumn("فرم نقص", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرم_نقص)
            Me.columnمتن.MaxLength = 1000
            Me.columnدریافت_کننده.ReadOnly = true
            Me.columnدریافت_کننده.MaxLength = 123
            Me.columnکاربر_ارسال_کننده.ReadOnly = true
            Me.columnکاربر_ارسال_کننده.MaxLength = 101
            Me.columnتاربخ.MaxLength = 10
            Me.columnساعت.MaxLength = 8
            Me.columnفرم_نقص.ReadOnly = true
            Me.columnفرم_نقص.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPm_SmsRow() As Pm_SmsRow
            Return CType(Me.NewRow,Pm_SmsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Pm_SmsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Pm_SmsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Pm_SmsRowChangedEvent) Is Nothing) Then
                RaiseEvent Pm_SmsRowChanged(Me, New Pm_SmsRowChangeEvent(CType(e.Row,Pm_SmsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Pm_SmsRowChangingEvent) Is Nothing) Then
                RaiseEvent Pm_SmsRowChanging(Me, New Pm_SmsRowChangeEvent(CType(e.Row,Pm_SmsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Pm_SmsRowDeletedEvent) Is Nothing) Then
                RaiseEvent Pm_SmsRowDeleted(Me, New Pm_SmsRowChangeEvent(CType(e.Row,Pm_SmsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Pm_SmsRowDeletingEvent) Is Nothing) Then
                RaiseEvent Pm_SmsRowDeleting(Me, New Pm_SmsRowChangeEvent(CType(e.Row,Pm_SmsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePm_SmsRow(ByVal row As Pm_SmsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Pm_SmsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class rp_eibformDataTable
        Inherits Global.System.Data.TypedTableBase(Of rp_eibformRow)
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_نقص As Global.System.Data.DataColumn
        
        Private columnشماره_اصلی As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnنام_پست As Global.System.Data.DataColumn
        
        Private columnنام_واحد As Global.System.Data.DataColumn
        
        Private columnتاریخ_ارجاع As Global.System.Data.DataColumn
        
        Private columnتاریخ_ثبت As Global.System.Data.DataColumn
        
        Private columnنام_گروه As Global.System.Data.DataColumn
        
        Private columnرفع_نقص As Global.System.Data.DataColumn
        
        Private columnفرم_کار As Global.System.Data.DataColumn
        
        Private columnشرح_نقص As Global.System.Data.DataColumn
        
        Private columnنوع_نقص As Global.System.Data.DataColumn
        
        Private columnتوضیحات As Global.System.Data.DataColumn
        
        Private columnنوع_تیپ As Global.System.Data.DataColumn
        
        Private columnتعداد_فرم_نقص As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnred As Global.System.Data.DataColumn
        
        Private columnblue As Global.System.Data.DataColumn
        
        Private columngreen As Global.System.Data.DataColumn
        
        Private columnexpireday As Global.System.Data.DataColumn
        
        Private columnIsUnDecided As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "rp_eibform"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_اصلیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_اصلی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_پست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_واحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ارجاعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ارجاع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_ثبتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_ثبت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_گروهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_گروه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property رفع_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnرفع_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شرح_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشرح_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نوع_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنوع_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property توضیحاتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتوضیحات
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نوع_تیپColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنوع_تیپ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعداد_فرم_نقصColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعداد_فرم_نقص
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property redColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property greenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngreen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property expiredayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpireday
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsUnDecidedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsUnDecided
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As rp_eibformRow
            Get
                Return CType(Me.Rows(index),rp_eibformRow)
            End Get
        End Property
        
        Public Event rp_eibformRowChanging As rp_eibformRowChangeEventHandler
        
        Public Event rp_eibformRowChanged As rp_eibformRowChangeEventHandler
        
        Public Event rp_eibformRowDeleting As rp_eibformRowChangeEventHandler
        
        Public Event rp_eibformRowDeleted As rp_eibformRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addrp_eibformRow(ByVal row As rp_eibformRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addrp_eibformRow( _
                    ByVal شماره_فرم_نقص As Integer,  _
                    ByVal شماره_اصلی As String,  _
                    ByVal تاریخ As String,  _
                    ByVal نام_پست As String,  _
                    ByVal نام_واحد As String,  _
                    ByVal تاریخ_ارجاع As String,  _
                    ByVal تاریخ_ثبت As String,  _
                    ByVal نام_گروه As String,  _
                    ByVal رفع_نقص As String,  _
                    ByVal فرم_کار As String,  _
                    ByVal شرح_نقص As String,  _
                    ByVal نوع_نقص As String,  _
                    ByVal توضیحات As String,  _
                    ByVal نوع_تیپ As String,  _
                    ByVal تعداد_فرم_نقص As Integer,  _
                    ByVal name As String,  _
                    ByVal red As Integer,  _
                    ByVal blue As Integer,  _
                    ByVal green As Integer,  _
                    ByVal expireday As Integer,  _
                    ByVal IsUnDecided As Integer) As rp_eibformRow
            Dim rowrp_eibformRow As rp_eibformRow = CType(Me.NewRow,rp_eibformRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, شماره_فرم_نقص, شماره_اصلی, تاریخ, نام_پست, نام_واحد, تاریخ_ارجاع, تاریخ_ثبت, نام_گروه, رفع_نقص, فرم_کار, شرح_نقص, نوع_نقص, توضیحات, نوع_تیپ, تعداد_فرم_نقص, name, red, blue, green, expireday, IsUnDecided}
            rowrp_eibformRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowrp_eibformRow)
            Return rowrp_eibformRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As rp_eibformDataTable = CType(MyBase.Clone,rp_eibformDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New rp_eibformDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnشماره_فرم_نقص = MyBase.Columns("شماره فرم نقص")
            Me.columnشماره_اصلی = MyBase.Columns("شماره اصلی")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnنام_پست = MyBase.Columns("نام پست")
            Me.columnنام_واحد = MyBase.Columns("نام واحد")
            Me.columnتاریخ_ارجاع = MyBase.Columns("تاریخ ارجاع")
            Me.columnتاریخ_ثبت = MyBase.Columns("تاریخ ثبت")
            Me.columnنام_گروه = MyBase.Columns("نام گروه")
            Me.columnرفع_نقص = MyBase.Columns("رفع نقص")
            Me.columnفرم_کار = MyBase.Columns("فرم کار")
            Me.columnشرح_نقص = MyBase.Columns("شرح نقص")
            Me.columnنوع_نقص = MyBase.Columns("نوع نقص")
            Me.columnتوضیحات = MyBase.Columns("توضیحات")
            Me.columnنوع_تیپ = MyBase.Columns("نوع تیپ")
            Me.columnتعداد_فرم_نقص = MyBase.Columns("تعداد فرم نقص")
            Me.columnname = MyBase.Columns("name")
            Me.columnred = MyBase.Columns("red")
            Me.columnblue = MyBase.Columns("blue")
            Me.columngreen = MyBase.Columns("green")
            Me.columnexpireday = MyBase.Columns("expireday")
            Me.columnIsUnDecided = MyBase.Columns("IsUnDecided")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnشماره_فرم_نقص = New Global.System.Data.DataColumn("شماره فرم نقص", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_نقص)
            Me.columnشماره_اصلی = New Global.System.Data.DataColumn("شماره اصلی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_اصلی)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnنام_پست = New Global.System.Data.DataColumn("نام پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_پست)
            Me.columnنام_واحد = New Global.System.Data.DataColumn("نام واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_واحد)
            Me.columnتاریخ_ارجاع = New Global.System.Data.DataColumn("تاریخ ارجاع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ارجاع)
            Me.columnتاریخ_ثبت = New Global.System.Data.DataColumn("تاریخ ثبت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_ثبت)
            Me.columnنام_گروه = New Global.System.Data.DataColumn("نام گروه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_گروه)
            Me.columnرفع_نقص = New Global.System.Data.DataColumn("رفع نقص", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnرفع_نقص)
            Me.columnفرم_کار = New Global.System.Data.DataColumn("فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرم_کار)
            Me.columnشرح_نقص = New Global.System.Data.DataColumn("شرح نقص", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشرح_نقص)
            Me.columnنوع_نقص = New Global.System.Data.DataColumn("نوع نقص", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنوع_نقص)
            Me.columnتوضیحات = New Global.System.Data.DataColumn("توضیحات", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتوضیحات)
            Me.columnنوع_تیپ = New Global.System.Data.DataColumn("نوع تیپ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنوع_تیپ)
            Me.columnتعداد_فرم_نقص = New Global.System.Data.DataColumn("تعداد فرم نقص", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعداد_فرم_نقص)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnred = New Global.System.Data.DataColumn("red", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred)
            Me.columnblue = New Global.System.Data.DataColumn("blue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblue)
            Me.columngreen = New Global.System.Data.DataColumn("green", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngreen)
            Me.columnexpireday = New Global.System.Data.DataColumn("expireday", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpireday)
            Me.columnIsUnDecided = New Global.System.Data.DataColumn("IsUnDecided", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsUnDecided)
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnشماره_اصلی.MaxLength = 50
            Me.columnتاریخ.MaxLength = 10
            Me.columnنام_پست.MaxLength = 50
            Me.columnنام_واحد.MaxLength = 400
            Me.columnتاریخ_ارجاع.MaxLength = 10
            Me.columnتاریخ_ثبت.MaxLength = 10
            Me.columnنام_گروه.MaxLength = 50
            Me.columnرفع_نقص.MaxLength = 10
            Me.columnفرم_کار.MaxLength = 100
            Me.columnشرح_نقص.MaxLength = 500
            Me.columnنوع_نقص.MaxLength = 50
            Me.columnتوضیحات.MaxLength = 1000
            Me.columnنوع_تیپ.MaxLength = 50
            Me.columnتعداد_فرم_نقص.ReadOnly = true
            Me.columnname.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newrp_eibformRow() As rp_eibformRow
            Return CType(Me.NewRow,rp_eibformRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New rp_eibformRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(rp_eibformRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.rp_eibformRowChangedEvent) Is Nothing) Then
                RaiseEvent rp_eibformRowChanged(Me, New rp_eibformRowChangeEvent(CType(e.Row,rp_eibformRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.rp_eibformRowChangingEvent) Is Nothing) Then
                RaiseEvent rp_eibformRowChanging(Me, New rp_eibformRowChangeEvent(CType(e.Row,rp_eibformRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.rp_eibformRowDeletedEvent) Is Nothing) Then
                RaiseEvent rp_eibformRowDeleted(Me, New rp_eibformRowChangeEvent(CType(e.Row,rp_eibformRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.rp_eibformRowDeletingEvent) Is Nothing) Then
                RaiseEvent rp_eibformRowDeleting(Me, New rp_eibformRowChangeEvent(CType(e.Row,rp_eibformRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removerp_eibformRow(ByVal row As rp_eibformRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "rp_eibformDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_MonthPmDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_MonthPmRow)
        
        Private columnM As Global.System.Data.DataColumn
        
        Private columnماه As Global.System.Data.DataColumn
        
        Private columnکنسل_شده As Global.System.Data.DataColumn
        
        Private columnانجام_شده As Global.System.Data.DataColumn
        
        Private columnانجام_نشده As Global.System.Data.DataColumn
        
        Private columnکل As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_MonthPm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ماهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnماه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کنسل_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکنسل_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property انجام_شدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnانجام_شده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property انجام_نشدهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnانجام_نشده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_MonthPmRow
            Get
                Return CType(Me.Rows(index),Rp_MonthPmRow)
            End Get
        End Property
        
        Public Event Rp_MonthPmRowChanging As Rp_MonthPmRowChangeEventHandler
        
        Public Event Rp_MonthPmRowChanged As Rp_MonthPmRowChangeEventHandler
        
        Public Event Rp_MonthPmRowDeleting As Rp_MonthPmRowChangeEventHandler
        
        Public Event Rp_MonthPmRowDeleted As Rp_MonthPmRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_MonthPmRow(ByVal row As Rp_MonthPmRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_MonthPmRow(ByVal M As String, ByVal ماه As String, ByVal کنسل_شده As Integer, ByVal انجام_شده As Integer, ByVal انجام_نشده As Integer, ByVal کل As Integer) As Rp_MonthPmRow
            Dim rowRp_MonthPmRow As Rp_MonthPmRow = CType(Me.NewRow,Rp_MonthPmRow)
            Dim columnValuesArray() As Object = New Object() {M, ماه, کنسل_شده, انجام_شده, انجام_نشده, کل}
            rowRp_MonthPmRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_MonthPmRow)
            Return rowRp_MonthPmRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_MonthPmDataTable = CType(MyBase.Clone,Rp_MonthPmDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_MonthPmDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnM = MyBase.Columns("M")
            Me.columnماه = MyBase.Columns("ماه")
            Me.columnکنسل_شده = MyBase.Columns("کنسل شده")
            Me.columnانجام_شده = MyBase.Columns("انجام شده")
            Me.columnانجام_نشده = MyBase.Columns("انجام نشده")
            Me.columnکل = MyBase.Columns("کل")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnM = New Global.System.Data.DataColumn("M", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM)
            Me.columnماه = New Global.System.Data.DataColumn("ماه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnماه)
            Me.columnکنسل_شده = New Global.System.Data.DataColumn("کنسل شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکنسل_شده)
            Me.columnانجام_شده = New Global.System.Data.DataColumn("انجام شده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnانجام_شده)
            Me.columnانجام_نشده = New Global.System.Data.DataColumn("انجام نشده", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnانجام_نشده)
            Me.columnکل = New Global.System.Data.DataColumn("کل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکل)
            Me.columnM.MaxLength = 50
            Me.columnماه.MaxLength = 50
            Me.columnکنسل_شده.ReadOnly = true
            Me.columnانجام_شده.ReadOnly = true
            Me.columnانجام_نشده.ReadOnly = true
            Me.columnکل.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_MonthPmRow() As Rp_MonthPmRow
            Return CType(Me.NewRow,Rp_MonthPmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_MonthPmRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_MonthPmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_MonthPmRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_MonthPmRowChanged(Me, New Rp_MonthPmRowChangeEvent(CType(e.Row,Rp_MonthPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_MonthPmRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_MonthPmRowChanging(Me, New Rp_MonthPmRowChangeEvent(CType(e.Row,Rp_MonthPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_MonthPmRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_MonthPmRowDeleted(Me, New Rp_MonthPmRowChangeEvent(CType(e.Row,Rp_MonthPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_MonthPmRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_MonthPmRowDeleting(Me, New Rp_MonthPmRowChangeEvent(CType(e.Row,Rp_MonthPmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_MonthPmRow(ByVal row As Rp_MonthPmRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_MonthPmDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_WorkForm_KargoziniDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_WorkForm_KargoziniRow)
        
        Private columnپرسنلی_کد As Global.System.Data.DataColumn
        
        Private columnنام_و_نام_خانوادگی As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnمبدا_حرکت As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnساعت_شروع As Global.System.Data.DataColumn
        
        Private columnساعت_پایان As Global.System.Data.DataColumn
        
        Private columnمسافت As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_WorkForm_Kargozini"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property پرسنلی_کدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnپرسنلی_کد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_و_نام_خانوادگیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_و_نام_خانوادگی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مبدا_حرکتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمبدا_حرکت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعت_شروعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت_شروع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعت_پایانColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت_پایان
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مسافتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمسافت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_WorkForm_KargoziniRow
            Get
                Return CType(Me.Rows(index),Rp_WorkForm_KargoziniRow)
            End Get
        End Property
        
        Public Event Rp_WorkForm_KargoziniRowChanging As Rp_WorkForm_KargoziniRowChangeEventHandler
        
        Public Event Rp_WorkForm_KargoziniRowChanged As Rp_WorkForm_KargoziniRowChangeEventHandler
        
        Public Event Rp_WorkForm_KargoziniRowDeleting As Rp_WorkForm_KargoziniRowChangeEventHandler
        
        Public Event Rp_WorkForm_KargoziniRowDeleted As Rp_WorkForm_KargoziniRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_WorkForm_KargoziniRow(ByVal row As Rp_WorkForm_KargoziniRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_WorkForm_KargoziniRow(ByVal پرسنلی_کد As Long, ByVal نام_و_نام_خانوادگی As String, ByVal تاریخ As String, ByVal مبدا_حرکت As String, ByVal محل_فعالیت As String, ByVal ساعت_شروع As String, ByVal ساعت_پایان As String, ByVal مسافت As Integer) As Rp_WorkForm_KargoziniRow
            Dim rowRp_WorkForm_KargoziniRow As Rp_WorkForm_KargoziniRow = CType(Me.NewRow,Rp_WorkForm_KargoziniRow)
            Dim columnValuesArray() As Object = New Object() {پرسنلی_کد, نام_و_نام_خانوادگی, تاریخ, مبدا_حرکت, محل_فعالیت, ساعت_شروع, ساعت_پایان, مسافت}
            rowRp_WorkForm_KargoziniRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_WorkForm_KargoziniRow)
            Return rowRp_WorkForm_KargoziniRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_WorkForm_KargoziniDataTable = CType(MyBase.Clone,Rp_WorkForm_KargoziniDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_WorkForm_KargoziniDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnپرسنلی_کد = MyBase.Columns("پرسنلی کد")
            Me.columnنام_و_نام_خانوادگی = MyBase.Columns("نام و نام خانوادگی")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnمبدا_حرکت = MyBase.Columns("مبدا حرکت")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnساعت_شروع = MyBase.Columns("ساعت شروع")
            Me.columnساعت_پایان = MyBase.Columns("ساعت پایان")
            Me.columnمسافت = MyBase.Columns("مسافت")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnپرسنلی_کد = New Global.System.Data.DataColumn("پرسنلی کد", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnپرسنلی_کد)
            Me.columnنام_و_نام_خانوادگی = New Global.System.Data.DataColumn("نام و نام خانوادگی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_و_نام_خانوادگی)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnمبدا_حرکت = New Global.System.Data.DataColumn("مبدا حرکت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمبدا_حرکت)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnساعت_شروع = New Global.System.Data.DataColumn("ساعت شروع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت_شروع)
            Me.columnساعت_پایان = New Global.System.Data.DataColumn("ساعت پایان", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت_پایان)
            Me.columnمسافت = New Global.System.Data.DataColumn("مسافت", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمسافت)
            Me.columnنام_و_نام_خانوادگی.ReadOnly = true
            Me.columnنام_و_نام_خانوادگی.MaxLength = 101
            Me.columnتاریخ.MaxLength = 11
            Me.columnمبدا_حرکت.MaxLength = 50
            Me.columnمحل_فعالیت.MaxLength = 50
            Me.columnساعت_شروع.MaxLength = 5
            Me.columnساعت_پایان.MaxLength = 5
            Me.columnمسافت.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_WorkForm_KargoziniRow() As Rp_WorkForm_KargoziniRow
            Return CType(Me.NewRow,Rp_WorkForm_KargoziniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_WorkForm_KargoziniRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_WorkForm_KargoziniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_WorkForm_KargoziniRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkForm_KargoziniRowChanged(Me, New Rp_WorkForm_KargoziniRowChangeEvent(CType(e.Row,Rp_WorkForm_KargoziniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_WorkForm_KargoziniRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkForm_KargoziniRowChanging(Me, New Rp_WorkForm_KargoziniRowChangeEvent(CType(e.Row,Rp_WorkForm_KargoziniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_WorkForm_KargoziniRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_WorkForm_KargoziniRowDeleted(Me, New Rp_WorkForm_KargoziniRowChangeEvent(CType(e.Row,Rp_WorkForm_KargoziniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_WorkForm_KargoziniRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_WorkForm_KargoziniRowDeleting(Me, New Rp_WorkForm_KargoziniRowChangeEvent(CType(e.Row,Rp_WorkForm_KargoziniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_WorkForm_KargoziniRow(ByVal row As Rp_WorkForm_KargoziniRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_WorkForm_KargoziniDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TimeCard_WorkFormDataTable
        Inherits Global.System.Data.TypedTableBase(Of TimeCard_WorkFormRow)
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnساعت_شروع As Global.System.Data.DataColumn
        
        Private columnساعت_پایان As Global.System.Data.DataColumn
        
        Private columnمجموع_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnفاصله As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TimeCard_WorkForm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعت_شروعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت_شروع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ساعت_پایانColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnساعت_پایان
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مجموع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمجموع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فاصلهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفاصله
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TimeCard_WorkFormRow
            Get
                Return CType(Me.Rows(index),TimeCard_WorkFormRow)
            End Get
        End Property
        
        Public Event TimeCard_WorkFormRowChanging As TimeCard_WorkFormRowChangeEventHandler
        
        Public Event TimeCard_WorkFormRowChanged As TimeCard_WorkFormRowChangeEventHandler
        
        Public Event TimeCard_WorkFormRowDeleting As TimeCard_WorkFormRowChangeEventHandler
        
        Public Event TimeCard_WorkFormRowDeleted As TimeCard_WorkFormRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTimeCard_WorkFormRow(ByVal row As TimeCard_WorkFormRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTimeCard_WorkFormRow(ByVal شماره As Integer, ByVal کد_هزینه As String, ByVal محل_فعالیت As String, ByVal ساعت_شروع As String, ByVal ساعت_پایان As String, ByVal مجموع_اضافه_کار As String, ByVal فاصله As Integer) As TimeCard_WorkFormRow
            Dim rowTimeCard_WorkFormRow As TimeCard_WorkFormRow = CType(Me.NewRow,TimeCard_WorkFormRow)
            Dim columnValuesArray() As Object = New Object() {شماره, کد_هزینه, محل_فعالیت, ساعت_شروع, ساعت_پایان, مجموع_اضافه_کار, فاصله}
            rowTimeCard_WorkFormRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTimeCard_WorkFormRow)
            Return rowTimeCard_WorkFormRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TimeCard_WorkFormDataTable = CType(MyBase.Clone,TimeCard_WorkFormDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TimeCard_WorkFormDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnساعت_شروع = MyBase.Columns("ساعت شروع")
            Me.columnساعت_پایان = MyBase.Columns("ساعت پایان")
            Me.columnمجموع_اضافه_کار = MyBase.Columns("مجموع اضافه کار")
            Me.columnفاصله = MyBase.Columns("فاصله")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnساعت_شروع = New Global.System.Data.DataColumn("ساعت شروع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت_شروع)
            Me.columnساعت_پایان = New Global.System.Data.DataColumn("ساعت پایان", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnساعت_پایان)
            Me.columnمجموع_اضافه_کار = New Global.System.Data.DataColumn("مجموع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمجموع_اضافه_کار)
            Me.columnفاصله = New Global.System.Data.DataColumn("فاصله", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفاصله)
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnمحل_فعالیت.MaxLength = 50
            Me.columnساعت_شروع.MaxLength = 5
            Me.columnساعت_پایان.MaxLength = 5
            Me.columnمجموع_اضافه_کار.ReadOnly = true
            Me.columnمجموع_اضافه_کار.MaxLength = 61
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTimeCard_WorkFormRow() As TimeCard_WorkFormRow
            Return CType(Me.NewRow,TimeCard_WorkFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TimeCard_WorkFormRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TimeCard_WorkFormRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TimeCard_WorkFormRowChangedEvent) Is Nothing) Then
                RaiseEvent TimeCard_WorkFormRowChanged(Me, New TimeCard_WorkFormRowChangeEvent(CType(e.Row,TimeCard_WorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TimeCard_WorkFormRowChangingEvent) Is Nothing) Then
                RaiseEvent TimeCard_WorkFormRowChanging(Me, New TimeCard_WorkFormRowChangeEvent(CType(e.Row,TimeCard_WorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TimeCard_WorkFormRowDeletedEvent) Is Nothing) Then
                RaiseEvent TimeCard_WorkFormRowDeleted(Me, New TimeCard_WorkFormRowChangeEvent(CType(e.Row,TimeCard_WorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TimeCard_WorkFormRowDeletingEvent) Is Nothing) Then
                RaiseEvent TimeCard_WorkFormRowDeleting(Me, New TimeCard_WorkFormRowChangeEvent(CType(e.Row,TimeCard_WorkFormRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTimeCard_WorkFormRow(ByVal row As TimeCard_WorkFormRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TimeCard_WorkFormDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_HazineCodeEzafeKarDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_HazineCodeEzafeKarRow)
        
        Private columnsrl As Global.System.Data.DataColumn
        
        Private columnتعداد_روز As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnمجموع_اضافه_کار As Global.System.Data.DataColumn
        
        Private _columnSrl As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnPersonalCode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_HazineCodeEzafeKar"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property srlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعداد_روزColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعداد_روز
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property مجموع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمجموع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonalCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_HazineCodeEzafeKarRow
            Get
                Return CType(Me.Rows(index),Rp_HazineCodeEzafeKarRow)
            End Get
        End Property
        
        Public Event Rp_HazineCodeEzafeKarRowChanging As Rp_HazineCodeEzafeKarRowChangeEventHandler
        
        Public Event Rp_HazineCodeEzafeKarRowChanged As Rp_HazineCodeEzafeKarRowChangeEventHandler
        
        Public Event Rp_HazineCodeEzafeKarRowDeleting As Rp_HazineCodeEzafeKarRowChangeEventHandler
        
        Public Event Rp_HazineCodeEzafeKarRowDeleted As Rp_HazineCodeEzafeKarRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_HazineCodeEzafeKarRow(ByVal row As Rp_HazineCodeEzafeKarRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_HazineCodeEzafeKarRow(ByVal srl As Integer, ByVal تعداد_روز As Integer, ByVal کد_هزینه As String, ByVal مجموع_اضافه_کار As String, ByVal _Srl As Integer, ByVal name As String, ByVal PersonalCode As Long) As Rp_HazineCodeEzafeKarRow
            Dim rowRp_HazineCodeEzafeKarRow As Rp_HazineCodeEzafeKarRow = CType(Me.NewRow,Rp_HazineCodeEzafeKarRow)
            Dim columnValuesArray() As Object = New Object() {srl, تعداد_روز, کد_هزینه, مجموع_اضافه_کار, _Srl, name, PersonalCode}
            rowRp_HazineCodeEzafeKarRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_HazineCodeEzafeKarRow)
            Return rowRp_HazineCodeEzafeKarRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_HazineCodeEzafeKarDataTable = CType(MyBase.Clone,Rp_HazineCodeEzafeKarDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_HazineCodeEzafeKarDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnsrl = MyBase.Columns("srl")
            Me.columnتعداد_روز = MyBase.Columns("تعداد روز")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnمجموع_اضافه_کار = MyBase.Columns("مجموع اضافه کار")
            Me._columnSrl = MyBase.Columns("Srl")
            Me.columnname = MyBase.Columns("name")
            Me.columnPersonalCode = MyBase.Columns("PersonalCode")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnsrl = New Global.System.Data.DataColumn("srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsrl)
            Me.columnتعداد_روز = New Global.System.Data.DataColumn("تعداد روز", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعداد_روز)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnمجموع_اضافه_کار = New Global.System.Data.DataColumn("مجموع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمجموع_اضافه_کار)
            Me._columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSrl.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_Srl")
            Me._columnSrl.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_SrlColumn")
            Me._columnSrl.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSrl")
            Me._columnSrl.ExtendedProperties.Add("Generator_UserColumnName", "Srl")
            MyBase.Columns.Add(Me._columnSrl)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnPersonalCode = New Global.System.Data.DataColumn("PersonalCode", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonalCode)
            Me.columnsrl.ReadOnly = true
            Me.columnتعداد_روز.ReadOnly = true
            Me.columnکد_هزینه.ReadOnly = true
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnمجموع_اضافه_کار.ReadOnly = true
            Me.columnمجموع_اضافه_کار.MaxLength = 61
            Me._columnSrl.ReadOnly = true
            Me.columnname.ReadOnly = true
            Me.columnname.MaxLength = 101
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_HazineCodeEzafeKarRow() As Rp_HazineCodeEzafeKarRow
            Return CType(Me.NewRow,Rp_HazineCodeEzafeKarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_HazineCodeEzafeKarRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_HazineCodeEzafeKarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_HazineCodeEzafeKarRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_HazineCodeEzafeKarRowChanged(Me, New Rp_HazineCodeEzafeKarRowChangeEvent(CType(e.Row,Rp_HazineCodeEzafeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_HazineCodeEzafeKarRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_HazineCodeEzafeKarRowChanging(Me, New Rp_HazineCodeEzafeKarRowChangeEvent(CType(e.Row,Rp_HazineCodeEzafeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_HazineCodeEzafeKarRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_HazineCodeEzafeKarRowDeleted(Me, New Rp_HazineCodeEzafeKarRowChangeEvent(CType(e.Row,Rp_HazineCodeEzafeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_HazineCodeEzafeKarRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_HazineCodeEzafeKarRowDeleting(Me, New Rp_HazineCodeEzafeKarRowChangeEvent(CType(e.Row,Rp_HazineCodeEzafeKarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_HazineCodeEzafeKarRow(ByVal row As Rp_HazineCodeEzafeKarRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_HazineCodeEzafeKarDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_SummaryExtraWorkFanavaranDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_SummaryExtraWorkFanavaranRow)
        
        Private columnکد_شناسایی As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnSrl_Pm_Company As Global.System.Data.DataColumn
        
        Private columnجمع_اضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_ستاد As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_فرم_کار As Global.System.Data.DataColumn
        
        Private columnجمع_مازاد_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnSrl_Ashkhas As Global.System.Data.DataColumn
        
        Private columnSrl As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_SummaryExtraWorkFanavaran"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_شناساییColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_شناسایی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_Company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_اضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ستادColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_ستاد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_فرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_مازاد_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_مازاد_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_AshkhasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Ashkhas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_SummaryExtraWorkFanavaranRow
            Get
                Return CType(Me.Rows(index),Rp_SummaryExtraWorkFanavaranRow)
            End Get
        End Property
        
        Public Event Rp_SummaryExtraWorkFanavaranRowChanging As Rp_SummaryExtraWorkFanavaranRowChangeEventHandler
        
        Public Event Rp_SummaryExtraWorkFanavaranRowChanged As Rp_SummaryExtraWorkFanavaranRowChangeEventHandler
        
        Public Event Rp_SummaryExtraWorkFanavaranRowDeleting As Rp_SummaryExtraWorkFanavaranRowChangeEventHandler
        
        Public Event Rp_SummaryExtraWorkFanavaranRowDeleted As Rp_SummaryExtraWorkFanavaranRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_SummaryExtraWorkFanavaranRow(ByVal row As Rp_SummaryExtraWorkFanavaranRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_SummaryExtraWorkFanavaranRow(ByVal کد_شناسایی As Long, ByVal نام As String, ByVal Srl_Pm_Company As Integer, ByVal جمع_اضافه_کار_تردد As String, ByVal اضافه_کار_ستاد As String, ByVal اضافه_کار_فرم_کار As String, ByVal جمع_مازاد_اضافه_کار As String, ByVal Srl_Ashkhas As Integer) As Rp_SummaryExtraWorkFanavaranRow
            Dim rowRp_SummaryExtraWorkFanavaranRow As Rp_SummaryExtraWorkFanavaranRow = CType(Me.NewRow,Rp_SummaryExtraWorkFanavaranRow)
            Dim columnValuesArray() As Object = New Object() {کد_شناسایی, نام, Srl_Pm_Company, جمع_اضافه_کار_تردد, اضافه_کار_ستاد, اضافه_کار_فرم_کار, جمع_مازاد_اضافه_کار, Srl_Ashkhas, Nothing}
            rowRp_SummaryExtraWorkFanavaranRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_SummaryExtraWorkFanavaranRow)
            Return rowRp_SummaryExtraWorkFanavaranRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_SummaryExtraWorkFanavaranRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_SummaryExtraWorkFanavaranRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_SummaryExtraWorkFanavaranDataTable = CType(MyBase.Clone,Rp_SummaryExtraWorkFanavaranDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_SummaryExtraWorkFanavaranDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnکد_شناسایی = MyBase.Columns("کد شناسایی")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnSrl_Pm_Company = MyBase.Columns("Srl_Pm_Company")
            Me.columnجمع_اضافه_کار_تردد = MyBase.Columns("جمع اضافه کار تردد")
            Me.columnاضافه_کار_ستاد = MyBase.Columns("اضافه کار ستاد")
            Me.columnاضافه_کار_فرم_کار = MyBase.Columns("اضافه کار فرم کار")
            Me.columnجمع_مازاد_اضافه_کار = MyBase.Columns("جمع مازاد اضافه کار")
            Me.columnSrl_Ashkhas = MyBase.Columns("Srl_Ashkhas")
            Me.columnSrl = MyBase.Columns("Srl")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnکد_شناسایی = New Global.System.Data.DataColumn("کد شناسایی", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_شناسایی)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnSrl_Pm_Company = New Global.System.Data.DataColumn("Srl_Pm_Company", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_Company)
            Me.columnجمع_اضافه_کار_تردد = New Global.System.Data.DataColumn("جمع اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_اضافه_کار_تردد)
            Me.columnاضافه_کار_ستاد = New Global.System.Data.DataColumn("اضافه کار ستاد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_ستاد)
            Me.columnاضافه_کار_فرم_کار = New Global.System.Data.DataColumn("اضافه کار فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_فرم_کار)
            Me.columnجمع_مازاد_اضافه_کار = New Global.System.Data.DataColumn("جمع مازاد اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_مازاد_اضافه_کار)
            Me.columnSrl_Ashkhas = New Global.System.Data.DataColumn("Srl_Ashkhas", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Ashkhas)
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnنام.ReadOnly = true
            Me.columnنام.MaxLength = 103
            Me.columnجمع_اضافه_کار_تردد.ReadOnly = true
            Me.columnجمع_اضافه_کار_تردد.MaxLength = 17
            Me.columnاضافه_کار_ستاد.ReadOnly = true
            Me.columnاضافه_کار_ستاد.MaxLength = 61
            Me.columnاضافه_کار_فرم_کار.ReadOnly = true
            Me.columnاضافه_کار_فرم_کار.MaxLength = 17
            Me.columnجمع_مازاد_اضافه_کار.ReadOnly = true
            Me.columnجمع_مازاد_اضافه_کار.MaxLength = 17
            Me.columnSrl_Ashkhas.ReadOnly = true
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_SummaryExtraWorkFanavaranRow() As Rp_SummaryExtraWorkFanavaranRow
            Return CType(Me.NewRow,Rp_SummaryExtraWorkFanavaranRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_SummaryExtraWorkFanavaranRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_SummaryExtraWorkFanavaranRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_SummaryExtraWorkFanavaranRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryExtraWorkFanavaranRowChanged(Me, New Rp_SummaryExtraWorkFanavaranRowChangeEvent(CType(e.Row,Rp_SummaryExtraWorkFanavaranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_SummaryExtraWorkFanavaranRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryExtraWorkFanavaranRowChanging(Me, New Rp_SummaryExtraWorkFanavaranRowChangeEvent(CType(e.Row,Rp_SummaryExtraWorkFanavaranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_SummaryExtraWorkFanavaranRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryExtraWorkFanavaranRowDeleted(Me, New Rp_SummaryExtraWorkFanavaranRowChangeEvent(CType(e.Row,Rp_SummaryExtraWorkFanavaranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_SummaryExtraWorkFanavaranRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryExtraWorkFanavaranRowDeleting(Me, New Rp_SummaryExtraWorkFanavaranRowChangeEvent(CType(e.Row,Rp_SummaryExtraWorkFanavaranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_SummaryExtraWorkFanavaranRow(ByVal row As Rp_SummaryExtraWorkFanavaranRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_SummaryExtraWorkFanavaranDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_ExtraWorkAzarakhshDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_ExtraWorkAzarakhshRow)
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnSrl_Pm_Company As Global.System.Data.DataColumn
        
        Private columnنام_فرد As Global.System.Data.DataColumn
        
        Private columnکد_شناسایی As Global.System.Data.DataColumn
        
        Private columnفرم_کار As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnاضافه_کار As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnکسر_کار As Global.System.Data.DataColumn
        
        Private columnجمع_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnماموریت As Global.System.Data.DataColumn
        
        Private columnتعطیل As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_ExtraWorkAzarakhsh"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_Company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_فردColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_فرد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_شناساییColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_شناسایی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کسر_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکسر_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ماموریتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnماموریت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعطیلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعطیل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_ExtraWorkAzarakhshRow
            Get
                Return CType(Me.Rows(index),Rp_ExtraWorkAzarakhshRow)
            End Get
        End Property
        
        Public Event Rp_ExtraWorkAzarakhshRowChanging As Rp_ExtraWorkAzarakhshRowChangeEventHandler
        
        Public Event Rp_ExtraWorkAzarakhshRowChanged As Rp_ExtraWorkAzarakhshRowChangeEventHandler
        
        Public Event Rp_ExtraWorkAzarakhshRowDeleting As Rp_ExtraWorkAzarakhshRowChangeEventHandler
        
        Public Event Rp_ExtraWorkAzarakhshRowDeleted As Rp_ExtraWorkAzarakhshRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_ExtraWorkAzarakhshRow(ByVal row As Rp_ExtraWorkAzarakhshRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_ExtraWorkAzarakhshRow(ByVal تاریخ As String, ByVal Srl As Integer, ByVal Srl_Pm_Company As Integer, ByVal نام_فرد As String, ByVal کد_شناسایی As Long, ByVal فرم_کار As String, ByVal شماره As String, ByVal کد_هزینه As String, ByVal محل_فعالیت As String, ByVal اضافه_کار As String, ByVal اضافه_کار_تردد As String, ByVal کسر_کار As String, ByVal جمع_اضافه_کار As String, ByVal ماموریت As String, ByVal تعطیل As Integer) As Rp_ExtraWorkAzarakhshRow
            Dim rowRp_ExtraWorkAzarakhshRow As Rp_ExtraWorkAzarakhshRow = CType(Me.NewRow,Rp_ExtraWorkAzarakhshRow)
            Dim columnValuesArray() As Object = New Object() {تاریخ, Srl, Srl_Pm_Company, نام_فرد, کد_شناسایی, فرم_کار, شماره, کد_هزینه, محل_فعالیت, اضافه_کار, اضافه_کار_تردد, کسر_کار, جمع_اضافه_کار, ماموریت, تعطیل}
            rowRp_ExtraWorkAzarakhshRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_ExtraWorkAzarakhshRow)
            Return rowRp_ExtraWorkAzarakhshRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_ExtraWorkAzarakhshDataTable = CType(MyBase.Clone,Rp_ExtraWorkAzarakhshDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_ExtraWorkAzarakhshDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnSrl_Pm_Company = MyBase.Columns("Srl_Pm_Company")
            Me.columnنام_فرد = MyBase.Columns("نام فرد")
            Me.columnکد_شناسایی = MyBase.Columns("کد شناسایی")
            Me.columnفرم_کار = MyBase.Columns("فرم کار")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnاضافه_کار = MyBase.Columns("اضافه کار")
            Me.columnاضافه_کار_تردد = MyBase.Columns("اضافه کار تردد")
            Me.columnکسر_کار = MyBase.Columns("کسر کار")
            Me.columnجمع_اضافه_کار = MyBase.Columns("جمع اضافه کار")
            Me.columnماموریت = MyBase.Columns("ماموریت")
            Me.columnتعطیل = MyBase.Columns("تعطیل")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnSrl_Pm_Company = New Global.System.Data.DataColumn("Srl_Pm_Company", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_Company)
            Me.columnنام_فرد = New Global.System.Data.DataColumn("نام فرد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_فرد)
            Me.columnکد_شناسایی = New Global.System.Data.DataColumn("کد شناسایی", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_شناسایی)
            Me.columnفرم_کار = New Global.System.Data.DataColumn("فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرم_کار)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnاضافه_کار = New Global.System.Data.DataColumn("اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار)
            Me.columnاضافه_کار_تردد = New Global.System.Data.DataColumn("اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_تردد)
            Me.columnکسر_کار = New Global.System.Data.DataColumn("کسر کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکسر_کار)
            Me.columnجمع_اضافه_کار = New Global.System.Data.DataColumn("جمع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_اضافه_کار)
            Me.columnماموریت = New Global.System.Data.DataColumn("ماموریت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnماموریت)
            Me.columnتعطیل = New Global.System.Data.DataColumn("تعطیل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعطیل)
            Me.columnتاریخ.ReadOnly = true
            Me.columnتاریخ.MaxLength = 10
            Me.columnSrl.ReadOnly = true
            Me.columnSrl_Pm_Company.ReadOnly = true
            Me.columnنام_فرد.ReadOnly = true
            Me.columnنام_فرد.MaxLength = 101
            Me.columnکد_شناسایی.ReadOnly = true
            Me.columnفرم_کار.ReadOnly = true
            Me.columnفرم_کار.MaxLength = 50
            Me.columnشماره.ReadOnly = true
            Me.columnشماره.MaxLength = 30
            Me.columnکد_هزینه.ReadOnly = true
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnمحل_فعالیت.ReadOnly = true
            Me.columnمحل_فعالیت.MaxLength = 500
            Me.columnاضافه_کار.ReadOnly = true
            Me.columnاضافه_کار.MaxLength = 30
            Me.columnاضافه_کار_تردد.ReadOnly = true
            Me.columnاضافه_کار_تردد.MaxLength = 5
            Me.columnکسر_کار.ReadOnly = true
            Me.columnکسر_کار.MaxLength = 17
            Me.columnجمع_اضافه_کار.ReadOnly = true
            Me.columnجمع_اضافه_کار.MaxLength = 61
            Me.columnماموریت.ReadOnly = true
            Me.columnماموریت.MaxLength = 61
            Me.columnتعطیل.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_ExtraWorkAzarakhshRow() As Rp_ExtraWorkAzarakhshRow
            Return CType(Me.NewRow,Rp_ExtraWorkAzarakhshRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_ExtraWorkAzarakhshRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_ExtraWorkAzarakhshRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_ExtraWorkAzarakhshRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkAzarakhshRowChanged(Me, New Rp_ExtraWorkAzarakhshRowChangeEvent(CType(e.Row,Rp_ExtraWorkAzarakhshRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_ExtraWorkAzarakhshRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkAzarakhshRowChanging(Me, New Rp_ExtraWorkAzarakhshRowChangeEvent(CType(e.Row,Rp_ExtraWorkAzarakhshRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_ExtraWorkAzarakhshRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkAzarakhshRowDeleted(Me, New Rp_ExtraWorkAzarakhshRowChangeEvent(CType(e.Row,Rp_ExtraWorkAzarakhshRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_ExtraWorkAzarakhshRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkAzarakhshRowDeleting(Me, New Rp_ExtraWorkAzarakhshRowChangeEvent(CType(e.Row,Rp_ExtraWorkAzarakhshRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_ExtraWorkAzarakhshRow(ByVal row As Rp_ExtraWorkAzarakhshRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_ExtraWorkAzarakhshDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_ExtraWorkFanavaranDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_ExtraWorkFanavaranRow)
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnSrl As Global.System.Data.DataColumn
        
        Private columnSrl_Pm_Company As Global.System.Data.DataColumn
        
        Private columnنام_فرد As Global.System.Data.DataColumn
        
        Private columnکد_شناسایی As Global.System.Data.DataColumn
        
        Private columnفرم_کار As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnکد_هزینه As Global.System.Data.DataColumn
        
        Private columnمحل_فعالیت As Global.System.Data.DataColumn
        
        Private columnاضافه_کار As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_تردد As Global.System.Data.DataColumn
        
        Private columnکسر_کار As Global.System.Data.DataColumn
        
        Private columnجمع_اضافه_کار As Global.System.Data.DataColumn
        
        Private columnماموریت As Global.System.Data.DataColumn
        
        Private columnتعطیل As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_ExtraWorkFanavaran"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_Company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نام_فردColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام_فرد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_شناساییColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_شناسایی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرم_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرم_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_هزینهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_هزینه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property محل_فعالیتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnمحل_فعالیت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ترددColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_تردد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کسر_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکسر_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property جمع_اضافه_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnجمع_اضافه_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ماموریتColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnماموریت
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تعطیلColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتعطیل
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_ExtraWorkFanavaranRow
            Get
                Return CType(Me.Rows(index),Rp_ExtraWorkFanavaranRow)
            End Get
        End Property
        
        Public Event Rp_ExtraWorkFanavaranRowChanging As Rp_ExtraWorkFanavaranRowChangeEventHandler
        
        Public Event Rp_ExtraWorkFanavaranRowChanged As Rp_ExtraWorkFanavaranRowChangeEventHandler
        
        Public Event Rp_ExtraWorkFanavaranRowDeleting As Rp_ExtraWorkFanavaranRowChangeEventHandler
        
        Public Event Rp_ExtraWorkFanavaranRowDeleted As Rp_ExtraWorkFanavaranRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_ExtraWorkFanavaranRow(ByVal row As Rp_ExtraWorkFanavaranRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_ExtraWorkFanavaranRow(ByVal تاریخ As String, ByVal Srl As Integer, ByVal Srl_Pm_Company As Integer, ByVal نام_فرد As String, ByVal کد_شناسایی As Long, ByVal فرم_کار As String, ByVal شماره As String, ByVal کد_هزینه As String, ByVal محل_فعالیت As String, ByVal اضافه_کار As String, ByVal اضافه_کار_تردد As String, ByVal کسر_کار As String, ByVal جمع_اضافه_کار As String, ByVal ماموریت As String, ByVal تعطیل As Integer) As Rp_ExtraWorkFanavaranRow
            Dim rowRp_ExtraWorkFanavaranRow As Rp_ExtraWorkFanavaranRow = CType(Me.NewRow,Rp_ExtraWorkFanavaranRow)
            Dim columnValuesArray() As Object = New Object() {تاریخ, Srl, Srl_Pm_Company, نام_فرد, کد_شناسایی, فرم_کار, شماره, کد_هزینه, محل_فعالیت, اضافه_کار, اضافه_کار_تردد, کسر_کار, جمع_اضافه_کار, ماموریت, تعطیل}
            rowRp_ExtraWorkFanavaranRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_ExtraWorkFanavaranRow)
            Return rowRp_ExtraWorkFanavaranRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_ExtraWorkFanavaranDataTable = CType(MyBase.Clone,Rp_ExtraWorkFanavaranDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_ExtraWorkFanavaranDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnSrl = MyBase.Columns("Srl")
            Me.columnSrl_Pm_Company = MyBase.Columns("Srl_Pm_Company")
            Me.columnنام_فرد = MyBase.Columns("نام فرد")
            Me.columnکد_شناسایی = MyBase.Columns("کد شناسایی")
            Me.columnفرم_کار = MyBase.Columns("فرم کار")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnکد_هزینه = MyBase.Columns("کد هزینه")
            Me.columnمحل_فعالیت = MyBase.Columns("محل فعالیت")
            Me.columnاضافه_کار = MyBase.Columns("اضافه کار")
            Me.columnاضافه_کار_تردد = MyBase.Columns("اضافه کار تردد")
            Me.columnکسر_کار = MyBase.Columns("کسر کار")
            Me.columnجمع_اضافه_کار = MyBase.Columns("جمع اضافه کار")
            Me.columnماموریت = MyBase.Columns("ماموریت")
            Me.columnتعطیل = MyBase.Columns("تعطیل")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.columnSrl_Pm_Company = New Global.System.Data.DataColumn("Srl_Pm_Company", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_Company)
            Me.columnنام_فرد = New Global.System.Data.DataColumn("نام فرد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام_فرد)
            Me.columnکد_شناسایی = New Global.System.Data.DataColumn("کد شناسایی", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_شناسایی)
            Me.columnفرم_کار = New Global.System.Data.DataColumn("فرم کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرم_کار)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnکد_هزینه = New Global.System.Data.DataColumn("کد هزینه", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_هزینه)
            Me.columnمحل_فعالیت = New Global.System.Data.DataColumn("محل فعالیت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnمحل_فعالیت)
            Me.columnاضافه_کار = New Global.System.Data.DataColumn("اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار)
            Me.columnاضافه_کار_تردد = New Global.System.Data.DataColumn("اضافه کار تردد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_تردد)
            Me.columnکسر_کار = New Global.System.Data.DataColumn("کسر کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکسر_کار)
            Me.columnجمع_اضافه_کار = New Global.System.Data.DataColumn("جمع اضافه کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnجمع_اضافه_کار)
            Me.columnماموریت = New Global.System.Data.DataColumn("ماموریت", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnماموریت)
            Me.columnتعطیل = New Global.System.Data.DataColumn("تعطیل", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتعطیل)
            Me.columnتاریخ.ReadOnly = true
            Me.columnتاریخ.MaxLength = 10
            Me.columnSrl.ReadOnly = true
            Me.columnSrl_Pm_Company.ReadOnly = true
            Me.columnنام_فرد.ReadOnly = true
            Me.columnنام_فرد.MaxLength = 101
            Me.columnکد_شناسایی.ReadOnly = true
            Me.columnفرم_کار.ReadOnly = true
            Me.columnفرم_کار.MaxLength = 50
            Me.columnشماره.ReadOnly = true
            Me.columnشماره.MaxLength = 30
            Me.columnکد_هزینه.ReadOnly = true
            Me.columnکد_هزینه.MaxLength = 50
            Me.columnمحل_فعالیت.ReadOnly = true
            Me.columnمحل_فعالیت.MaxLength = 500
            Me.columnاضافه_کار.ReadOnly = true
            Me.columnاضافه_کار.MaxLength = 30
            Me.columnاضافه_کار_تردد.ReadOnly = true
            Me.columnاضافه_کار_تردد.MaxLength = 5
            Me.columnکسر_کار.ReadOnly = true
            Me.columnکسر_کار.MaxLength = 17
            Me.columnجمع_اضافه_کار.ReadOnly = true
            Me.columnجمع_اضافه_کار.MaxLength = 61
            Me.columnماموریت.ReadOnly = true
            Me.columnماموریت.MaxLength = 61
            Me.columnتعطیل.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_ExtraWorkFanavaranRow() As Rp_ExtraWorkFanavaranRow
            Return CType(Me.NewRow,Rp_ExtraWorkFanavaranRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_ExtraWorkFanavaranRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_ExtraWorkFanavaranRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_ExtraWorkFanavaranRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkFanavaranRowChanged(Me, New Rp_ExtraWorkFanavaranRowChangeEvent(CType(e.Row,Rp_ExtraWorkFanavaranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_ExtraWorkFanavaranRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkFanavaranRowChanging(Me, New Rp_ExtraWorkFanavaranRowChangeEvent(CType(e.Row,Rp_ExtraWorkFanavaranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_ExtraWorkFanavaranRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkFanavaranRowDeleted(Me, New Rp_ExtraWorkFanavaranRowChangeEvent(CType(e.Row,Rp_ExtraWorkFanavaranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_ExtraWorkFanavaranRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_ExtraWorkFanavaranRowDeleting(Me, New Rp_ExtraWorkFanavaranRowChangeEvent(CType(e.Row,Rp_ExtraWorkFanavaranRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_ExtraWorkFanavaranRow(ByVal row As Rp_ExtraWorkFanavaranRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_ExtraWorkFanavaranDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_SummaryStatusstatementExtraWorkDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_SummaryStatusstatementExtraWorkRow)
        
        Private columnکد_شناسایی As Global.System.Data.DataColumn
        
        Private columnنام As Global.System.Data.DataColumn
        
        Private columnنوع_کاری As Global.System.Data.DataColumn
        
        Private columnSrl_Pm_Company As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_ستاد As Global.System.Data.DataColumn
        
        Private columnاضافه_کار_کارمزدی As Global.System.Data.DataColumn
        
        Private columnSrl_Ashkhas As Global.System.Data.DataColumn
        
        Private columnSrl As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_SummaryStatusstatementExtraWork"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property کد_شناساییColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnکد_شناسایی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property نوع_کاریColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnنوع_کاری
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_Pm_CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Pm_Company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_ستادColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_ستاد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property اضافه_کار_کارمزدیColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnاضافه_کار_کارمزدی
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Srl_AshkhasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl_Ashkhas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_SummaryStatusstatementExtraWorkRow
            Get
                Return CType(Me.Rows(index),Rp_SummaryStatusstatementExtraWorkRow)
            End Get
        End Property
        
        Public Event Rp_SummaryStatusstatementExtraWorkRowChanging As Rp_SummaryStatusstatementExtraWorkRowChangeEventHandler
        
        Public Event Rp_SummaryStatusstatementExtraWorkRowChanged As Rp_SummaryStatusstatementExtraWorkRowChangeEventHandler
        
        Public Event Rp_SummaryStatusstatementExtraWorkRowDeleting As Rp_SummaryStatusstatementExtraWorkRowChangeEventHandler
        
        Public Event Rp_SummaryStatusstatementExtraWorkRowDeleted As Rp_SummaryStatusstatementExtraWorkRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_SummaryStatusstatementExtraWorkRow(ByVal row As Rp_SummaryStatusstatementExtraWorkRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_SummaryStatusstatementExtraWorkRow(ByVal کد_شناسایی As Long, ByVal نام As String, ByVal نوع_کاری As String, ByVal Srl_Pm_Company As Integer, ByVal اضافه_کار_ستاد As String, ByVal اضافه_کار_کارمزدی As String, ByVal Srl_Ashkhas As Integer) As Rp_SummaryStatusstatementExtraWorkRow
            Dim rowRp_SummaryStatusstatementExtraWorkRow As Rp_SummaryStatusstatementExtraWorkRow = CType(Me.NewRow,Rp_SummaryStatusstatementExtraWorkRow)
            Dim columnValuesArray() As Object = New Object() {کد_شناسایی, نام, نوع_کاری, Srl_Pm_Company, اضافه_کار_ستاد, اضافه_کار_کارمزدی, Srl_Ashkhas, Nothing}
            rowRp_SummaryStatusstatementExtraWorkRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_SummaryStatusstatementExtraWorkRow)
            Return rowRp_SummaryStatusstatementExtraWorkRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySrl(ByVal Srl As Integer) As Rp_SummaryStatusstatementExtraWorkRow
            Return CType(Me.Rows.Find(New Object() {Srl}),Rp_SummaryStatusstatementExtraWorkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_SummaryStatusstatementExtraWorkDataTable = CType(MyBase.Clone,Rp_SummaryStatusstatementExtraWorkDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_SummaryStatusstatementExtraWorkDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnکد_شناسایی = MyBase.Columns("کد شناسایی")
            Me.columnنام = MyBase.Columns("نام")
            Me.columnنوع_کاری = MyBase.Columns("نوع کاری")
            Me.columnSrl_Pm_Company = MyBase.Columns("Srl_Pm_Company")
            Me.columnاضافه_کار_ستاد = MyBase.Columns("اضافه کار ستاد")
            Me.columnاضافه_کار_کارمزدی = MyBase.Columns("اضافه کار کارمزدی")
            Me.columnSrl_Ashkhas = MyBase.Columns("Srl_Ashkhas")
            Me.columnSrl = MyBase.Columns("Srl")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnکد_شناسایی = New Global.System.Data.DataColumn("کد شناسایی", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnکد_شناسایی)
            Me.columnنام = New Global.System.Data.DataColumn("نام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنام)
            Me.columnنوع_کاری = New Global.System.Data.DataColumn("نوع کاری", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnنوع_کاری)
            Me.columnSrl_Pm_Company = New Global.System.Data.DataColumn("Srl_Pm_Company", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Pm_Company)
            Me.columnاضافه_کار_ستاد = New Global.System.Data.DataColumn("اضافه کار ستاد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_ستاد)
            Me.columnاضافه_کار_کارمزدی = New Global.System.Data.DataColumn("اضافه کار کارمزدی", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnاضافه_کار_کارمزدی)
            Me.columnSrl_Ashkhas = New Global.System.Data.DataColumn("Srl_Ashkhas", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl_Ashkhas)
            Me.columnSrl = New Global.System.Data.DataColumn("Srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrl)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSrl}, true))
            Me.columnنام.ReadOnly = true
            Me.columnنام.MaxLength = 103
            Me.columnنوع_کاری.ReadOnly = true
            Me.columnنوع_کاری.MaxLength = 50
            Me.columnاضافه_کار_ستاد.ReadOnly = true
            Me.columnاضافه_کار_ستاد.MaxLength = 61
            Me.columnاضافه_کار_کارمزدی.ReadOnly = true
            Me.columnاضافه_کار_کارمزدی.MaxLength = 17
            Me.columnSrl_Ashkhas.ReadOnly = true
            Me.columnSrl.AutoIncrement = true
            Me.columnSrl.AutoIncrementSeed = -1
            Me.columnSrl.AutoIncrementStep = -1
            Me.columnSrl.AllowDBNull = false
            Me.columnSrl.ReadOnly = true
            Me.columnSrl.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_SummaryStatusstatementExtraWorkRow() As Rp_SummaryStatusstatementExtraWorkRow
            Return CType(Me.NewRow,Rp_SummaryStatusstatementExtraWorkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_SummaryStatusstatementExtraWorkRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_SummaryStatusstatementExtraWorkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_SummaryStatusstatementExtraWorkRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryStatusstatementExtraWorkRowChanged(Me, New Rp_SummaryStatusstatementExtraWorkRowChangeEvent(CType(e.Row,Rp_SummaryStatusstatementExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_SummaryStatusstatementExtraWorkRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryStatusstatementExtraWorkRowChanging(Me, New Rp_SummaryStatusstatementExtraWorkRowChangeEvent(CType(e.Row,Rp_SummaryStatusstatementExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_SummaryStatusstatementExtraWorkRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryStatusstatementExtraWorkRowDeleted(Me, New Rp_SummaryStatusstatementExtraWorkRowChangeEvent(CType(e.Row,Rp_SummaryStatusstatementExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_SummaryStatusstatementExtraWorkRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_SummaryStatusstatementExtraWorkRowDeleting(Me, New Rp_SummaryStatusstatementExtraWorkRowChangeEvent(CType(e.Row,Rp_SummaryStatusstatementExtraWorkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_SummaryStatusstatementExtraWorkRow(ByVal row As Rp_SummaryStatusstatementExtraWorkRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_SummaryStatusstatementExtraWorkDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_ConfirmedMultiEzafeKarStatusStatementDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_ConfirmedMultiEzafeKarStatusStatementRow)
        
        Private columnsrl As Global.System.Data.DataColumn
        
        Private columnEzafekar As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_ConfirmedMultiEzafeKarStatusStatement"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property srlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsrl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EzafekarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEzafekar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_ConfirmedMultiEzafeKarStatusStatementRow
            Get
                Return CType(Me.Rows(index),Rp_ConfirmedMultiEzafeKarStatusStatementRow)
            End Get
        End Property
        
        Public Event Rp_ConfirmedMultiEzafeKarStatusStatementRowChanging As Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEventHandler
        
        Public Event Rp_ConfirmedMultiEzafeKarStatusStatementRowChanged As Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEventHandler
        
        Public Event Rp_ConfirmedMultiEzafeKarStatusStatementRowDeleting As Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEventHandler
        
        Public Event Rp_ConfirmedMultiEzafeKarStatusStatementRowDeleted As Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_ConfirmedMultiEzafeKarStatusStatementRow(ByVal row As Rp_ConfirmedMultiEzafeKarStatusStatementRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_ConfirmedMultiEzafeKarStatusStatementRow(ByVal Ezafekar As String) As Rp_ConfirmedMultiEzafeKarStatusStatementRow
            Dim rowRp_ConfirmedMultiEzafeKarStatusStatementRow As Rp_ConfirmedMultiEzafeKarStatusStatementRow = CType(Me.NewRow,Rp_ConfirmedMultiEzafeKarStatusStatementRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Ezafekar}
            rowRp_ConfirmedMultiEzafeKarStatusStatementRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_ConfirmedMultiEzafeKarStatusStatementRow)
            Return rowRp_ConfirmedMultiEzafeKarStatusStatementRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBysrl(ByVal srl As Integer) As Rp_ConfirmedMultiEzafeKarStatusStatementRow
            Return CType(Me.Rows.Find(New Object() {srl}),Rp_ConfirmedMultiEzafeKarStatusStatementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_ConfirmedMultiEzafeKarStatusStatementDataTable = CType(MyBase.Clone,Rp_ConfirmedMultiEzafeKarStatusStatementDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_ConfirmedMultiEzafeKarStatusStatementDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnsrl = MyBase.Columns("srl")
            Me.columnEzafekar = MyBase.Columns("Ezafekar")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnsrl = New Global.System.Data.DataColumn("srl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsrl)
            Me.columnEzafekar = New Global.System.Data.DataColumn("Ezafekar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEzafekar)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnsrl}, true))
            Me.columnsrl.AutoIncrement = true
            Me.columnsrl.AutoIncrementSeed = -1
            Me.columnsrl.AutoIncrementStep = -1
            Me.columnsrl.AllowDBNull = false
            Me.columnsrl.ReadOnly = true
            Me.columnsrl.Unique = true
            Me.columnEzafekar.ReadOnly = true
            Me.columnEzafekar.MaxLength = 61
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_ConfirmedMultiEzafeKarStatusStatementRow() As Rp_ConfirmedMultiEzafeKarStatusStatementRow
            Return CType(Me.NewRow,Rp_ConfirmedMultiEzafeKarStatusStatementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_ConfirmedMultiEzafeKarStatusStatementRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_ConfirmedMultiEzafeKarStatusStatementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_ConfirmedMultiEzafeKarStatusStatementRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_ConfirmedMultiEzafeKarStatusStatementRowChanged(Me, New Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEvent(CType(e.Row,Rp_ConfirmedMultiEzafeKarStatusStatementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_ConfirmedMultiEzafeKarStatusStatementRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_ConfirmedMultiEzafeKarStatusStatementRowChanging(Me, New Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEvent(CType(e.Row,Rp_ConfirmedMultiEzafeKarStatusStatementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_ConfirmedMultiEzafeKarStatusStatementRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_ConfirmedMultiEzafeKarStatusStatementRowDeleted(Me, New Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEvent(CType(e.Row,Rp_ConfirmedMultiEzafeKarStatusStatementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_ConfirmedMultiEzafeKarStatusStatementRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_ConfirmedMultiEzafeKarStatusStatementRowDeleting(Me, New Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEvent(CType(e.Row,Rp_ConfirmedMultiEzafeKarStatusStatementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_ConfirmedMultiEzafeKarStatusStatementRow(ByVal row As Rp_ConfirmedMultiEzafeKarStatusStatementRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_ConfirmedMultiEzafeKarStatusStatementDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rp_PishnahadDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rp_PishnahadRow)
        
        Private columnپیشنهاد As Global.System.Data.DataColumn
        
        Private columnتاریخ As Global.System.Data.DataColumn
        
        Private columnشماره As Global.System.Data.DataColumn
        
        Private columnشماره_فرم As Global.System.Data.DataColumn
        
        Private columnشماره_فرم_انجام_کار As Global.System.Data.DataColumn
        
        Private columnتاریخ_انجام As Global.System.Data.DataColumn
        
        Private columnشرح_انجام_کار As Global.System.Data.DataColumn
        
        Private columnis_Do As Global.System.Data.DataColumn
        
        Private columnبازه As Global.System.Data.DataColumn
        
        Private columnis_NotDo As Global.System.Data.DataColumn
        
        Private columnتجهیز As Global.System.Data.DataColumn
        
        Private columnخط As Global.System.Data.DataColumn
        
        Private columnپست As Global.System.Data.DataColumn
        
        Private columnواحد As Global.System.Data.DataColumn
        
        Private columnزیر_موضوع As Global.System.Data.DataColumn
        
        Private columnموضوع As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnexpireday As Global.System.Data.DataColumn
        
        Private columnفرستنده As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rp_Pishnahad"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property پیشنهادColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnپیشنهاد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شمارهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرمColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شماره_فرم_انجام_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشماره_فرم_انجام_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تاریخ_انجامColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتاریخ_انجام
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property شرح_انجام_کارColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnشرح_انجام_کار
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property is_DoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_Do
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property بازهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnبازه
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property is_NotDoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_NotDo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property تجهیزColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnتجهیز
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property خطColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnخط
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property پستColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnپست
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property واحدColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnواحد
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property زیر_موضوعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnزیر_موضوع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property موضوعColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnموضوع
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property expiredayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpireday
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property فرستندهColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnفرستنده
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rp_PishnahadRow
            Get
                Return CType(Me.Rows(index),Rp_PishnahadRow)
            End Get
        End Property
        
        Public Event Rp_PishnahadRowChanging As Rp_PishnahadRowChangeEventHandler
        
        Public Event Rp_PishnahadRowChanged As Rp_PishnahadRowChangeEventHandler
        
        Public Event Rp_PishnahadRowDeleting As Rp_PishnahadRowChangeEventHandler
        
        Public Event Rp_PishnahadRowDeleted As Rp_PishnahadRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRp_PishnahadRow(ByVal row As Rp_PishnahadRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRp_PishnahadRow( _
                    ByVal پیشنهاد As String,  _
                    ByVal تاریخ As String,  _
                    ByVal شماره As Integer,  _
                    ByVal شماره_فرم As String,  _
                    ByVal شماره_فرم_انجام_کار As String,  _
                    ByVal تاریخ_انجام As String,  _
                    ByVal شرح_انجام_کار As String,  _
                    ByVal is_Do As Integer,  _
                    ByVal بازه As Integer,  _
                    ByVal is_NotDo As Integer,  _
                    ByVal تجهیز As String,  _
                    ByVal خط As String,  _
                    ByVal پست As String,  _
                    ByVal واحد As String,  _
                    ByVal زیر_موضوع As String,  _
                    ByVal موضوع As String,  _
                    ByVal Status As Integer,  _
                    ByVal expireday As Integer,  _
                    ByVal فرستنده As String) As Rp_PishnahadRow
            Dim rowRp_PishnahadRow As Rp_PishnahadRow = CType(Me.NewRow,Rp_PishnahadRow)
            Dim columnValuesArray() As Object = New Object() {پیشنهاد, تاریخ, شماره, شماره_فرم, شماره_فرم_انجام_کار, تاریخ_انجام, شرح_انجام_کار, is_Do, بازه, is_NotDo, تجهیز, خط, پست, واحد, زیر_موضوع, موضوع, Status, expireday, فرستنده}
            rowRp_PishnahadRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRp_PishnahadRow)
            Return rowRp_PishnahadRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rp_PishnahadDataTable = CType(MyBase.Clone,Rp_PishnahadDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rp_PishnahadDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnپیشنهاد = MyBase.Columns("پیشنهاد")
            Me.columnتاریخ = MyBase.Columns("تاریخ")
            Me.columnشماره = MyBase.Columns("شماره")
            Me.columnشماره_فرم = MyBase.Columns("شماره فرم")
            Me.columnشماره_فرم_انجام_کار = MyBase.Columns("شماره فرم انجام کار")
            Me.columnتاریخ_انجام = MyBase.Columns("تاریخ انجام")
            Me.columnشرح_انجام_کار = MyBase.Columns("شرح انجام کار")
            Me.columnis_Do = MyBase.Columns("is_Do")
            Me.columnبازه = MyBase.Columns("بازه")
            Me.columnis_NotDo = MyBase.Columns("is_NotDo")
            Me.columnتجهیز = MyBase.Columns("تجهیز")
            Me.columnخط = MyBase.Columns("خط")
            Me.columnپست = MyBase.Columns("پست")
            Me.columnواحد = MyBase.Columns("واحد")
            Me.columnزیر_موضوع = MyBase.Columns("زیر موضوع")
            Me.columnموضوع = MyBase.Columns("موضوع")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnexpireday = MyBase.Columns("expireday")
            Me.columnفرستنده = MyBase.Columns("فرستنده")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnپیشنهاد = New Global.System.Data.DataColumn("پیشنهاد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnپیشنهاد)
            Me.columnتاریخ = New Global.System.Data.DataColumn("تاریخ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ)
            Me.columnشماره = New Global.System.Data.DataColumn("شماره", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره)
            Me.columnشماره_فرم = New Global.System.Data.DataColumn("شماره فرم", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم)
            Me.columnشماره_فرم_انجام_کار = New Global.System.Data.DataColumn("شماره فرم انجام کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشماره_فرم_انجام_کار)
            Me.columnتاریخ_انجام = New Global.System.Data.DataColumn("تاریخ انجام", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتاریخ_انجام)
            Me.columnشرح_انجام_کار = New Global.System.Data.DataColumn("شرح انجام کار", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnشرح_انجام_کار)
            Me.columnis_Do = New Global.System.Data.DataColumn("is_Do", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_Do)
            Me.columnبازه = New Global.System.Data.DataColumn("بازه", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnبازه)
            Me.columnis_NotDo = New Global.System.Data.DataColumn("is_NotDo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_NotDo)
            Me.columnتجهیز = New Global.System.Data.DataColumn("تجهیز", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnتجهیز)
            Me.columnخط = New Global.System.Data.DataColumn("خط", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnخط)
            Me.columnپست = New Global.System.Data.DataColumn("پست", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnپست)
            Me.columnواحد = New Global.System.Data.DataColumn("واحد", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnواحد)
            Me.columnزیر_موضوع = New Global.System.Data.DataColumn("زیر موضوع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnزیر_موضوع)
            Me.columnموضوع = New Global.System.Data.DataColumn("موضوع", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnموضوع)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnexpireday = New Global.System.Data.DataColumn("expireday", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpireday)
            Me.columnفرستنده = New Global.System.Data.DataColumn("فرستنده", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnفرستنده)
            Me.columnپیشنهاد.MaxLength = 2147483647
            Me.columnتاریخ.MaxLength = 10
            Me.columnشماره_فرم.MaxLength = 50
            Me.columnشماره_فرم_انجام_کار.MaxLength = 50
            Me.columnتاریخ_انجام.MaxLength = 11
            Me.columnشرح_انجام_کار.MaxLength = 2147483647
            Me.columnتجهیز.MaxLength = 2147483647
            Me.columnخط.MaxLength = 50
            Me.columnپست.MaxLength = 50
            Me.columnواحد.MaxLength = 400
            Me.columnزیر_موضوع.MaxLength = 100
            Me.columnموضوع.MaxLength = 50
            Me.columnفرستنده.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRp_PishnahadRow() As Rp_PishnahadRow
            Return CType(Me.NewRow,Rp_PishnahadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rp_PishnahadRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rp_PishnahadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rp_PishnahadRowChangedEvent) Is Nothing) Then
                RaiseEvent Rp_PishnahadRowChanged(Me, New Rp_PishnahadRowChangeEvent(CType(e.Row,Rp_PishnahadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rp_PishnahadRowChangingEvent) Is Nothing) Then
                RaiseEvent Rp_PishnahadRowChanging(Me, New Rp_PishnahadRowChangeEvent(CType(e.Row,Rp_PishnahadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rp_PishnahadRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rp_PishnahadRowDeleted(Me, New Rp_PishnahadRowChangeEvent(CType(e.Row,Rp_PishnahadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rp_PishnahadRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rp_PishnahadRowDeleting(Me, New Rp_PishnahadRowChangeEvent(CType(e.Row,Rp_PishnahadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRp_PishnahadRow(ByVal row As Rp_PishnahadRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Rp = New Ds_Rp
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rp_PishnahadDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_SummaryExtraWorkRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_SummaryExtraWork As Rp_SummaryExtraWorkDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_SummaryExtraWork = CType(Me.Table,Rp_SummaryExtraWorkDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_شناسایی() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWork.کد_شناساییColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد شناسایی' in table 'Rp_SummaryExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWork.کد_شناساییColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWork.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_SummaryExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWork.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWork.جمع_اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع اضافه کار تردد' in table 'Rp_SummaryExtraWork' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWork.جمع_اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWork.اضافه_کار_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار فرم کار' in table 'Rp_SummaryExtraWork' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWork.اضافه_کار_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Ashkhas() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWork.Srl_AshkhasColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Ashkhas' in table 'Rp_SummaryExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWork.Srl_AshkhasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_ستاد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWork.اضافه_کار_ستادColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار ستاد' in table 'Rp_SummaryExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWork.اضافه_کار_ستادColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_مازاد_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWork.جمع_مازاد_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع مازاد اضافه کار' in table 'Rp_SummaryExtraWork' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWork.جمع_مازاد_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_Company() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWork.Srl_Pm_CompanyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_Company' in table 'Rp_SummaryExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWork.Srl_Pm_CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_شناساییNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWork.کد_شناساییColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_شناساییNull()
            Me(Me.tableRp_SummaryExtraWork.کد_شناساییColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWork.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_SummaryExtraWork.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_اضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWork.جمع_اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_اضافه_کار_ترددNull()
            Me(Me.tableRp_SummaryExtraWork.جمع_اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWork.اضافه_کار_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_فرم_کارNull()
            Me(Me.tableRp_SummaryExtraWork.اضافه_کار_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_AshkhasNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWork.Srl_AshkhasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_AshkhasNull()
            Me(Me.tableRp_SummaryExtraWork.Srl_AshkhasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ستادNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWork.اضافه_کار_ستادColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ستادNull()
            Me(Me.tableRp_SummaryExtraWork.اضافه_کار_ستادColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_مازاد_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWork.جمع_مازاد_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_مازاد_اضافه_کارNull()
            Me(Me.tableRp_SummaryExtraWork.جمع_مازاد_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_CompanyNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWork.Srl_Pm_CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_CompanyNull()
            Me(Me.tableRp_SummaryExtraWork.Srl_Pm_CompanyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_Pm_KalaUseRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Pm_KalaUse As Rp_Pm_KalaUseDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Pm_KalaUse = CType(Me.Table,Rp_Pm_KalaUseDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_کالا() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pm_KalaUse.نام_کالاColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام کالا' in table 'Rp_Pm_KalaUse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pm_KalaUse.نام_کالاColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pm_KalaUse.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_Pm_KalaUse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pm_KalaUse.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pm_KalaUse.نام_گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام گروه' in table 'Rp_Pm_KalaUse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pm_KalaUse.نام_گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pm_KalaUse.شماره_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_Pm_KalaUse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pm_KalaUse.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pm_KalaUse.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_Pm_KalaUse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pm_KalaUse.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعداد() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pm_KalaUse.تعدادColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعداد' in table 'Rp_Pm_KalaUse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pm_KalaUse.تعدادColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_کالاNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pm_KalaUse.نام_کالاColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_کالاNull()
            Me(Me.tableRp_Pm_KalaUse.نام_کالاColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pm_KalaUse.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_Pm_KalaUse.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_گروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pm_KalaUse.نام_گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_گروهNull()
            Me(Me.tableRp_Pm_KalaUse.نام_گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pm_KalaUse.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_Pm_KalaUse.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pm_KalaUse.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_Pm_KalaUse.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتعدادNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pm_KalaUse.تعدادColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتعدادNull()
            Me(Me.tableRp_Pm_KalaUse.تعدادColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_MojodiAnbarRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_MojodiAnbar As Rp_MojodiAnbarDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_MojodiAnbar = CType(Me.Table,Rp_MojodiAnbarDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Kala() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_MojodiAnbar.Srl_KalaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Kala' in table 'Rp_MojodiAnbar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MojodiAnbar.Srl_KalaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MojodiAnbar.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_MojodiAnbar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MojodiAnbar.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property موجودی_انبار() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRp_MojodiAnbar.موجودی_انبارColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'موجودی انبار' in table 'Rp_MojodiAnbar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MojodiAnbar.موجودی_انبارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property میزان_مصرف() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRp_MojodiAnbar.میزان_مصرفColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'میزان مصرف' in table 'Rp_MojodiAnbar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MojodiAnbar.میزان_مصرفColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعداد() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRp_MojodiAnbar.تعدادColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعداد' in table 'Rp_MojodiAnbar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MojodiAnbar.تعدادColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_KalaNull() As Boolean
            Return Me.IsNull(Me.tableRp_MojodiAnbar.Srl_KalaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_KalaNull()
            Me(Me.tableRp_MojodiAnbar.Srl_KalaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_MojodiAnbar.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_MojodiAnbar.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isموجودی_انبارNull() As Boolean
            Return Me.IsNull(Me.tableRp_MojodiAnbar.موجودی_انبارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setموجودی_انبارNull()
            Me(Me.tableRp_MojodiAnbar.موجودی_انبارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمیزان_مصرفNull() As Boolean
            Return Me.IsNull(Me.tableRp_MojodiAnbar.میزان_مصرفColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمیزان_مصرفNull()
            Me(Me.tableRp_MojodiAnbar.میزان_مصرفColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتعدادNull() As Boolean
            Return Me.IsNull(Me.tableRp_MojodiAnbar.تعدادColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتعدادNull()
            Me(Me.tableRp_MojodiAnbar.تعدادColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_GroupEibFormRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_GroupEibForm As Rp_GroupEibFormDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_GroupEibForm = CType(Me.Table,Rp_GroupEibFormDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Group() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_GroupEibForm.Srl_GroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Group' in table 'Rp_GroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_GroupEibForm.Srl_GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_نشده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_GroupEibForm.رفع_نشدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع نشده' in table 'Rp_GroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_GroupEibForm.رفع_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_GroupEibForm.رفع_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع شده' in table 'Rp_GroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_GroupEibForm.رفع_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_GroupEibForm.کلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کل' in table 'Rp_GroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_GroupEibForm.کلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_GroupEibForm.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_GroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_GroupEibForm.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_GroupNull() As Boolean
            Return Me.IsNull(Me.tableRp_GroupEibForm.Srl_GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_GroupNull()
            Me(Me.tableRp_GroupEibForm.Srl_GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_نشدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_GroupEibForm.رفع_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_نشدهNull()
            Me(Me.tableRp_GroupEibForm.رفع_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_GroupEibForm.رفع_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_شدهNull()
            Me(Me.tableRp_GroupEibForm.رفع_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلNull() As Boolean
            Return Me.IsNull(Me.tableRp_GroupEibForm.کلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلNull()
            Me(Me.tableRp_GroupEibForm.کلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_GroupEibForm.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_GroupEibForm.نامColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_NafarSatGroupRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_NafarSatGroup As Rp_NafarSatGroupDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_NafarSatGroup = CType(Me.Table,Rp_NafarSatGroupDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_Group() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_NafarSatGroup.Srl_Pm_GroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_Group' in table 'Rp_NafarSatGroup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_NafarSatGroup.Srl_Pm_GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Time() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_NafarSatGroup.TimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Time' in table 'Rp_NafarSatGroup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_NafarSatGroup.TimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_ساعت_کار() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_NafarSatGroup.جمع_ساعت_کارColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع ساعت کار' in table 'Rp_NafarSatGroup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_NafarSatGroup.جمع_ساعت_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_NafarSatGroup.نام_گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام گروه' in table 'Rp_NafarSatGroup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_NafarSatGroup.نام_گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_GroupNull() As Boolean
            Return Me.IsNull(Me.tableRp_NafarSatGroup.Srl_Pm_GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_GroupNull()
            Me(Me.tableRp_NafarSatGroup.Srl_Pm_GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTimeNull() As Boolean
            Return Me.IsNull(Me.tableRp_NafarSatGroup.TimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTimeNull()
            Me(Me.tableRp_NafarSatGroup.TimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_ساعت_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_NafarSatGroup.جمع_ساعت_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_ساعت_کارNull()
            Me(Me.tableRp_NafarSatGroup.جمع_ساعت_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_گروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_NafarSatGroup.نام_گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_گروهNull()
            Me(Me.tableRp_NafarSatGroup.نام_گروهColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_WorkFormMaster1Row
        Inherits Global.System.Data.DataRow
        
        Private tableRp_WorkFormMaster1 As Rp_WorkFormMaster1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_WorkFormMaster1 = CType(Me.Table,Rp_WorkFormMaster1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_WorkFormMaster1.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'واحد' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.شمارهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.شماره_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.تاریخ_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ فرم کار' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.تاریخ_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سرپرست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.سرپرستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سرپرست' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.سرپرستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مبدا() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.مبداColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مبدا' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.مبداColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مقصد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.مقصدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مقصد' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.مقصدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'گروه' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توضیح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.توضیح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توضیح کار' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.توضیح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پروژه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.نام_پروژهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پروژه' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.نام_پروژهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شرح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.شرح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شرح کار' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.شرح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعداد_نفرات() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.تعداد_نفراتColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعداد نفرات' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.تعداد_نفراتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نفر_ساعت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster1.نفر_ساعتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نفر ساعت' in table 'Rp_WorkFormMaster1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster1.نفر_ساعتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_WorkFormMaster1.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_WorkFormMaster1.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsواحدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetواحدNull()
            Me(Me.tableRp_WorkFormMaster1.واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_WorkFormMaster1.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_WorkFormMaster1.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.تاریخ_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_فرم_کارNull()
            Me(Me.tableRp_WorkFormMaster1.تاریخ_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسرپرستNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.سرپرستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسرپرستNull()
            Me(Me.tableRp_WorkFormMaster1.سرپرستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمبداNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.مبداColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمبداNull()
            Me(Me.tableRp_WorkFormMaster1.مبداColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمقصدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.مقصدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمقصدNull()
            Me(Me.tableRp_WorkFormMaster1.مقصدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsگروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetگروهNull()
            Me(Me.tableRp_WorkFormMaster1.گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتوضیح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.توضیح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتوضیح_کارNull()
            Me(Me.tableRp_WorkFormMaster1.توضیح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پروژهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.نام_پروژهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پروژهNull()
            Me(Me.tableRp_WorkFormMaster1.نام_پروژهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشرح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.شرح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشرح_کارNull()
            Me(Me.tableRp_WorkFormMaster1.شرح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتعداد_نفراتNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.تعداد_نفراتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتعداد_نفراتNull()
            Me(Me.tableRp_WorkFormMaster1.تعداد_نفراتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنفر_ساعتNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster1.نفر_ساعتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنفر_ساعتNull()
            Me(Me.tableRp_WorkFormMaster1.نفر_ساعتColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_WorkFormRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_WorkForm As Rp_WorkFormDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_WorkForm = CType(Me.Table,Rp_WorkFormDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_WorkForm.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_WorkForm.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'واحد' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.شمارهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.شماره_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.تاریخ_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ فرم کار' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.تاریخ_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سرپرست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.سرپرستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سرپرست' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.سرپرستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مبدا() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.مبداColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مبدا' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.مبداColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مقصد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.مقصدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مقصد' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.مقصدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'گروه' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توضیح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.توضیح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توضیح کار' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.توضیح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پروژه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm.نام_پروژهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پروژه' in table 'Rp_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm.نام_پروژهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_WorkForm.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_WorkForm.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsواحدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetواحدNull()
            Me(Me.tableRp_WorkForm.واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_WorkForm.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_WorkForm.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.تاریخ_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_فرم_کارNull()
            Me(Me.tableRp_WorkForm.تاریخ_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسرپرستNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.سرپرستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسرپرستNull()
            Me(Me.tableRp_WorkForm.سرپرستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمبداNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.مبداColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمبداNull()
            Me(Me.tableRp_WorkForm.مبداColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمقصدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.مقصدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمقصدNull()
            Me(Me.tableRp_WorkForm.مقصدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsگروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetگروهNull()
            Me(Me.tableRp_WorkForm.گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتوضیح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.توضیح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتوضیح_کارNull()
            Me(Me.tableRp_WorkForm.توضیح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پروژهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm.نام_پروژهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پروژهNull()
            Me(Me.tableRp_WorkForm.نام_پروژهColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_VahedEibFormRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_VahedEibForm As Rp_VahedEibFormDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_VahedEibForm = CType(Me.Table,Rp_VahedEibFormDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Vahed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_VahedEibForm.Srl_VahedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Vahed' in table 'Rp_VahedEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_VahedEibForm.Srl_VahedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_نشده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_VahedEibForm.رفع_نشدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع نشده' in table 'Rp_VahedEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_VahedEibForm.رفع_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_VahedEibForm.رفع_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع شده' in table 'Rp_VahedEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_VahedEibForm.رفع_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_VahedEibForm.کلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کل' in table 'Rp_VahedEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_VahedEibForm.کلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_VahedEibForm.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_VahedEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_VahedEibForm.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_VahedNull() As Boolean
            Return Me.IsNull(Me.tableRp_VahedEibForm.Srl_VahedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_VahedNull()
            Me(Me.tableRp_VahedEibForm.Srl_VahedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_نشدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_VahedEibForm.رفع_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_نشدهNull()
            Me(Me.tableRp_VahedEibForm.رفع_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_VahedEibForm.رفع_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_شدهNull()
            Me(Me.tableRp_VahedEibForm.رفع_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلNull() As Boolean
            Return Me.IsNull(Me.tableRp_VahedEibForm.کلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلNull()
            Me(Me.tableRp_VahedEibForm.کلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_VahedEibForm.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_VahedEibForm.نامColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_EibTypeEibFormRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_EibTypeEibForm As Rp_EibTypeEibFormDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_EibTypeEibForm = CType(Me.Table,Rp_EibTypeEibFormDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_EibType() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibTypeEibForm.Srl_Pm_EibTypeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_EibType' in table 'Rp_EibTypeEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibTypeEibForm.Srl_Pm_EibTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_نشده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibTypeEibForm.رفع_نشدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع نشده' in table 'Rp_EibTypeEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibTypeEibForm.رفع_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibTypeEibForm.رفع_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع شده' in table 'Rp_EibTypeEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibTypeEibForm.رفع_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibTypeEibForm.کلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کل' in table 'Rp_EibTypeEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibTypeEibForm.کلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibTypeEibForm.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_EibTypeEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibTypeEibForm.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_EibTypeNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibTypeEibForm.Srl_Pm_EibTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_EibTypeNull()
            Me(Me.tableRp_EibTypeEibForm.Srl_Pm_EibTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_نشدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibTypeEibForm.رفع_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_نشدهNull()
            Me(Me.tableRp_EibTypeEibForm.رفع_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibTypeEibForm.رفع_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_شدهNull()
            Me(Me.tableRp_EibTypeEibForm.رفع_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibTypeEibForm.کلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلNull()
            Me(Me.tableRp_EibTypeEibForm.کلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibTypeEibForm.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_EibTypeEibForm.نامColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_PostEibformRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_PostEibform As Rp_PostEibformDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_PostEibform = CType(Me.Table,Rp_PostEibformDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Post() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_PostEibform.Srl_PostColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Post' in table 'Rp_PostEibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PostEibform.Srl_PostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_نشده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_PostEibform.رفع_نشدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع نشده' in table 'Rp_PostEibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PostEibform.رفع_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_PostEibform.رفع_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع شده' in table 'Rp_PostEibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PostEibform.رفع_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_PostEibform.کلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کل' in table 'Rp_PostEibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PostEibform.کلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_PostEibform.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_PostEibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PostEibform.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_PostNull() As Boolean
            Return Me.IsNull(Me.tableRp_PostEibform.Srl_PostColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_PostNull()
            Me(Me.tableRp_PostEibform.Srl_PostColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_نشدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_PostEibform.رفع_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_نشدهNull()
            Me(Me.tableRp_PostEibform.رفع_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_PostEibform.رفع_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_شدهNull()
            Me(Me.tableRp_PostEibform.رفع_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلNull() As Boolean
            Return Me.IsNull(Me.tableRp_PostEibform.کلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلNull()
            Me(Me.tableRp_PostEibform.کلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_PostEibform.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_PostEibform.نامColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_CompareGroupEibFormRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_CompareGroupEibForm As Rp_CompareGroupEibFormDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_CompareGroupEibForm = CType(Me.Table,Rp_CompareGroupEibFormDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.نام_گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام گروه' in table 'Rp_CompareGroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.نام_گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.نام_واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام واحد' in table 'Rp_CompareGroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.نام_واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مسئول_گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.مسئول_گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مسئول گروه' in table 'Rp_CompareGroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.مسئول_گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Group() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.Srl_GroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Group' in table 'Rp_CompareGroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.Srl_GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_نشده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.رفع_نشدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع نشده' in table 'Rp_CompareGroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.رفع_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.رفع_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع شده' in table 'Rp_CompareGroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.رفع_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.کلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کل' in table 'Rp_CompareGroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.کلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property درصد_رفع_شده() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.درصد_رفع_شدهColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'درصد رفع شده' in table 'Rp_CompareGroupEibForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.درصد_رفع_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property درصد_رفع_نشده() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.درصد_رفع_نشدهColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'درصد رفع نشده' in table 'Rp_CompareGroupEibForm' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.درصد_رفع_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property درصد_نقص_به_کل_نواقص() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_CompareGroupEibForm.درصد_نقص_به_کل_نواقصColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'درصد نقص به کل نواقص' in table 'Rp_CompareGroupEibForm' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_CompareGroupEibForm.درصد_نقص_به_کل_نواقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_گروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.نام_گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_گروهNull()
            Me(Me.tableRp_CompareGroupEibForm.نام_گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_واحدNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.نام_واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_واحدNull()
            Me(Me.tableRp_CompareGroupEibForm.نام_واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمسئول_گروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.مسئول_گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمسئول_گروهNull()
            Me(Me.tableRp_CompareGroupEibForm.مسئول_گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_GroupNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.Srl_GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_GroupNull()
            Me(Me.tableRp_CompareGroupEibForm.Srl_GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_نشدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.رفع_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_نشدهNull()
            Me(Me.tableRp_CompareGroupEibForm.رفع_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.رفع_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_شدهNull()
            Me(Me.tableRp_CompareGroupEibForm.رفع_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.کلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلNull()
            Me(Me.tableRp_CompareGroupEibForm.کلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isدرصد_رفع_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.درصد_رفع_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setدرصد_رفع_شدهNull()
            Me(Me.tableRp_CompareGroupEibForm.درصد_رفع_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isدرصد_رفع_نشدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.درصد_رفع_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setدرصد_رفع_نشدهNull()
            Me(Me.tableRp_CompareGroupEibForm.درصد_رفع_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isدرصد_نقص_به_کل_نواقصNull() As Boolean
            Return Me.IsNull(Me.tableRp_CompareGroupEibForm.درصد_نقص_به_کل_نواقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setدرصد_نقص_به_کل_نواقصNull()
            Me(Me.tableRp_CompareGroupEibForm.درصد_نقص_به_کل_نواقصColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_WorkFormWorkDisRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_WorkFormWorkDis As Rp_WorkFormWorkDisDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_WorkFormWorkDis = CType(Me.Table,Rp_WorkFormWorkDisDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مجموع() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormWorkDis.مجموعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مجموع' in table 'Rp_WorkFormWorkDis' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormWorkDis.مجموعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property موضوع_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormWorkDis.موضوع_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'موضوع کار' in table 'Rp_WorkFormWorkDis' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormWorkDis.موضوع_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمجموعNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormWorkDis.مجموعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمجموعNull()
            Me(Me.tableRp_WorkFormWorkDis.مجموعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isموضوع_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormWorkDis.موضوع_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setموضوع_کارNull()
            Me(Me.tableRp_WorkFormWorkDis.موضوع_کارColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_NafarSatProjectRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_NafarSatProject As Rp_NafarSatProjectDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_NafarSatProject = CType(Me.Table,Rp_NafarSatProjectDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پروژه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_NafarSatProject.نام_پروژهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پروژه' in table 'Rp_NafarSatProject' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_NafarSatProject.نام_پروژهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_ساعت_کار() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_NafarSatProject.جمع_ساعت_کارColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع ساعت کار' in table 'Rp_NafarSatProject' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_NafarSatProject.جمع_ساعت_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پروژهNull() As Boolean
            Return Me.IsNull(Me.tableRp_NafarSatProject.نام_پروژهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پروژهNull()
            Me(Me.tableRp_NafarSatProject.نام_پروژهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_ساعت_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_NafarSatProject.جمع_ساعت_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_ساعت_کارNull()
            Me(Me.tableRp_NafarSatProject.جمع_ساعت_کارColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_KholaseWorkFormTmpRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_KholaseWorkFormTmp As Rp_KholaseWorkFormTmpDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_KholaseWorkFormTmp = CType(Me.Table,Rp_KholaseWorkFormTmpDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_KholaseWorkFormTmp.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_KholaseWorkFormTmp.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkFormTmp.شماره_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_KholaseWorkFormTmp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkFormTmp.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkFormTmp.تاریخ_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ فرم کار' in table 'Rp_KholaseWorkFormTmp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkFormTmp.تاریخ_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkFormTmp.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'Rp_KholaseWorkFormTmp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkFormTmp.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkFormTmp.اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار تردد' in table 'Rp_KholaseWorkFormTmp' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkFormTmp.اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت_شروع() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkFormTmp.ساعت_شروعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت شروع' in table 'Rp_KholaseWorkFormTmp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkFormTmp.ساعت_شروعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت_پایان() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkFormTmp.ساعت_پایانColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت پایان' in table 'Rp_KholaseWorkFormTmp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkFormTmp.ساعت_پایانColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkFormTmp.جمع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع اضافه کار' in table 'Rp_KholaseWorkFormTmp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkFormTmp.جمع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkFormTmp.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_KholaseWorkFormTmp.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkFormTmp.تاریخ_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_فرم_کارNull()
            Me(Me.tableRp_KholaseWorkFormTmp.تاریخ_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkFormTmp.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableRp_KholaseWorkFormTmp.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkFormTmp.اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ترددNull()
            Me(Me.tableRp_KholaseWorkFormTmp.اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isساعت_شروعNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkFormTmp.ساعت_شروعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setساعت_شروعNull()
            Me(Me.tableRp_KholaseWorkFormTmp.ساعت_شروعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isساعت_پایانNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkFormTmp.ساعت_پایانColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setساعت_پایانNull()
            Me(Me.tableRp_KholaseWorkFormTmp.ساعت_پایانColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkFormTmp.جمع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_اضافه_کارNull()
            Me(Me.tableRp_KholaseWorkFormTmp.جمع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_SaghfeKarRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_SaghfeKar As Rp_SaghfeKarDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_SaghfeKar = CType(Me.Table,Rp_SaghfeKarDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_SaghfeKar.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.شماره_فرم_کارColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سقف_اضاقه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.سقف_اضاقه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سقف اضاقه کار' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.سقف_اضاقه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نفر_ساعت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.نفر_ساعتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نفر ساعت' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.نفر_ساعتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار تردد' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property عضو_گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.عضو_گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'عضو گروه' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.عضو_گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.نام_گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام گروه' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.نام_گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property روز_هفته() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfeKar.روز_هفتهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'روز هفته' in table 'Rp_SaghfeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfeKar.روز_هفتهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_SaghfeKar.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_SaghfeKar.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isسقف_اضاقه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.سقف_اضاقه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setسقف_اضاقه_کارNull()
            Me(Me.tableRp_SaghfeKar.سقف_اضاقه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنفر_ساعتNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.نفر_ساعتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنفر_ساعتNull()
            Me(Me.tableRp_SaghfeKar.نفر_ساعتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کارNull()
            Me(Me.tableRp_SaghfeKar.اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ترددNull()
            Me(Me.tableRp_SaghfeKar.اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isعضو_گروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.عضو_گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setعضو_گروهNull()
            Me(Me.tableRp_SaghfeKar.عضو_گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_گروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.نام_گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_گروهNull()
            Me(Me.tableRp_SaghfeKar.نام_گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isروز_هفتهNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfeKar.روز_هفتهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setروز_هفتهNull()
            Me(Me.tableRp_SaghfeKar.روز_هفتهColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_SaghfKarTotalRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_SaghfKarTotal As Rp_SaghfKarTotalDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_SaghfKarTotal = CType(Me.Table,Rp_SaghfKarTotalDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_پرسنلی() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfKarTotal.کد_پرسنلیColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد پرسنلی' in table 'Rp_SaghfKarTotal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfKarTotal.کد_پرسنلیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_و_نام_خانوادگی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfKarTotal.نام_و_نام_خانوادگیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام و نام خانوادگی' in table 'Rp_SaghfKarTotal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfKarTotal.نام_و_نام_خانوادگیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مجموع_ساعت_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfKarTotal.مجموع_ساعت_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مجموع ساعت کار' in table 'Rp_SaghfKarTotal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfKarTotal.مجموع_ساعت_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مجموع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfKarTotal.مجموع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مجموع اضافه کار' in table 'Rp_SaghfKarTotal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfKarTotal.مجموع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مجموع_اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfKarTotal.مجموع_اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مجموع اضافه کار تردد' in table 'Rp_SaghfKarTotal' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfKarTotal.مجموع_اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مجموع_سقف_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SaghfKarTotal.مجموع_سقف_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مجموع سقف کار' in table 'Rp_SaghfKarTotal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SaghfKarTotal.مجموع_سقف_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_پرسنلیNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfKarTotal.کد_پرسنلیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_پرسنلیNull()
            Me(Me.tableRp_SaghfKarTotal.کد_پرسنلیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_و_نام_خانوادگیNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfKarTotal.نام_و_نام_خانوادگیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_و_نام_خانوادگیNull()
            Me(Me.tableRp_SaghfKarTotal.نام_و_نام_خانوادگیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمجموع_ساعت_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfKarTotal.مجموع_ساعت_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمجموع_ساعت_کارNull()
            Me(Me.tableRp_SaghfKarTotal.مجموع_ساعت_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمجموع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfKarTotal.مجموع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمجموع_اضافه_کارNull()
            Me(Me.tableRp_SaghfKarTotal.مجموع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمجموع_اضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfKarTotal.مجموع_اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمجموع_اضافه_کار_ترددNull()
            Me(Me.tableRp_SaghfKarTotal.مجموع_اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمجموع_سقف_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SaghfKarTotal.مجموع_سقف_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمجموع_سقف_کارNull()
            Me(Me.tableRp_SaghfKarTotal.مجموع_سقف_کارColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_WorkFormMasterWithTEMPRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_WorkFormMasterWithTEMP As Rp_WorkFormMasterWithTEMPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_WorkFormMasterWithTEMP = CType(Me.Table,Rp_WorkFormMasterWithTEMPDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'واحد' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.شمارهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.شماره_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_WorkFormMasterWithTEMP' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.تاریخ_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ فرم کار' in table 'Rp_WorkFormMasterWithTEMP' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.تاریخ_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سرپرست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.سرپرستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سرپرست' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.سرپرستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مبدا() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.مبداColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مبدا' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.مبداColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مقصد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.مقصدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مقصد' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.مقصدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'گروه' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توضیح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.توضیح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توضیح کار' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.توضیح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پروژه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.نام_پروژهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پروژه' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.نام_پروژهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شرح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.شرح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شرح کار' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.شرح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعداد_نفرات() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.تعداد_نفراتColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعداد نفرات' in table 'Rp_WorkFormMasterWithTEMP' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.تعداد_نفراتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نفر_ساعت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterWithTEMP.نفر_ساعتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نفر ساعت' in table 'Rp_WorkFormMasterWithTEMP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterWithTEMP.نفر_ساعتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsواحدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetواحدNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.تاریخ_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_فرم_کارNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.تاریخ_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسرپرستNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.سرپرستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسرپرستNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.سرپرستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمبداNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.مبداColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمبداNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.مبداColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمقصدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.مقصدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمقصدNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.مقصدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsگروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetگروهNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتوضیح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.توضیح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتوضیح_کارNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.توضیح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پروژهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.نام_پروژهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پروژهNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.نام_پروژهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشرح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.شرح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشرح_کارNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.شرح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتعداد_نفراتNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.تعداد_نفراتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتعداد_نفراتNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.تعداد_نفراتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنفر_ساعتNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterWithTEMP.نفر_ساعتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنفر_ساعتNull()
            Me(Me.tableRp_WorkFormMasterWithTEMP.نفر_ساعتColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_WorkFormMasterRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_WorkFormMaster As Rp_WorkFormMasterDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_WorkFormMaster = CType(Me.Table,Rp_WorkFormMasterDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_WorkFormMaster.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.شمارهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.شماره_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.تاریخ_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ فرم کار' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.تاریخ_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property عضو() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.عضوColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'عضو' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.عضوColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سرپرست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.سرپرستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سرپرست' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.سرپرستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مبدا() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.مبداColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مبدا' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.مبداColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مقصد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.مقصدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مقصد' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.مقصدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'گروه' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'واحد' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توضیح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.توضیح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توضیح کار' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.توضیح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پروژه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.نام_پروژهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پروژه' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.نام_پروژهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شرح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.شرح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شرح کار' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.شرح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_Ashkhas_Sarparast() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.Srl_Pm_Ashkhas_SarparastColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_Ashkhas_Sarparast' in table 'Rp_WorkFormMaster' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.Srl_Pm_Ashkhas_SarparastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اعضا() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMaster.اعضاColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اعضا' in table 'Rp_WorkFormMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMaster.اعضاColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_WorkFormMaster.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_WorkFormMaster.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_WorkFormMaster.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.تاریخ_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_فرم_کارNull()
            Me(Me.tableRp_WorkFormMaster.تاریخ_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsعضوNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.عضوColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetعضوNull()
            Me(Me.tableRp_WorkFormMaster.عضوColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسرپرستNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.سرپرستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسرپرستNull()
            Me(Me.tableRp_WorkFormMaster.سرپرستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمبداNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.مبداColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمبداNull()
            Me(Me.tableRp_WorkFormMaster.مبداColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمقصدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.مقصدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمقصدNull()
            Me(Me.tableRp_WorkFormMaster.مقصدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsگروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetگروهNull()
            Me(Me.tableRp_WorkFormMaster.گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsواحدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetواحدNull()
            Me(Me.tableRp_WorkFormMaster.واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتوضیح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.توضیح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتوضیح_کارNull()
            Me(Me.tableRp_WorkFormMaster.توضیح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_WorkFormMaster.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پروژهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.نام_پروژهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پروژهNull()
            Me(Me.tableRp_WorkFormMaster.نام_پروژهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشرح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.شرح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشرح_کارNull()
            Me(Me.tableRp_WorkFormMaster.شرح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_Ashkhas_SarparastNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.Srl_Pm_Ashkhas_SarparastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_Ashkhas_SarparastNull()
            Me(Me.tableRp_WorkFormMaster.Srl_Pm_Ashkhas_SarparastColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsاعضاNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMaster.اعضاColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetاعضاNull()
            Me(Me.tableRp_WorkFormMaster.اعضاColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_KholaseWorkFormRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_KholaseWorkForm As Rp_KholaseWorkFormDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_KholaseWorkForm = CType(Me.Table,Rp_KholaseWorkFormDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_KholaseWorkForm.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkForm.شماره_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_KholaseWorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkForm.تاریخ_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ فرم کار' in table 'Rp_KholaseWorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.تاریخ_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkForm.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'Rp_KholaseWorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت_شروع() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkForm.ساعت_شروعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت شروع' in table 'Rp_KholaseWorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.ساعت_شروعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت_پایان() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkForm.ساعت_پایانColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت پایان' in table 'Rp_KholaseWorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.ساعت_پایانColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkForm.جمع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع اضافه کار' in table 'Rp_KholaseWorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.جمع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkForm.اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار تردد' in table 'Rp_KholaseWorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_KholaseWorkForm.شمارهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_KholaseWorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_KholaseWorkForm.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkForm.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_KholaseWorkForm.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkForm.تاریخ_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_فرم_کارNull()
            Me(Me.tableRp_KholaseWorkForm.تاریخ_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkForm.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableRp_KholaseWorkForm.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isساعت_شروعNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkForm.ساعت_شروعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setساعت_شروعNull()
            Me(Me.tableRp_KholaseWorkForm.ساعت_شروعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isساعت_پایانNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkForm.ساعت_پایانColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setساعت_پایانNull()
            Me(Me.tableRp_KholaseWorkForm.ساعت_پایانColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkForm.جمع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_اضافه_کارNull()
            Me(Me.tableRp_KholaseWorkForm.جمع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkForm.اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ترددNull()
            Me(Me.tableRp_KholaseWorkForm.اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_KholaseWorkForm.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_KholaseWorkForm.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_ExtraWorkRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_ExtraWork As Rp_ExtraWorkDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_ExtraWork = CType(Me.Table,Rp_ExtraWorkDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_فرد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.نام_فردColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام فرد' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.نام_فردColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_شناسایی() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.کد_شناساییColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد شناسایی' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.کد_شناساییColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرم کار' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.شمارهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار تردد' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کسر_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.کسر_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کسر کار' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.کسر_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.جمع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع اضافه کار' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.جمع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعطیل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.تعطیلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعطیل' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.تعطیلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ماموریت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWork.ماموریتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ماموریت' in table 'Rp_ExtraWork' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWork.ماموریتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_ExtraWork.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_فردNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.نام_فردColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_فردNull()
            Me(Me.tableRp_ExtraWork.نام_فردColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_شناساییNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.کد_شناساییColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_شناساییNull()
            Me(Me.tableRp_ExtraWork.کد_شناساییColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isفرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setفرم_کارNull()
            Me(Me.tableRp_ExtraWork.فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_ExtraWork.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_ExtraWork.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableRp_ExtraWork.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کارNull()
            Me(Me.tableRp_ExtraWork.اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ترددNull()
            Me(Me.tableRp_ExtraWork.اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکسر_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.کسر_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکسر_کارNull()
            Me(Me.tableRp_ExtraWork.کسر_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.جمع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_اضافه_کارNull()
            Me(Me.tableRp_ExtraWork.جمع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتعطیلNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.تعطیلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتعطیلNull()
            Me(Me.tableRp_ExtraWork.تعطیلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_ExtraWork.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsماموریتNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWork.ماموریتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetماموریتNull()
            Me(Me.tableRp_ExtraWork.ماموریتColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_WorkFormMasterSearchRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_WorkFormMasterSearch As Rp_WorkFormMasterSearchDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_WorkFormMasterSearch = CType(Me.Table,Rp_WorkFormMasterSearchDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_WorkFormMasterSearch.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.شمارهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.شماره_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم کار' in table 'Rp_WorkFormMasterSearch' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.شماره_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.تاریخ_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ فرم کار' in table 'Rp_WorkFormMasterSearch' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.تاریخ_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سرپرست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.سرپرستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سرپرست' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.سرپرستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مبدا() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.مبداColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مبدا' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.مبداColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اعضا() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.اعضاColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اعضا' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.اعضاColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'گروه' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'واحد' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توضیح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.توضیح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توضیح کار' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.توضیح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پروژه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.نام_پروژهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پروژه' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.نام_پروژهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شرح_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.شرح_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شرح کار' in table 'Rp_WorkFormMasterSearch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.شرح_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_Ashkhas_Sarparast() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkFormMasterSearch.Srl_Pm_Ashkhas_SarparastColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_Ashkhas_Sarparast' in table 'Rp_WorkFormMasterSearch"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkFormMasterSearch.Srl_Pm_Ashkhas_SarparastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_WorkFormMasterSearch.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_WorkFormMasterSearch.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.شماره_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_کارNull()
            Me(Me.tableRp_WorkFormMasterSearch.شماره_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.تاریخ_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_فرم_کارNull()
            Me(Me.tableRp_WorkFormMasterSearch.تاریخ_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسرپرستNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.سرپرستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسرپرستNull()
            Me(Me.tableRp_WorkFormMasterSearch.سرپرستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمبداNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.مبداColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمبداNull()
            Me(Me.tableRp_WorkFormMasterSearch.مبداColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableRp_WorkFormMasterSearch.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsاعضاNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.اعضاColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetاعضاNull()
            Me(Me.tableRp_WorkFormMasterSearch.اعضاColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsگروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetگروهNull()
            Me(Me.tableRp_WorkFormMasterSearch.گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsواحدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetواحدNull()
            Me(Me.tableRp_WorkFormMasterSearch.واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتوضیح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.توضیح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتوضیح_کارNull()
            Me(Me.tableRp_WorkFormMasterSearch.توضیح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_WorkFormMasterSearch.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پروژهNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.نام_پروژهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پروژهNull()
            Me(Me.tableRp_WorkFormMasterSearch.نام_پروژهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشرح_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.شرح_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشرح_کارNull()
            Me(Me.tableRp_WorkFormMasterSearch.شرح_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_Ashkhas_SarparastNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkFormMasterSearch.Srl_Pm_Ashkhas_SarparastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_Ashkhas_SarparastNull()
            Me(Me.tableRp_WorkFormMasterSearch.Srl_Pm_Ashkhas_SarparastColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_MultiEzafeKarRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_MultiEzafeKar As Rp_MultiEzafeKarDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_MultiEzafeKar = CType(Me.Table,Rp_MultiEzafeKarDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_فرد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.نام_فردColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام فرد' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.نام_فردColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_شناسایی() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.کد_شناساییColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد شناسایی' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.کد_شناساییColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرم کار' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.شمارهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار تردد' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کسر_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.کسر_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کسر کار' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.کسر_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.جمع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع اضافه کار' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.جمع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعطیل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_MultiEzafeKar.تعطیلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعطیل' in table 'Rp_MultiEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MultiEzafeKar.تعطیلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_MultiEzafeKar.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_MultiEzafeKar.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_فردNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.نام_فردColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_فردNull()
            Me(Me.tableRp_MultiEzafeKar.نام_فردColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_شناساییNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.کد_شناساییColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_شناساییNull()
            Me(Me.tableRp_MultiEzafeKar.کد_شناساییColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isفرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setفرم_کارNull()
            Me(Me.tableRp_MultiEzafeKar.فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_MultiEzafeKar.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_MultiEzafeKar.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableRp_MultiEzafeKar.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کارNull()
            Me(Me.tableRp_MultiEzafeKar.اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ترددNull()
            Me(Me.tableRp_MultiEzafeKar.اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکسر_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.کسر_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکسر_کارNull()
            Me(Me.tableRp_MultiEzafeKar.کسر_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.جمع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_اضافه_کارNull()
            Me(Me.tableRp_MultiEzafeKar.جمع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتعطیلNull() As Boolean
            Return Me.IsNull(Me.tableRp_MultiEzafeKar.تعطیلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتعطیلNull()
            Me(Me.tableRp_MultiEzafeKar.تعطیلColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_ReleRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Rele As Rp_ReleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Rele = CType(Me.Table,Rp_ReleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مدل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.مدلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مدل' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.مدلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ساخت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.تاریخ_ساختColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ساخت' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.تاریخ_ساختColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.تاریخ_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ بهره برداری' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.تاریخ_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_سریال() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.شماره_سریالColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره سریال' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.شماره_سریالColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_دیسپاچینگ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.کد_دیسپاچینگColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد دیسپاچینگ' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.کد_دیسپاچینگColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نسبت_CT() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.نسبت_CTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نسبت CT' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.نسبت_CTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نسبت_VT() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.نسبت_VTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نسبت VT' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.نسبت_VTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_سفارش() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.کد_سفارشColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد سفارش' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.کد_سفارشColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سازنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Rele.سازندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سازنده' in table 'Rp_Rele' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Rele.سازندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_Rele.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_Rele.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_Rele.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمدلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.مدلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمدلNull()
            Me(Me.tableRp_Rele.مدلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ساختNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.تاریخ_ساختColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ساختNull()
            Me(Me.tableRp_Rele.تاریخ_ساختColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.تاریخ_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_بهره_برداریNull()
            Me(Me.tableRp_Rele.تاریخ_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_سریالNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.شماره_سریالColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_سریالNull()
            Me(Me.tableRp_Rele.شماره_سریالColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_دیسپاچینگNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.کد_دیسپاچینگColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_دیسپاچینگNull()
            Me(Me.tableRp_Rele.کد_دیسپاچینگColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنسبت_CTNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.نسبت_CTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنسبت_CTNull()
            Me(Me.tableRp_Rele.نسبت_CTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنسبت_VTNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.نسبت_VTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنسبت_VTNull()
            Me(Me.tableRp_Rele.نسبت_VTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_سفارشNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.کد_سفارشColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_سفارشNull()
            Me(Me.tableRp_Rele.کد_سفارشColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسازندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Rele.سازندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسازندهNull()
            Me(Me.tableRp_Rele.سازندهColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_TranseGhodratRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_TranseGhodrat As Rp_TranseGhodratDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_TranseGhodrat = CType(Me.Table,Rp_TranseGhodratDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مدل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.مدلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مدل' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.مدلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ساخت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.تاریخ_ساختColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ساخت' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.تاریخ_ساختColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.تاریخ_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ بهره برداری' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.تاریخ_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سازنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.سازندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سازنده' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.سازندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_سریال() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.شماره_سریالColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره سریال' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.شماره_سریالColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_دیسپاچینگ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.کد_دیسپاچینگColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد دیسپاچینگ' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.کد_دیسپاچینگColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property خنک_کننده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.خنک_کنندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'خنک کننده' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.خنک_کنندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ظرفیت_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.ظرفیت_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ظرفیت نامی' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.ظرفیت_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property گروه_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.گروه_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'گروه برداری' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.گروه_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نسبت_تبدیل_ولتاژ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.نسبت_تبدیل_ولتاژColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نسبت تبدیل ولتاژ' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.نسبت_تبدیل_ولتاژColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سیستم_تغییر_تپ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.سیستم_تغییر_تپColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سیستم تغییر تپ' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.سیستم_تغییر_تپColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مکان_تپ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.مکان_تپColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مکان تپ' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.مکان_تپColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نسبت_تبدیل_جریان() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.نسبت_تبدیل_جریانColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نسبت تبدیل جریان' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.نسبت_تبدیل_جریانColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bill() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.BillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bill' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.BillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property درصد_امپدانس() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.درصد_امپدانسColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'درصد امپدانس' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.درصد_امپدانسColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرکانس() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TranseGhodrat.فرکانسColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرکانس' in table 'Rp_TranseGhodrat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TranseGhodrat.فرکانسColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_TranseGhodrat.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_TranseGhodrat.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_TranseGhodrat.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمدلNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.مدلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمدلNull()
            Me(Me.tableRp_TranseGhodrat.مدلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ساختNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.تاریخ_ساختColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ساختNull()
            Me(Me.tableRp_TranseGhodrat.تاریخ_ساختColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.تاریخ_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_بهره_برداریNull()
            Me(Me.tableRp_TranseGhodrat.تاریخ_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسازندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.سازندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسازندهNull()
            Me(Me.tableRp_TranseGhodrat.سازندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_سریالNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.شماره_سریالColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_سریالNull()
            Me(Me.tableRp_TranseGhodrat.شماره_سریالColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_دیسپاچینگNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.کد_دیسپاچینگColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_دیسپاچینگNull()
            Me(Me.tableRp_TranseGhodrat.کد_دیسپاچینگColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isخنک_کنندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.خنک_کنندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setخنک_کنندهNull()
            Me(Me.tableRp_TranseGhodrat.خنک_کنندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isظرفیت_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.ظرفیت_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setظرفیت_نامیNull()
            Me(Me.tableRp_TranseGhodrat.ظرفیت_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isگروه_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.گروه_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setگروه_برداریNull()
            Me(Me.tableRp_TranseGhodrat.گروه_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنسبت_تبدیل_ولتاژNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.نسبت_تبدیل_ولتاژColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنسبت_تبدیل_ولتاژNull()
            Me(Me.tableRp_TranseGhodrat.نسبت_تبدیل_ولتاژColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isسیستم_تغییر_تپNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.سیستم_تغییر_تپColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setسیستم_تغییر_تپNull()
            Me(Me.tableRp_TranseGhodrat.سیستم_تغییر_تپColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمکان_تپNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.مکان_تپColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمکان_تپNull()
            Me(Me.tableRp_TranseGhodrat.مکان_تپColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنسبت_تبدیل_جریانNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.نسبت_تبدیل_جریانColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنسبت_تبدیل_جریانNull()
            Me(Me.tableRp_TranseGhodrat.نسبت_تبدیل_جریانColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBillNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.BillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBillNull()
            Me(Me.tableRp_TranseGhodrat.BillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isدرصد_امپدانسNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.درصد_امپدانسColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setدرصد_امپدانسNull()
            Me(Me.tableRp_TranseGhodrat.درصد_امپدانسColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsفرکانسNull() As Boolean
            Return Me.IsNull(Me.tableRp_TranseGhodrat.فرکانسColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetفرکانسNull()
            Me(Me.tableRp_TranseGhodrat.فرکانسColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_BarghgirRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Barghgir As Rp_BarghgirDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Barghgir = CType(Me.Table,Rp_BarghgirDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مدل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.مدلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مدل' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.مدلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ساخت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.تاریخ_ساختColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ساخت' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.تاریخ_ساختColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.تاریخ_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ بهره برداری' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.تاریخ_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سازنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.سازندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سازنده' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.سازندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_سریال() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.شماره_سریالColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره سریال' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.شماره_سریالColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_دیسپاچینگ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.کد_دیسپاچینگColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد دیسپاچینگ' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.کد_دیسپاچینگColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توان_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.توان_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توان نامی' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.توان_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.جریان_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان نامی' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.جریان_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ولتاژ_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.ولتاژ_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ولتاژ نامی' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.ولتاژ_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_اتصال_کوتاه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.جریان_اتصال_کوتاهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان اتصال کوتاه' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.جریان_اتصال_کوتاهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کلاس() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Barghgir.کلاسColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کلاس' in table 'Rp_Barghgir' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Barghgir.کلاسColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_Barghgir.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_Barghgir.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_Barghgir.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمدلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.مدلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمدلNull()
            Me(Me.tableRp_Barghgir.مدلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ساختNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.تاریخ_ساختColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ساختNull()
            Me(Me.tableRp_Barghgir.تاریخ_ساختColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.تاریخ_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_بهره_برداریNull()
            Me(Me.tableRp_Barghgir.تاریخ_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسازندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.سازندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسازندهNull()
            Me(Me.tableRp_Barghgir.سازندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_سریالNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.شماره_سریالColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_سریالNull()
            Me(Me.tableRp_Barghgir.شماره_سریالColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_دیسپاچینگNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.کد_دیسپاچینگColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_دیسپاچینگNull()
            Me(Me.tableRp_Barghgir.کد_دیسپاچینگColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتوان_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.توان_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتوان_نامیNull()
            Me(Me.tableRp_Barghgir.توان_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.جریان_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_نامیNull()
            Me(Me.tableRp_Barghgir.جریان_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isولتاژ_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.ولتاژ_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setولتاژ_نامیNull()
            Me(Me.tableRp_Barghgir.ولتاژ_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_اتصال_کوتاهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.جریان_اتصال_کوتاهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_اتصال_کوتاهNull()
            Me(Me.tableRp_Barghgir.جریان_اتصال_کوتاهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلاسNull() As Boolean
            Return Me.IsNull(Me.tableRp_Barghgir.کلاسColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلاسNull()
            Me(Me.tableRp_Barghgir.کلاسColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_SexionerRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Sexioner As Rp_SexionerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Sexioner = CType(Me.Table,Rp_SexionerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مدل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.مدلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مدل' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.مدلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ساخت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.تاریخ_ساختColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ساخت' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.تاریخ_ساختColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.تاریخ_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ بهره برداری' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.تاریخ_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سازنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.سازندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سازنده' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.سازندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_سریال() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.شماره_سریالColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره سریال' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.شماره_سریالColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_دیسپاچینگ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.کد_دیسپاچینگColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد دیسپاچینگ' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.کد_دیسپاچینگColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.جریان_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان نامی' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.جریان_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ولتاژ_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.ولتاژ_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ولتاژ نامی' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.ولتاژ_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_اتصال_کوتاه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.جریان_اتصال_کوتاهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان اتصال کوتاه' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.جریان_اتصال_کوتاهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property حداکثر_جریان() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.حداکثر_جریانColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'حداکثر جریان' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.حداکثر_جریانColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ولتاژ_قابل_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Sexioner.ولتاژ_قابل_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ولتاژ قابل بهره برداری' in table 'Rp_Sexioner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Sexioner.ولتاژ_قابل_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_Sexioner.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_Sexioner.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_Sexioner.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمدلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.مدلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمدلNull()
            Me(Me.tableRp_Sexioner.مدلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ساختNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.تاریخ_ساختColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ساختNull()
            Me(Me.tableRp_Sexioner.تاریخ_ساختColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.تاریخ_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_بهره_برداریNull()
            Me(Me.tableRp_Sexioner.تاریخ_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسازندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.سازندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسازندهNull()
            Me(Me.tableRp_Sexioner.سازندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_سریالNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.شماره_سریالColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_سریالNull()
            Me(Me.tableRp_Sexioner.شماره_سریالColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_دیسپاچینگNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.کد_دیسپاچینگColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_دیسپاچینگNull()
            Me(Me.tableRp_Sexioner.کد_دیسپاچینگColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.جریان_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_نامیNull()
            Me(Me.tableRp_Sexioner.جریان_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isولتاژ_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.ولتاژ_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setولتاژ_نامیNull()
            Me(Me.tableRp_Sexioner.ولتاژ_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_اتصال_کوتاهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.جریان_اتصال_کوتاهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_اتصال_کوتاهNull()
            Me(Me.tableRp_Sexioner.جریان_اتصال_کوتاهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isحداکثر_جریانNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.حداکثر_جریانColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setحداکثر_جریانNull()
            Me(Me.tableRp_Sexioner.حداکثر_جریانColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isولتاژ_قابل_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_Sexioner.ولتاژ_قابل_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setولتاژ_قابل_بهره_برداریNull()
            Me(Me.tableRp_Sexioner.ولتاژ_قابل_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_BreakerRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Breaker As Rp_BreakerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Breaker = CType(Me.Table,Rp_BreakerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مدل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.مدلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مدل' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.مدلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ساخت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.تاریخ_ساختColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ساخت' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.تاریخ_ساختColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.تاریخ_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ بهره برداری' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.تاریخ_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سازنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.سازندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سازنده' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.سازندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_سریال() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.شماره_سریالColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره سریال' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.شماره_سریالColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_دیسپاچینگ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.کد_دیسپاچینگColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد دیسپاچینگ' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.کد_دیسپاچینگColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.جریان_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان نامی' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.جریان_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ولتاژ_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.ولتاژ_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ولتاژ نامی' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.ولتاژ_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_اتصال_کوتاه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.جریان_اتصال_کوتاهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان اتصال کوتاه' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.جریان_اتصال_کوتاهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property حداکثر_جریان() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.حداکثر_جریانColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'حداکثر جریان' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.حداکثر_جریانColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property حداکثر_ولتاژ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.حداکثر_ولتاژColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'حداکثر ولتاژ' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.حداکثر_ولتاژColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property زمان_قطع() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.زمان_قطعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'زمان قطع' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.زمان_قطعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property زمان_وصل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.زمان_وصلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'زمان وصل' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.زمان_وصلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bill() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.BillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bill' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.BillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نوع_مکانیزم() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.نوع_مکانیزمColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نوع مکانیزم' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.نوع_مکانیزمColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سیستم_خاموش_کننده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Breaker.سیستم_خاموش_کنندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سیستم خاموش کننده' in table 'Rp_Breaker' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Breaker.سیستم_خاموش_کنندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_Breaker.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_Breaker.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_Breaker.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمدلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.مدلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمدلNull()
            Me(Me.tableRp_Breaker.مدلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ساختNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.تاریخ_ساختColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ساختNull()
            Me(Me.tableRp_Breaker.تاریخ_ساختColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.تاریخ_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_بهره_برداریNull()
            Me(Me.tableRp_Breaker.تاریخ_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسازندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.سازندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسازندهNull()
            Me(Me.tableRp_Breaker.سازندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_سریالNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.شماره_سریالColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_سریالNull()
            Me(Me.tableRp_Breaker.شماره_سریالColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_دیسپاچینگNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.کد_دیسپاچینگColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_دیسپاچینگNull()
            Me(Me.tableRp_Breaker.کد_دیسپاچینگColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.جریان_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_نامیNull()
            Me(Me.tableRp_Breaker.جریان_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isولتاژ_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.ولتاژ_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setولتاژ_نامیNull()
            Me(Me.tableRp_Breaker.ولتاژ_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_اتصال_کوتاهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.جریان_اتصال_کوتاهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_اتصال_کوتاهNull()
            Me(Me.tableRp_Breaker.جریان_اتصال_کوتاهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isحداکثر_جریانNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.حداکثر_جریانColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setحداکثر_جریانNull()
            Me(Me.tableRp_Breaker.حداکثر_جریانColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isحداکثر_ولتاژNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.حداکثر_ولتاژColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setحداکثر_ولتاژNull()
            Me(Me.tableRp_Breaker.حداکثر_ولتاژColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isزمان_قطعNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.زمان_قطعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setزمان_قطعNull()
            Me(Me.tableRp_Breaker.زمان_قطعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isزمان_وصلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.زمان_وصلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setزمان_وصلNull()
            Me(Me.tableRp_Breaker.زمان_وصلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBillNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.BillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBillNull()
            Me(Me.tableRp_Breaker.BillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنوع_مکانیزمNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.نوع_مکانیزمColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنوع_مکانیزمNull()
            Me(Me.tableRp_Breaker.نوع_مکانیزمColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isسیستم_خاموش_کنندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Breaker.سیستم_خاموش_کنندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setسیستم_خاموش_کنندهNull()
            Me(Me.tableRp_Breaker.سیستم_خاموش_کنندهColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_TeranseRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Teranse As Rp_TeranseDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Teranse = CType(Me.Table,Rp_TeranseDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مدل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.مدلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مدل' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.مدلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ساخت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.تاریخ_ساختColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ساخت' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.تاریخ_ساختColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.تاریخ_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ بهره برداری' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.تاریخ_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سازنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.سازندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سازنده' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.سازندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_سریال() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.شماره_سریالColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره سریال' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.شماره_سریالColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_دیسپاچینگ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.کد_دیسپاچینگColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد دیسپاچینگ' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.کد_دیسپاچینگColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.جریان_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان نامی' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.جریان_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ولتاژ_نامی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.ولتاژ_نامیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ولتاژ نامی' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.ولتاژ_نامیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_اتصال_کوتاه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.جریان_اتصال_کوتاهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان اتصال کوتاه' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.جریان_اتصال_کوتاهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property حداکثر_جریان() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.حداکثر_جریانColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'حداکثر جریان' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.حداکثر_جریانColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property حداکثر_ولتاژ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.حداکثر_ولتاژColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'حداکثر ولتاژ' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.حداکثر_ولتاژColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعداد_هسته() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.تعداد_هستهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعداد هسته' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.تعداد_هستهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کلاس_دقت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.کلاس_دقتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کلاس دقت' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.کلاس_دقتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نسبت_تبدیل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.نسبت_تبدیلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نسبت تبدیل' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.نسبت_تبدیلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bill() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.BillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bill' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.BillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نوع_ترانس() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Teranse.نوع_ترانسColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نوع ترانس' in table 'Rp_Teranse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Teranse.نوع_ترانسColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_Teranse.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_Teranse.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_Teranse.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمدلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.مدلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمدلNull()
            Me(Me.tableRp_Teranse.مدلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ساختNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.تاریخ_ساختColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ساختNull()
            Me(Me.tableRp_Teranse.تاریخ_ساختColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.تاریخ_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_بهره_برداریNull()
            Me(Me.tableRp_Teranse.تاریخ_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسازندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.سازندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسازندهNull()
            Me(Me.tableRp_Teranse.سازندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_سریالNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.شماره_سریالColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_سریالNull()
            Me(Me.tableRp_Teranse.شماره_سریالColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_دیسپاچینگNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.کد_دیسپاچینگColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_دیسپاچینگNull()
            Me(Me.tableRp_Teranse.کد_دیسپاچینگColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.جریان_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_نامیNull()
            Me(Me.tableRp_Teranse.جریان_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isولتاژ_نامیNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.ولتاژ_نامیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setولتاژ_نامیNull()
            Me(Me.tableRp_Teranse.ولتاژ_نامیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_اتصال_کوتاهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.جریان_اتصال_کوتاهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_اتصال_کوتاهNull()
            Me(Me.tableRp_Teranse.جریان_اتصال_کوتاهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isحداکثر_جریانNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.حداکثر_جریانColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setحداکثر_جریانNull()
            Me(Me.tableRp_Teranse.حداکثر_جریانColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isحداکثر_ولتاژNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.حداکثر_ولتاژColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setحداکثر_ولتاژNull()
            Me(Me.tableRp_Teranse.حداکثر_ولتاژColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتعداد_هستهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.تعداد_هستهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتعداد_هستهNull()
            Me(Me.tableRp_Teranse.تعداد_هستهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکلاس_دقتNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.کلاس_دقتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکلاس_دقتNull()
            Me(Me.tableRp_Teranse.کلاس_دقتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنسبت_تبدیلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.نسبت_تبدیلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنسبت_تبدیلNull()
            Me(Me.tableRp_Teranse.نسبت_تبدیلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBillNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.BillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBillNull()
            Me(Me.tableRp_Teranse.BillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنوع_ترانسNull() As Boolean
            Return Me.IsNull(Me.tableRp_Teranse.نوع_ترانسColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنوع_ترانسNull()
            Me(Me.tableRp_Teranse.نوع_ترانسColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_TajhizRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Tajhiz As Rp_TajhizDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Tajhiz = CType(Me.Table,Rp_TajhizDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مدل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.مدلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مدل' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.مدلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ساخت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.تاریخ_ساختColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ساخت' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.تاریخ_ساختColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.تاریخ_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ بهره برداری' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.تاریخ_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سازنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.سازندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سازنده' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.سازندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_سریال() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.شماره_سریالColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره سریال' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.شماره_سریالColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_دیسپاچینگ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.کد_دیسپاچینگColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد دیسپاچینگ' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.کد_دیسپاچینگColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_سفارش() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Tajhiz.کد_سفارشColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد سفارش' in table 'Rp_Tajhiz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Tajhiz.کد_سفارشColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_Tajhiz.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_Tajhiz.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمدلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.مدلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمدلNull()
            Me(Me.tableRp_Tajhiz.مدلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ساختNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.تاریخ_ساختColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ساختNull()
            Me(Me.tableRp_Tajhiz.تاریخ_ساختColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.تاریخ_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_بهره_برداریNull()
            Me(Me.tableRp_Tajhiz.تاریخ_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسازندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.سازندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسازندهNull()
            Me(Me.tableRp_Tajhiz.سازندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_سریالNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.شماره_سریالColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_سریالNull()
            Me(Me.tableRp_Tajhiz.شماره_سریالColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_دیسپاچینگNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.کد_دیسپاچینگColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_دیسپاچینگNull()
            Me(Me.tableRp_Tajhiz.کد_دیسپاچینگColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_Tajhiz.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_سفارشNull() As Boolean
            Return Me.IsNull(Me.tableRp_Tajhiz.کد_سفارشColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_سفارشNull()
            Me(Me.tableRp_Tajhiz.کد_سفارشColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_CableRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Cable As Rp_CableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Cable = CType(Me.Table,Rp_CableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مدل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.مدلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مدل' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.مدلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ساخت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.تاریخ_ساختColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ساخت' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.تاریخ_ساختColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_بهره_برداری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.تاریخ_بهره_برداریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ بهره برداری' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.تاریخ_بهره_برداریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سازنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.سازندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سازنده' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.سازندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_دیسپاچینگ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.کد_دیسپاچینگColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد دیسپاچینگ' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.کد_دیسپاچینگColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property سطح_ولتاژ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.سطح_ولتاژColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'سطح ولتاژ' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.سطح_ولتاژColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جریان_مجاز() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.جریان_مجازColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جریان مجاز' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.جریان_مجازColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مقطع_کایل() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Cable.مقطع_کایلColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مقطع کایل' in table 'Rp_Cable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Cable.مقطع_کایلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_Cable.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_Cable.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_Cable.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمدلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.مدلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمدلNull()
            Me(Me.tableRp_Cable.مدلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ساختNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.تاریخ_ساختColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ساختNull()
            Me(Me.tableRp_Cable.تاریخ_ساختColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_بهره_برداریNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.تاریخ_بهره_برداریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_بهره_برداریNull()
            Me(Me.tableRp_Cable.تاریخ_بهره_برداریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsسازندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.سازندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetسازندهNull()
            Me(Me.tableRp_Cable.سازندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_دیسپاچینگNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.کد_دیسپاچینگColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_دیسپاچینگNull()
            Me(Me.tableRp_Cable.کد_دیسپاچینگColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isسطح_ولتاژNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.سطح_ولتاژColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setسطح_ولتاژNull()
            Me(Me.tableRp_Cable.سطح_ولتاژColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجریان_مجازNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.جریان_مجازColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجریان_مجازNull()
            Me(Me.tableRp_Cable.جریان_مجازColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمقطع_کایلNull() As Boolean
            Return Me.IsNull(Me.tableRp_Cable.مقطع_کایلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمقطع_کایلNull()
            Me(Me.tableRp_Cable.مقطع_کایلColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_EibForm2Row
        Inherits Global.System.Data.DataRow
        
        Private tableRp_EibForm2 As Rp_EibForm2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_EibForm2 = CType(Me.Table,Rp_EibForm2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_EibForm2.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_EibForm2.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_نقص() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.شماره_فرم_نقصColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم نقص' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.شماره_فرم_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_اصلی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.شماره_اصلیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره اصلی' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.شماره_اصلیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.نام_واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام واحد' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.نام_واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ارجاع() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.تاریخ_ارجاعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ارجاع' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.تاریخ_ارجاعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ثبت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.تاریخ_ثبتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ثبت' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.تاریخ_ثبتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.نام_گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام گروه' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.نام_گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_نقص() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.رفع_نقصColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع نقص' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.رفع_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرم کار' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شرح_نقص() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.شرح_نقصColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شرح نقص' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.شرح_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نوع_نقص() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.نوع_نقصColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نوع نقص' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.نوع_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توضیحات() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.توضیحاتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توضیحات' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.توضیحاتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نوع_تیپ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.نوع_تیپColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نوع تیپ' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.نوع_تیپColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعداد_فرم_نقص() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_EibForm2.تعداد_فرم_نقصColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعداد فرم نقص' in table 'Rp_EibForm2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_EibForm2.تعداد_فرم_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_نقصNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.شماره_فرم_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_نقصNull()
            Me(Me.tableRp_EibForm2.شماره_فرم_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_اصلیNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.شماره_اصلیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_اصلیNull()
            Me(Me.tableRp_EibForm2.شماره_اصلیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_EibForm2.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tableRp_EibForm2.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_واحدNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.نام_واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_واحدNull()
            Me(Me.tableRp_EibForm2.نام_واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ارجاعNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.تاریخ_ارجاعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ارجاعNull()
            Me(Me.tableRp_EibForm2.تاریخ_ارجاعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ثبتNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.تاریخ_ثبتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ثبتNull()
            Me(Me.tableRp_EibForm2.تاریخ_ثبتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_گروهNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.نام_گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_گروهNull()
            Me(Me.tableRp_EibForm2.نام_گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_نقصNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.رفع_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_نقصNull()
            Me(Me.tableRp_EibForm2.رفع_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isفرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setفرم_کارNull()
            Me(Me.tableRp_EibForm2.فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشرح_نقصNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.شرح_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشرح_نقصNull()
            Me(Me.tableRp_EibForm2.شرح_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنوع_نقصNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.نوع_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنوع_نقصNull()
            Me(Me.tableRp_EibForm2.نوع_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتوضیحاتNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.توضیحاتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتوضیحاتNull()
            Me(Me.tableRp_EibForm2.توضیحاتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنوع_تیپNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.نوع_تیپColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنوع_تیپNull()
            Me(Me.tableRp_EibForm2.نوع_تیپColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتعداد_فرم_نقصNull() As Boolean
            Return Me.IsNull(Me.tableRp_EibForm2.تعداد_فرم_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتعداد_فرم_نقصNull()
            Me(Me.tableRp_EibForm2.تعداد_فرم_نقصColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Pm_PostPmRow
        Inherits Global.System.Data.DataRow
        
        Private tablePm_PostPm As Pm_PostPmDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePm_PostPm = CType(Me.Table,Pm_PostPmDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property انجام_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePm_PostPm.انجام_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'انجام شده' in table 'Pm_PostPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_PostPm.انجام_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کنسل_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePm_PostPm.کنسل_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کنسل شده' in table 'Pm_PostPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_PostPm.کنسل_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property انجام_نشده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePm_PostPm.انجام_نشدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'انجام نشده' in table 'Pm_PostPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_PostPm.انجام_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePm_PostPm.کلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کل' in table 'Pm_PostPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_PostPm.کلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_تجهیز() As String
            Get
                Try 
                    Return CType(Me(Me.tablePm_PostPm.نام_تجهیزColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام تجهیز' in table 'Pm_PostPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_PostPm.نام_تجهیزColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isانجام_شدهNull() As Boolean
            Return Me.IsNull(Me.tablePm_PostPm.انجام_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setانجام_شدهNull()
            Me(Me.tablePm_PostPm.انجام_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکنسل_شدهNull() As Boolean
            Return Me.IsNull(Me.tablePm_PostPm.کنسل_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکنسل_شدهNull()
            Me(Me.tablePm_PostPm.کنسل_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isانجام_نشدهNull() As Boolean
            Return Me.IsNull(Me.tablePm_PostPm.انجام_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setانجام_نشدهNull()
            Me(Me.tablePm_PostPm.انجام_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلNull() As Boolean
            Return Me.IsNull(Me.tablePm_PostPm.کلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلNull()
            Me(Me.tablePm_PostPm.کلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_تجهیزNull() As Boolean
            Return Me.IsNull(Me.tablePm_PostPm.نام_تجهیزColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_تجهیزNull()
            Me(Me.tablePm_PostPm.نام_تجهیزColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_TajhizPmRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_TajhizPm As Rp_TajhizPmDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_TajhizPm = CType(Me.Table,Rp_TajhizPmDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property انجام_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_TajhizPm.انجام_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'انجام شده' in table 'Rp_TajhizPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TajhizPm.انجام_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کنسل_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_TajhizPm.کنسل_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کنسل شده' in table 'Rp_TajhizPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TajhizPm.کنسل_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property انجام_نشده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_TajhizPm.انجام_نشدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'انجام نشده' in table 'Rp_TajhizPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TajhizPm.انجام_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_TajhizPm.کلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کل' in table 'Rp_TajhizPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TajhizPm.کلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_تجهیز() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_TajhizPm.نام_تجهیزColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام تجهیز' in table 'Rp_TajhizPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_TajhizPm.نام_تجهیزColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isانجام_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_TajhizPm.انجام_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setانجام_شدهNull()
            Me(Me.tableRp_TajhizPm.انجام_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکنسل_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_TajhizPm.کنسل_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکنسل_شدهNull()
            Me(Me.tableRp_TajhizPm.کنسل_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isانجام_نشدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_TajhizPm.انجام_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setانجام_نشدهNull()
            Me(Me.tableRp_TajhizPm.انجام_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلNull() As Boolean
            Return Me.IsNull(Me.tableRp_TajhizPm.کلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلNull()
            Me(Me.tableRp_TajhizPm.کلColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_تجهیزNull() As Boolean
            Return Me.IsNull(Me.tableRp_TajhizPm.نام_تجهیزColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_تجهیزNull()
            Me(Me.tableRp_TajhizPm.نام_تجهیزColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_PmCancleRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_PmCancle As Rp_PmCancleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_PmCancle = CType(Me.Table,Rp_PmCancleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تجهیز() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_PmCancle.تجهیزColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تجهیز' in table 'Rp_PmCancle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PmCancle.تجهیزColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_PmCancle.پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'پست' in table 'Rp_PmCancle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PmCancle.پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property دلیل_کنسلی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_PmCancle.دلیل_کنسلیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'دلیل کنسلی' in table 'Rp_PmCancle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PmCancle.دلیل_کنسلیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_pm() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_PmCancle.تاریخ_pmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ pm' in table 'Rp_PmCancle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PmCancle.تاریخ_pmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_انجام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_PmCancle.تاریخ_انجامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ انجام' in table 'Rp_PmCancle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PmCancle.تاریخ_انجامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توضیحات() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_PmCancle.توضیحاتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توضیحات' in table 'Rp_PmCancle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_PmCancle.توضیحاتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتجهیزNull() As Boolean
            Return Me.IsNull(Me.tableRp_PmCancle.تجهیزColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتجهیزNull()
            Me(Me.tableRp_PmCancle.تجهیزColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsپستNull() As Boolean
            Return Me.IsNull(Me.tableRp_PmCancle.پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetپستNull()
            Me(Me.tableRp_PmCancle.پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isدلیل_کنسلیNull() As Boolean
            Return Me.IsNull(Me.tableRp_PmCancle.دلیل_کنسلیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setدلیل_کنسلیNull()
            Me(Me.tableRp_PmCancle.دلیل_کنسلیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_pmNull() As Boolean
            Return Me.IsNull(Me.tableRp_PmCancle.تاریخ_pmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_pmNull()
            Me(Me.tableRp_PmCancle.تاریخ_pmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_انجامNull() As Boolean
            Return Me.IsNull(Me.tableRp_PmCancle.تاریخ_انجامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_انجامNull()
            Me(Me.tableRp_PmCancle.تاریخ_انجامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتوضیحاتNull() As Boolean
            Return Me.IsNull(Me.tableRp_PmCancle.توضیحاتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتوضیحاتNull()
            Me(Me.tableRp_PmCancle.توضیحاتColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Pm_SmsRow
        Inherits Global.System.Data.DataRow
        
        Private tablePm_Sms As Pm_SmsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePm_Sms = CType(Me.Table,Pm_SmsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property متن() As String
            Get
                Try 
                    Return CType(Me(Me.tablePm_Sms.متنColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'متن' in table 'Pm_Sms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_Sms.متنColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property دریافت_کننده() As String
            Get
                Try 
                    Return CType(Me(Me.tablePm_Sms.دریافت_کنندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'دریافت کننده' in table 'Pm_Sms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_Sms.دریافت_کنندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کاربر_ارسال_کننده() As String
            Get
                Try 
                    Return CType(Me(Me.tablePm_Sms.کاربر_ارسال_کنندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کاربر ارسال کننده' in table 'Pm_Sms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_Sms.کاربر_ارسال_کنندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاربخ() As String
            Get
                Try 
                    Return CType(Me(Me.tablePm_Sms.تاربخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاربخ' in table 'Pm_Sms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_Sms.تاربخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت() As String
            Get
                Try 
                    Return CType(Me(Me.tablePm_Sms.ساعتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت' in table 'Pm_Sms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_Sms.ساعتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرم_نقص() As String
            Get
                Try 
                    Return CType(Me(Me.tablePm_Sms.فرم_نقصColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرم نقص' in table 'Pm_Sms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePm_Sms.فرم_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمتنNull() As Boolean
            Return Me.IsNull(Me.tablePm_Sms.متنColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمتنNull()
            Me(Me.tablePm_Sms.متنColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isدریافت_کنندهNull() As Boolean
            Return Me.IsNull(Me.tablePm_Sms.دریافت_کنندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setدریافت_کنندهNull()
            Me(Me.tablePm_Sms.دریافت_کنندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکاربر_ارسال_کنندهNull() As Boolean
            Return Me.IsNull(Me.tablePm_Sms.کاربر_ارسال_کنندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکاربر_ارسال_کنندهNull()
            Me(Me.tablePm_Sms.کاربر_ارسال_کنندهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاربخNull() As Boolean
            Return Me.IsNull(Me.tablePm_Sms.تاربخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاربخNull()
            Me(Me.tablePm_Sms.تاربخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsساعتNull() As Boolean
            Return Me.IsNull(Me.tablePm_Sms.ساعتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetساعتNull()
            Me(Me.tablePm_Sms.ساعتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isفرم_نقصNull() As Boolean
            Return Me.IsNull(Me.tablePm_Sms.فرم_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setفرم_نقصNull()
            Me(Me.tablePm_Sms.فرم_نقصColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class rp_eibformRow
        Inherits Global.System.Data.DataRow
        
        Private tablerp_eibform As rp_eibformDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablerp_eibform = CType(Me.Table,rp_eibformDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tablerp_eibform.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tablerp_eibform.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_نقص() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.شماره_فرم_نقصColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم نقص' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.شماره_فرم_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_اصلی() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.شماره_اصلیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره اصلی' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.شماره_اصلیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_پست() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.نام_پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام پست' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.نام_پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.نام_واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام واحد' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.نام_واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ارجاع() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.تاریخ_ارجاعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ارجاع' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.تاریخ_ارجاعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_ثبت() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.تاریخ_ثبتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ ثبت' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.تاریخ_ثبتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_گروه() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.نام_گروهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام گروه' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.نام_گروهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property رفع_نقص() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.رفع_نقصColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'رفع نقص' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.رفع_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرم کار' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شرح_نقص() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.شرح_نقصColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شرح نقص' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.شرح_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نوع_نقص() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.نوع_نقصColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نوع نقص' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.نوع_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property توضیحات() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.توضیحاتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'توضیحات' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.توضیحاتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نوع_تیپ() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.نوع_تیپColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نوع تیپ' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.نوع_تیپColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعداد_فرم_نقص() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.تعداد_فرم_نقصColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعداد فرم نقص' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.تعداد_فرم_نقصColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'name' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.redColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'red' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.redColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blue() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.blueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'blue' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.blueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property green() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.greenColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'green' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.greenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property expireday() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.expiredayColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'expireday' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.expiredayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsUnDecided() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerp_eibform.IsUnDecidedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsUnDecided' in table 'rp_eibform' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerp_eibform.IsUnDecidedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_نقصNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.شماره_فرم_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_نقصNull()
            Me(Me.tablerp_eibform.شماره_فرم_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_اصلیNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.شماره_اصلیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_اصلیNull()
            Me(Me.tablerp_eibform.شماره_اصلیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tablerp_eibform.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_پستNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.نام_پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_پستNull()
            Me(Me.tablerp_eibform.نام_پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_واحدNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.نام_واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_واحدNull()
            Me(Me.tablerp_eibform.نام_واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ارجاعNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.تاریخ_ارجاعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ارجاعNull()
            Me(Me.tablerp_eibform.تاریخ_ارجاعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_ثبتNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.تاریخ_ثبتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_ثبتNull()
            Me(Me.tablerp_eibform.تاریخ_ثبتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_گروهNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.نام_گروهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_گروهNull()
            Me(Me.tablerp_eibform.نام_گروهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isرفع_نقصNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.رفع_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setرفع_نقصNull()
            Me(Me.tablerp_eibform.رفع_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isفرم_کارNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setفرم_کارNull()
            Me(Me.tablerp_eibform.فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشرح_نقصNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.شرح_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشرح_نقصNull()
            Me(Me.tablerp_eibform.شرح_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنوع_نقصNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.نوع_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنوع_نقصNull()
            Me(Me.tablerp_eibform.نوع_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتوضیحاتNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.توضیحاتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتوضیحاتNull()
            Me(Me.tablerp_eibform.توضیحاتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنوع_تیپNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.نوع_تیپColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنوع_تیپNull()
            Me(Me.tablerp_eibform.نوع_تیپColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتعداد_فرم_نقصNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.تعداد_فرم_نقصColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتعداد_فرم_نقصNull()
            Me(Me.tablerp_eibform.تعداد_فرم_نقصColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnameNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnameNull()
            Me(Me.tablerp_eibform.nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsredNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.redColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetredNull()
            Me(Me.tablerp_eibform.redColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblueNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.blueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblueNull()
            Me(Me.tablerp_eibform.blueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgreenNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.greenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgreenNull()
            Me(Me.tablerp_eibform.greenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsexpiredayNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.expiredayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetexpiredayNull()
            Me(Me.tablerp_eibform.expiredayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIsUnDecidedNull() As Boolean
            Return Me.IsNull(Me.tablerp_eibform.IsUnDecidedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIsUnDecidedNull()
            Me(Me.tablerp_eibform.IsUnDecidedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_MonthPmRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_MonthPm As Rp_MonthPmDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_MonthPm = CType(Me.Table,Rp_MonthPmDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MonthPm.MColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M' in table 'Rp_MonthPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MonthPm.MColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ماه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_MonthPm.ماهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ماه' in table 'Rp_MonthPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MonthPm.ماهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کنسل_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_MonthPm.کنسل_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کنسل شده' in table 'Rp_MonthPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MonthPm.کنسل_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property انجام_شده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_MonthPm.انجام_شدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'انجام شده' in table 'Rp_MonthPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MonthPm.انجام_شدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property انجام_نشده() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_MonthPm.انجام_نشدهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'انجام نشده' in table 'Rp_MonthPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MonthPm.انجام_نشدهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_MonthPm.کلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کل' in table 'Rp_MonthPm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_MonthPm.کلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMNull() As Boolean
            Return Me.IsNull(Me.tableRp_MonthPm.MColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMNull()
            Me(Me.tableRp_MonthPm.MColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsماهNull() As Boolean
            Return Me.IsNull(Me.tableRp_MonthPm.ماهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetماهNull()
            Me(Me.tableRp_MonthPm.ماهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکنسل_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_MonthPm.کنسل_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکنسل_شدهNull()
            Me(Me.tableRp_MonthPm.کنسل_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isانجام_شدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_MonthPm.انجام_شدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setانجام_شدهNull()
            Me(Me.tableRp_MonthPm.انجام_شدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isانجام_نشدهNull() As Boolean
            Return Me.IsNull(Me.tableRp_MonthPm.انجام_نشدهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setانجام_نشدهNull()
            Me(Me.tableRp_MonthPm.انجام_نشدهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsکلNull() As Boolean
            Return Me.IsNull(Me.tableRp_MonthPm.کلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetکلNull()
            Me(Me.tableRp_MonthPm.کلColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_WorkForm_KargoziniRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_WorkForm_Kargozini As Rp_WorkForm_KargoziniDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_WorkForm_Kargozini = CType(Me.Table,Rp_WorkForm_KargoziniDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property پرسنلی_کد() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm_Kargozini.پرسنلی_کدColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'پرسنلی کد' in table 'Rp_WorkForm_Kargozini' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm_Kargozini.پرسنلی_کدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_و_نام_خانوادگی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm_Kargozini.نام_و_نام_خانوادگیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام و نام خانوادگی' in table 'Rp_WorkForm_Kargozini' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm_Kargozini.نام_و_نام_خانوادگیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm_Kargozini.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_WorkForm_Kargozini' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm_Kargozini.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مبدا_حرکت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm_Kargozini.مبدا_حرکتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مبدا حرکت' in table 'Rp_WorkForm_Kargozini' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm_Kargozini.مبدا_حرکتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm_Kargozini.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'Rp_WorkForm_Kargozini' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm_Kargozini.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت_شروع() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm_Kargozini.ساعت_شروعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت شروع' in table 'Rp_WorkForm_Kargozini' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm_Kargozini.ساعت_شروعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت_پایان() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm_Kargozini.ساعت_پایانColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت پایان' in table 'Rp_WorkForm_Kargozini' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm_Kargozini.ساعت_پایانColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مسافت() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_WorkForm_Kargozini.مسافتColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مسافت' in table 'Rp_WorkForm_Kargozini' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_WorkForm_Kargozini.مسافتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isپرسنلی_کدNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm_Kargozini.پرسنلی_کدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setپرسنلی_کدNull()
            Me(Me.tableRp_WorkForm_Kargozini.پرسنلی_کدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_و_نام_خانوادگیNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm_Kargozini.نام_و_نام_خانوادگیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_و_نام_خانوادگیNull()
            Me(Me.tableRp_WorkForm_Kargozini.نام_و_نام_خانوادگیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm_Kargozini.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_WorkForm_Kargozini.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمبدا_حرکتNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm_Kargozini.مبدا_حرکتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمبدا_حرکتNull()
            Me(Me.tableRp_WorkForm_Kargozini.مبدا_حرکتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm_Kargozini.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableRp_WorkForm_Kargozini.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isساعت_شروعNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm_Kargozini.ساعت_شروعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setساعت_شروعNull()
            Me(Me.tableRp_WorkForm_Kargozini.ساعت_شروعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isساعت_پایانNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm_Kargozini.ساعت_پایانColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setساعت_پایانNull()
            Me(Me.tableRp_WorkForm_Kargozini.ساعت_پایانColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsمسافتNull() As Boolean
            Return Me.IsNull(Me.tableRp_WorkForm_Kargozini.مسافتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetمسافتNull()
            Me(Me.tableRp_WorkForm_Kargozini.مسافتColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TimeCard_WorkFormRow
        Inherits Global.System.Data.DataRow
        
        Private tableTimeCard_WorkForm As TimeCard_WorkFormDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTimeCard_WorkForm = CType(Me.Table,TimeCard_WorkFormDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTimeCard_WorkForm.شمارهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'TimeCard_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTimeCard_WorkForm.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableTimeCard_WorkForm.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'TimeCard_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTimeCard_WorkForm.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableTimeCard_WorkForm.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'TimeCard_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTimeCard_WorkForm.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت_شروع() As String
            Get
                Try 
                    Return CType(Me(Me.tableTimeCard_WorkForm.ساعت_شروعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت شروع' in table 'TimeCard_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTimeCard_WorkForm.ساعت_شروعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ساعت_پایان() As String
            Get
                Try 
                    Return CType(Me(Me.tableTimeCard_WorkForm.ساعت_پایانColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ساعت پایان' in table 'TimeCard_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTimeCard_WorkForm.ساعت_پایانColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مجموع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableTimeCard_WorkForm.مجموع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مجموع اضافه کار' in table 'TimeCard_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTimeCard_WorkForm.مجموع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فاصله() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTimeCard_WorkForm.فاصلهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فاصله' in table 'TimeCard_WorkForm' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTimeCard_WorkForm.فاصلهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableTimeCard_WorkForm.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableTimeCard_WorkForm.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableTimeCard_WorkForm.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableTimeCard_WorkForm.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableTimeCard_WorkForm.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableTimeCard_WorkForm.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isساعت_شروعNull() As Boolean
            Return Me.IsNull(Me.tableTimeCard_WorkForm.ساعت_شروعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setساعت_شروعNull()
            Me(Me.tableTimeCard_WorkForm.ساعت_شروعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isساعت_پایانNull() As Boolean
            Return Me.IsNull(Me.tableTimeCard_WorkForm.ساعت_پایانColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setساعت_پایانNull()
            Me(Me.tableTimeCard_WorkForm.ساعت_پایانColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمجموع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableTimeCard_WorkForm.مجموع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمجموع_اضافه_کارNull()
            Me(Me.tableTimeCard_WorkForm.مجموع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsفاصلهNull() As Boolean
            Return Me.IsNull(Me.tableTimeCard_WorkForm.فاصلهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetفاصلهNull()
            Me(Me.tableTimeCard_WorkForm.فاصلهColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_HazineCodeEzafeKarRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_HazineCodeEzafeKar As Rp_HazineCodeEzafeKarDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_HazineCodeEzafeKar = CType(Me.Table,Rp_HazineCodeEzafeKarDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_HazineCodeEzafeKar.srlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'srl' in table 'Rp_HazineCodeEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_HazineCodeEzafeKar.srlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعداد_روز() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_HazineCodeEzafeKar.تعداد_روزColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعداد روز' in table 'Rp_HazineCodeEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_HazineCodeEzafeKar.تعداد_روزColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_HazineCodeEzafeKar.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_HazineCodeEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_HazineCodeEzafeKar.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property مجموع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_HazineCodeEzafeKar.مجموع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'مجموع اضافه کار' in table 'Rp_HazineCodeEzafeKar' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_HazineCodeEzafeKar.مجموع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_HazineCodeEzafeKar._SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_HazineCodeEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_HazineCodeEzafeKar._SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_HazineCodeEzafeKar.nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'name' in table 'Rp_HazineCodeEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_HazineCodeEzafeKar.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonalCode() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_HazineCodeEzafeKar.PersonalCodeColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonalCode' in table 'Rp_HazineCodeEzafeKar' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_HazineCodeEzafeKar.PersonalCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_HazineCodeEzafeKar.srlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsrlNull()
            Me(Me.tableRp_HazineCodeEzafeKar.srlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتعداد_روزNull() As Boolean
            Return Me.IsNull(Me.tableRp_HazineCodeEzafeKar.تعداد_روزColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتعداد_روزNull()
            Me(Me.tableRp_HazineCodeEzafeKar.تعداد_روزColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_HazineCodeEzafeKar.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_HazineCodeEzafeKar.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمجموع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_HazineCodeEzafeKar.مجموع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمجموع_اضافه_کارNull()
            Me(Me.tableRp_HazineCodeEzafeKar.مجموع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_SrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_HazineCodeEzafeKar._SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_SrlNull()
            Me(Me.tableRp_HazineCodeEzafeKar._SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnameNull() As Boolean
            Return Me.IsNull(Me.tableRp_HazineCodeEzafeKar.nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnameNull()
            Me(Me.tableRp_HazineCodeEzafeKar.nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonalCodeNull() As Boolean
            Return Me.IsNull(Me.tableRp_HazineCodeEzafeKar.PersonalCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonalCodeNull()
            Me(Me.tableRp_HazineCodeEzafeKar.PersonalCodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_SummaryExtraWorkFanavaranRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_SummaryExtraWorkFanavaran As Rp_SummaryExtraWorkFanavaranDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_SummaryExtraWorkFanavaran = CType(Me.Table,Rp_SummaryExtraWorkFanavaranDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_شناسایی() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.کد_شناساییColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد شناسایی' in table 'Rp_SummaryExtraWorkFanavaran' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.کد_شناساییColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_SummaryExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_Company() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.Srl_Pm_CompanyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_Company' in table 'Rp_SummaryExtraWorkFanavaran' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.Srl_Pm_CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.جمع_اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع اضافه کار تردد' in table 'Rp_SummaryExtraWorkFanavaran'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.جمع_اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_ستاد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.اضافه_کار_ستادColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار ستاد' in table 'Rp_SummaryExtraWorkFanavaran' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.اضافه_کار_ستادColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.اضافه_کار_فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار فرم کار' in table 'Rp_SummaryExtraWorkFanavaran' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.اضافه_کار_فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_مازاد_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.جمع_مازاد_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع مازاد اضافه کار' in table 'Rp_SummaryExtraWorkFanavaran"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.جمع_مازاد_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Ashkhas() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.Srl_AshkhasColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Ashkhas' in table 'Rp_SummaryExtraWorkFanavaran' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.Srl_AshkhasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_SummaryExtraWorkFanavaran.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_SummaryExtraWorkFanavaran.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_شناساییNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWorkFanavaran.کد_شناساییColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_شناساییNull()
            Me(Me.tableRp_SummaryExtraWorkFanavaran.کد_شناساییColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWorkFanavaran.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_SummaryExtraWorkFanavaran.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_CompanyNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWorkFanavaran.Srl_Pm_CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_CompanyNull()
            Me(Me.tableRp_SummaryExtraWorkFanavaran.Srl_Pm_CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_اضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWorkFanavaran.جمع_اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_اضافه_کار_ترددNull()
            Me(Me.tableRp_SummaryExtraWorkFanavaran.جمع_اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ستادNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWorkFanavaran.اضافه_کار_ستادColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ستادNull()
            Me(Me.tableRp_SummaryExtraWorkFanavaran.اضافه_کار_ستادColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_فرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWorkFanavaran.اضافه_کار_فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_فرم_کارNull()
            Me(Me.tableRp_SummaryExtraWorkFanavaran.اضافه_کار_فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_مازاد_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWorkFanavaran.جمع_مازاد_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_مازاد_اضافه_کارNull()
            Me(Me.tableRp_SummaryExtraWorkFanavaran.جمع_مازاد_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_AshkhasNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryExtraWorkFanavaran.Srl_AshkhasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_AshkhasNull()
            Me(Me.tableRp_SummaryExtraWorkFanavaran.Srl_AshkhasColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_ExtraWorkAzarakhshRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_ExtraWorkAzarakhsh As Rp_ExtraWorkAzarakhshDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_ExtraWorkAzarakhsh = CType(Me.Table,Rp_ExtraWorkAzarakhshDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_Company() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.Srl_Pm_CompanyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_Company' in table 'Rp_ExtraWorkAzarakhsh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.Srl_Pm_CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_فرد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.نام_فردColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام فرد' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.نام_فردColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_شناسایی() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.کد_شناساییColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد شناسایی' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.کد_شناساییColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرم کار' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.شمارهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار تردد' in table 'Rp_ExtraWorkAzarakhsh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کسر_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.کسر_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کسر کار' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.کسر_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.جمع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع اضافه کار' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.جمع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ماموریت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.ماموریتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ماموریت' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.ماموریتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعطیل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkAzarakhsh.تعطیلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعطیل' in table 'Rp_ExtraWorkAzarakhsh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkAzarakhsh.تعطیلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_CompanyNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.Srl_Pm_CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_CompanyNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.Srl_Pm_CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_فردNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.نام_فردColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_فردNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.نام_فردColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_شناساییNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.کد_شناساییColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_شناساییNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.کد_شناساییColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isفرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setفرم_کارNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کارNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ترددNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکسر_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.کسر_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکسر_کارNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.کسر_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.جمع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_اضافه_کارNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.جمع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsماموریتNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.ماموریتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetماموریتNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.ماموریتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتعطیلNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkAzarakhsh.تعطیلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتعطیلNull()
            Me(Me.tableRp_ExtraWorkAzarakhsh.تعطیلColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_ExtraWorkFanavaranRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_ExtraWorkFanavaran As Rp_ExtraWorkFanavaranDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_ExtraWorkFanavaran = CType(Me.Table,Rp_ExtraWorkFanavaranDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.SrlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_Company() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.Srl_Pm_CompanyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_Company' in table 'Rp_ExtraWorkFanavaran' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.Srl_Pm_CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام_فرد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.نام_فردColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام فرد' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.نام_فردColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_شناسایی() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.کد_شناساییColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد شناسایی' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.کد_شناساییColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرم_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.فرم_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرم کار' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.فرم_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.شمارهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_هزینه() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.کد_هزینهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد هزینه' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.کد_هزینهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property محل_فعالیت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.محل_فعالیتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'محل فعالیت' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.محل_فعالیتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_تردد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.اضافه_کار_ترددColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار تردد' in table 'Rp_ExtraWorkFanavaran' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.اضافه_کار_ترددColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کسر_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.کسر_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کسر کار' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.کسر_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property جمع_اضافه_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.جمع_اضافه_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'جمع اضافه کار' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.جمع_اضافه_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ماموریت() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.ماموریتColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ماموریت' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.ماموریتColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تعطیل() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_ExtraWorkFanavaran.تعطیلColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تعطیل' in table 'Rp_ExtraWorkFanavaran' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ExtraWorkFanavaran.تعطیلColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_ExtraWorkFanavaran.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrlNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.SrlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrlNull()
            Me(Me.tableRp_ExtraWorkFanavaran.SrlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_CompanyNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.Srl_Pm_CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_CompanyNull()
            Me(Me.tableRp_ExtraWorkFanavaran.Srl_Pm_CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنام_فردNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.نام_فردColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنام_فردNull()
            Me(Me.tableRp_ExtraWorkFanavaran.نام_فردColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_شناساییNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.کد_شناساییColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_شناساییNull()
            Me(Me.tableRp_ExtraWorkFanavaran.کد_شناساییColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isفرم_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.فرم_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setفرم_کارNull()
            Me(Me.tableRp_ExtraWorkFanavaran.فرم_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_ExtraWorkFanavaran.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_هزینهNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.کد_هزینهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_هزینهNull()
            Me(Me.tableRp_ExtraWorkFanavaran.کد_هزینهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isمحل_فعالیتNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.محل_فعالیتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setمحل_فعالیتNull()
            Me(Me.tableRp_ExtraWorkFanavaran.محل_فعالیتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کارNull()
            Me(Me.tableRp_ExtraWorkFanavaran.اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ترددNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.اضافه_کار_ترددColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ترددNull()
            Me(Me.tableRp_ExtraWorkFanavaran.اضافه_کار_ترددColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکسر_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.کسر_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکسر_کارNull()
            Me(Me.tableRp_ExtraWorkFanavaran.کسر_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isجمع_اضافه_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.جمع_اضافه_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setجمع_اضافه_کارNull()
            Me(Me.tableRp_ExtraWorkFanavaran.جمع_اضافه_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsماموریتNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.ماموریتColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetماموریتNull()
            Me(Me.tableRp_ExtraWorkFanavaran.ماموریتColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتعطیلNull() As Boolean
            Return Me.IsNull(Me.tableRp_ExtraWorkFanavaran.تعطیلColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتعطیلNull()
            Me(Me.tableRp_ExtraWorkFanavaran.تعطیلColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_SummaryStatusstatementExtraWorkRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_SummaryStatusstatementExtraWork As Rp_SummaryStatusstatementExtraWorkDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_SummaryStatusstatementExtraWork = CType(Me.Table,Rp_SummaryStatusstatementExtraWorkDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property کد_شناسایی() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryStatusstatementExtraWork.کد_شناساییColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'کد شناسایی' in table 'Rp_SummaryStatusstatementExtraWork' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryStatusstatementExtraWork.کد_شناساییColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryStatusstatementExtraWork.نامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نام' in table 'Rp_SummaryStatusstatementExtraWork' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryStatusstatementExtraWork.نامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property نوع_کاری() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryStatusstatementExtraWork.نوع_کاریColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'نوع کاری' in table 'Rp_SummaryStatusstatementExtraWork' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryStatusstatementExtraWork.نوع_کاریColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Pm_Company() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryStatusstatementExtraWork.Srl_Pm_CompanyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Pm_Company' in table 'Rp_SummaryStatusstatementExtraWor"& _ 
                            "k' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryStatusstatementExtraWork.Srl_Pm_CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_ستاد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryStatusstatementExtraWork.اضافه_کار_ستادColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار ستاد' in table 'Rp_SummaryStatusstatementExtraWor"& _ 
                            "k' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryStatusstatementExtraWork.اضافه_کار_ستادColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property اضافه_کار_کارمزدی() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryStatusstatementExtraWork.اضافه_کار_کارمزدیColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'اضافه کار کارمزدی' in table 'Rp_SummaryStatusstatementExtra"& _ 
                            "Work' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryStatusstatementExtraWork.اضافه_کار_کارمزدیColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl_Ashkhas() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_SummaryStatusstatementExtraWork.Srl_AshkhasColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Srl_Ashkhas' in table 'Rp_SummaryStatusstatementExtraWork' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_SummaryStatusstatementExtraWork.Srl_AshkhasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Srl() As Integer
            Get
                Return CType(Me(Me.tableRp_SummaryStatusstatementExtraWork.SrlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_SummaryStatusstatementExtraWork.SrlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isکد_شناساییNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryStatusstatementExtraWork.کد_شناساییColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setکد_شناساییNull()
            Me(Me.tableRp_SummaryStatusstatementExtraWork.کد_شناساییColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsنامNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryStatusstatementExtraWork.نامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetنامNull()
            Me(Me.tableRp_SummaryStatusstatementExtraWork.نامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isنوع_کاریNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryStatusstatementExtraWork.نوع_کاریColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setنوع_کاریNull()
            Me(Me.tableRp_SummaryStatusstatementExtraWork.نوع_کاریColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_Pm_CompanyNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryStatusstatementExtraWork.Srl_Pm_CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_Pm_CompanyNull()
            Me(Me.tableRp_SummaryStatusstatementExtraWork.Srl_Pm_CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_ستادNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryStatusstatementExtraWork.اضافه_کار_ستادColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_ستادNull()
            Me(Me.tableRp_SummaryStatusstatementExtraWork.اضافه_کار_ستادColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isاضافه_کار_کارمزدیNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryStatusstatementExtraWork.اضافه_کار_کارمزدیColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setاضافه_کار_کارمزدیNull()
            Me(Me.tableRp_SummaryStatusstatementExtraWork.اضافه_کار_کارمزدیColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrl_AshkhasNull() As Boolean
            Return Me.IsNull(Me.tableRp_SummaryStatusstatementExtraWork.Srl_AshkhasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrl_AshkhasNull()
            Me(Me.tableRp_SummaryStatusstatementExtraWork.Srl_AshkhasColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_ConfirmedMultiEzafeKarStatusStatementRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_ConfirmedMultiEzafeKarStatusStatement As Rp_ConfirmedMultiEzafeKarStatusStatementDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_ConfirmedMultiEzafeKarStatusStatement = CType(Me.Table,Rp_ConfirmedMultiEzafeKarStatusStatementDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property srl() As Integer
            Get
                Return CType(Me(Me.tableRp_ConfirmedMultiEzafeKarStatusStatement.srlColumn),Integer)
            End Get
            Set
                Me(Me.tableRp_ConfirmedMultiEzafeKarStatusStatement.srlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ezafekar() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_ConfirmedMultiEzafeKarStatusStatement.EzafekarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ezafekar' in table 'Rp_ConfirmedMultiEzafeKarStatusStatemen"& _ 
                            "t' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_ConfirmedMultiEzafeKarStatusStatement.EzafekarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEzafekarNull() As Boolean
            Return Me.IsNull(Me.tableRp_ConfirmedMultiEzafeKarStatusStatement.EzafekarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEzafekarNull()
            Me(Me.tableRp_ConfirmedMultiEzafeKarStatusStatement.EzafekarColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rp_PishnahadRow
        Inherits Global.System.Data.DataRow
        
        Private tableRp_Pishnahad As Rp_PishnahadDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRp_Pishnahad = CType(Me.Table,Rp_PishnahadDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property پیشنهاد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.پیشنهادColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'پیشنهاد' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.پیشنهادColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.تاریخColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.تاریخColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.شمارهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.شمارهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.شماره_فرمColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.شماره_فرمColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شماره_فرم_انجام_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.شماره_فرم_انجام_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شماره فرم انجام کار' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.شماره_فرم_انجام_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تاریخ_انجام() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.تاریخ_انجامColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تاریخ انجام' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.تاریخ_انجامColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property شرح_انجام_کار() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.شرح_انجام_کارColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'شرح انجام کار' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.شرح_انجام_کارColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property is_Do() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.is_DoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'is_Do' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.is_DoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property بازه() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.بازهColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'بازه' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.بازهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property is_NotDo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.is_NotDoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'is_NotDo' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.is_NotDoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property تجهیز() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.تجهیزColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'تجهیز' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.تجهیزColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property خط() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.خطColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'خط' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.خطColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property پست() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.پستColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'پست' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.پستColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property واحد() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.واحدColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'واحد' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.واحدColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property زیر_موضوع() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.زیر_موضوعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'زیر موضوع' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.زیر_موضوعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property موضوع() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.موضوعColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'موضوع' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.موضوعColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.StatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property expireday() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.expiredayColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'expireday' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.expiredayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property فرستنده() As String
            Get
                Try 
                    Return CType(Me(Me.tableRp_Pishnahad.فرستندهColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'فرستنده' in table 'Rp_Pishnahad' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRp_Pishnahad.فرستندهColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsپیشنهادNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.پیشنهادColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetپیشنهادNull()
            Me(Me.tableRp_Pishnahad.پیشنهادColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتاریخNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.تاریخColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتاریخNull()
            Me(Me.tableRp_Pishnahad.تاریخColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsشمارهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.شمارهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetشمارهNull()
            Me(Me.tableRp_Pishnahad.شمارهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرمNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.شماره_فرمColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرمNull()
            Me(Me.tableRp_Pishnahad.شماره_فرمColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشماره_فرم_انجام_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.شماره_فرم_انجام_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشماره_فرم_انجام_کارNull()
            Me(Me.tableRp_Pishnahad.شماره_فرم_انجام_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isتاریخ_انجامNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.تاریخ_انجامColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setتاریخ_انجامNull()
            Me(Me.tableRp_Pishnahad.تاریخ_انجامColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isشرح_انجام_کارNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.شرح_انجام_کارColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setشرح_انجام_کارNull()
            Me(Me.tableRp_Pishnahad.شرح_انجام_کارColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isis_DoNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.is_DoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setis_DoNull()
            Me(Me.tableRp_Pishnahad.is_DoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsبازهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.بازهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetبازهNull()
            Me(Me.tableRp_Pishnahad.بازهColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isis_NotDoNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.is_NotDoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setis_NotDoNull()
            Me(Me.tableRp_Pishnahad.is_NotDoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsتجهیزNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.تجهیزColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetتجهیزNull()
            Me(Me.tableRp_Pishnahad.تجهیزColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsخطNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.خطColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetخطNull()
            Me(Me.tableRp_Pishnahad.خطColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsپستNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.پستColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetپستNull()
            Me(Me.tableRp_Pishnahad.پستColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsواحدNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.واحدColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetواحدNull()
            Me(Me.tableRp_Pishnahad.واحدColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isزیر_موضوعNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.زیر_موضوعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setزیر_موضوعNull()
            Me(Me.tableRp_Pishnahad.زیر_موضوعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsموضوعNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.موضوعColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetموضوعNull()
            Me(Me.tableRp_Pishnahad.موضوعColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tableRp_Pishnahad.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsexpiredayNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.expiredayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetexpiredayNull()
            Me(Me.tableRp_Pishnahad.expiredayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsفرستندهNull() As Boolean
            Return Me.IsNull(Me.tableRp_Pishnahad.فرستندهColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetفرستندهNull()
            Me(Me.tableRp_Pishnahad.فرستندهColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_SummaryExtraWorkRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_SummaryExtraWorkRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_SummaryExtraWorkRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_SummaryExtraWorkRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_Pm_KalaUseRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_Pm_KalaUseRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_Pm_KalaUseRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_Pm_KalaUseRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_MojodiAnbarRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_MojodiAnbarRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_MojodiAnbarRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_MojodiAnbarRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_GroupEibFormRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_GroupEibFormRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_GroupEibFormRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_GroupEibFormRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_NafarSatGroupRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_NafarSatGroupRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_NafarSatGroupRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_NafarSatGroupRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_WorkFormMaster1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_WorkFormMaster1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_WorkFormMaster1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_WorkFormMaster1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_WorkFormRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_WorkFormRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_WorkFormRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_WorkFormRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_VahedEibFormRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_VahedEibFormRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_VahedEibFormRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_VahedEibFormRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_EibTypeEibFormRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_EibTypeEibFormRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_EibTypeEibFormRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_EibTypeEibFormRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_PostEibformRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_PostEibformRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_PostEibformRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_PostEibformRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_CompareGroupEibFormRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_CompareGroupEibFormRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_CompareGroupEibFormRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_CompareGroupEibFormRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_WorkFormWorkDisRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_WorkFormWorkDisRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_WorkFormWorkDisRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_WorkFormWorkDisRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_NafarSatProjectRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_NafarSatProjectRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_NafarSatProjectRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_NafarSatProjectRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_KholaseWorkFormTmpRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_KholaseWorkFormTmpRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_KholaseWorkFormTmpRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_KholaseWorkFormTmpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_SaghfeKarRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_SaghfeKarRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_SaghfeKarRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_SaghfeKarRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_SaghfKarTotalRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_SaghfKarTotalRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_SaghfKarTotalRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_SaghfKarTotalRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_WorkFormMasterWithTEMPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_WorkFormMasterWithTEMPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_WorkFormMasterWithTEMPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_WorkFormMasterWithTEMPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_WorkFormMasterRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_WorkFormMasterRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_WorkFormMasterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_WorkFormMasterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_KholaseWorkFormRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_KholaseWorkFormRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_KholaseWorkFormRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_KholaseWorkFormRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_ExtraWorkRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_ExtraWorkRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_ExtraWorkRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_ExtraWorkRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_WorkFormMasterSearchRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_WorkFormMasterSearchRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_WorkFormMasterSearchRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_WorkFormMasterSearchRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_MultiEzafeKarRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_MultiEzafeKarRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_MultiEzafeKarRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_MultiEzafeKarRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_ReleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_ReleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_ReleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_ReleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_TranseGhodratRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_TranseGhodratRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_TranseGhodratRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_TranseGhodratRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_BarghgirRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_BarghgirRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_BarghgirRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_BarghgirRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_SexionerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_SexionerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_SexionerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_SexionerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_BreakerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_BreakerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_BreakerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_BreakerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_TeranseRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_TeranseRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_TeranseRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_TeranseRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_TajhizRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_TajhizRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_TajhizRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_TajhizRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_CableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_CableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_CableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_CableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_EibForm2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_EibForm2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_EibForm2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_EibForm2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Pm_PostPmRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Pm_PostPmRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Pm_PostPmRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Pm_PostPmRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_TajhizPmRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_TajhizPmRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_TajhizPmRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_TajhizPmRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_PmCancleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_PmCancleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_PmCancleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_PmCancleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Pm_SmsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Pm_SmsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Pm_SmsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Pm_SmsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class rp_eibformRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As rp_eibformRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As rp_eibformRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As rp_eibformRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_MonthPmRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_MonthPmRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_MonthPmRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_MonthPmRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_WorkForm_KargoziniRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_WorkForm_KargoziniRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_WorkForm_KargoziniRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_WorkForm_KargoziniRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TimeCard_WorkFormRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TimeCard_WorkFormRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TimeCard_WorkFormRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TimeCard_WorkFormRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_HazineCodeEzafeKarRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_HazineCodeEzafeKarRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_HazineCodeEzafeKarRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_HazineCodeEzafeKarRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_SummaryExtraWorkFanavaranRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_SummaryExtraWorkFanavaranRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_SummaryExtraWorkFanavaranRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_SummaryExtraWorkFanavaranRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_ExtraWorkAzarakhshRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_ExtraWorkAzarakhshRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_ExtraWorkAzarakhshRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_ExtraWorkAzarakhshRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_ExtraWorkFanavaranRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_ExtraWorkFanavaranRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_ExtraWorkFanavaranRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_ExtraWorkFanavaranRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_SummaryStatusstatementExtraWorkRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_SummaryStatusstatementExtraWorkRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_SummaryStatusstatementExtraWorkRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_SummaryStatusstatementExtraWorkRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_ConfirmedMultiEzafeKarStatusStatementRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_ConfirmedMultiEzafeKarStatusStatementRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_ConfirmedMultiEzafeKarStatusStatementRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_ConfirmedMultiEzafeKarStatusStatementRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rp_PishnahadRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rp_PishnahadRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rp_PishnahadRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rp_PishnahadRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace Ds_RpTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_SummaryExtraWorkTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_SummaryExtraWork"
            tableMapping.ColumnMappings.Add("کد شناسایی", "کد شناسایی")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("جمع اضافه کار تردد", "جمع اضافه کار تردد")
            tableMapping.ColumnMappings.Add("اضافه کار فرم کار", "اضافه کار فرم کار")
            tableMapping.ColumnMappings.Add("Srl_Ashkhas", "Srl_Ashkhas")
            tableMapping.ColumnMappings.Add("اضافه کار ستاد", "اضافه کار ستاد")
            tableMapping.ColumnMappings.Add("جمع مازاد اضافه کار", "جمع مازاد اضافه کار")
            tableMapping.ColumnMappings.Add("Srl_Pm_Company", "Srl_Pm_Company")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Ashkhas.PersonalCode as [کد شناسایی],Pm_Ashkhas.family+' - '+Pm_Ashkha"& _ 
                "s.name as [نام] , Pm_Ashkhas.Srl_Pm_Company ,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t1.[جمع اضافه کار تردد],'0"& _ 
                "0:00') as[جمع اضافه کار تردد]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ,ISNULL(t.[اضافه کار ستاد],'00:00')  as [اضافه ک"& _ 
                "ار ستاد],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t1.[اضافه کار فرم کار] ,'00:00')as[اضافه کار فرم کار],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL"& _ 
                "(t1.[جمع مازاد اضافه کار]  ,'00:00')as[جمع مازاد اضافه کار]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&", (case when t.Srl_"& _ 
                "Pm_ashkhas IS null then t1.Srl_Pm_Ashkhas else t.Srl_Pm_ashkhas end) as Srl_Ashk"& _ 
                "has"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvarchar(8),sum(DATEDIFF(Minute, '0:00:00',convert"& _ 
                "(time(0),isnull(EzafeKAr,'00:00:00' ))))/60 )+':'+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvarchar(8),Sum(DATE"& _ 
                "DIFF(Minute, '0:00:00',convert(time(0),isnull(EzafeKAr,'00:00:00' ))))%60 )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"as["& _ 
                "اضافه کار فرم کار]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvarchar(8),sum(DATEDIFF(Minute, '0:00:00',conver"& _ 
                "t(time(0),isnull(EzafeKarTaradod,'00:00:00' ) )))/60 )+':'+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvarchar(8)"& _ 
                ",Sum(DATEDIFF(Minute, '0:00:00',convert(time(0),isnull(EzafeKarTaradod,'00:00:00"& _ 
                "' ) )))%60 )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"as[جمع اضافه کار تردد],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvarchar(8),sum(DATEDIFF(Minute"& _ 
                ", '0:00:00',convert(time(0),isnull(MazadEzafeKar ,'00:00:00' ) )))/60 )+':'+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"co"& _ 
                "nvert(nvarchar(8),Sum(DATEDIFF(Minute, '0:00:00',convert(time(0),isnull(MazadEza"& _ 
                "feKar,'00:00:00' ) )))%60 )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"as[جمع مازاد اضافه کار],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Srl_Pm_Ashkhas "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   from "& _ 
                "Pm_WorkFrom_Detail  where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WorkFormTarikh >= @FromDate AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WorkFormTarikh <= @T"& _ 
                "oDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"group by Srl_Pm_Ashkhas )as t1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"full join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvarchar,sum"& _ 
                "(DATEDIFF(Minute,'0:00:00',convert(time(0),IsnULL(BeginTimeExtraWork ,'00:00:00'"& _ 
                ")))+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"DATEDIFF(Minute,'0:00:00',convert(time(0),IsnULL(EndTimeExtraWork ,'00:00:"& _ 
                "00')))+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"DATEDIFF(Minute,'0:00:00',convert(time(0),IsnULL(HolidayExtraWork  ,'00"& _ 
                ":00:00'))))/60) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"+':'+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvarchar,sum(DATEDIFF(Minute,'0:00:00',convert("& _ 
                "time(0),IsnULL(BeginTimeExtraWork ,'00:00:00')))+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"DATEDIFF(Minute,'0:00:00',con"& _ 
                "vert(time(0),IsnULL(EndTimeExtraWork ,'00:00:00') ))+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"DATEDIFF(Minute,'0:00:00'"& _ 
                ",convert(time(0),IsnULL(HolidayExtraWork  ,'00:00:00') )))%60) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"as [اضافه کار س"& _ 
                "تاد]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&",Srl_Pm_ashkhas "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from Pm_TimeCard  where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_TimeCard.Tarikh>=@FromDate"& _ 
                " AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_TimeCard.Tarikh<=@ToDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Group by Srl_Pm_ashkhas  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&") as t"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"On t.Srl"& _ 
                "_Pm_ashkhas = t1.Srl_Pm_Ashkhas  JOIN Pm_Ashkhas ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"t.Srl_Pm_ashkhas = Pm_Ashkh"& _ 
                "as.Srl OR t1.Srl_Pm_Ashkhas = Pm_Ashkhas.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where (Pm_Ashkhas.Srl_Pm_Company ="& _ 
                " '2')and (Pm_Ashkhas.srl_pm_vahed=@Srl_vahed or @Srl_vahed=-1) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and (pm_ashkhas"& _ 
                ".srl in (select srl_acc_ashkhas from Pm_GroupMember  where srl_pm_group=@Srl_Gro"& _ 
                "up) or @Srl_Group=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY نام"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Group", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_SummaryExtraWorkDataTable, ByVal Srl_vahed As Global.System.Nullable(Of Integer), ByVal Srl_Group As String, ByVal FromDate As String, ByVal ToDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Group")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Group,String)
            End If
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_vahed As Global.System.Nullable(Of Integer), ByVal Srl_Group As String, ByVal FromDate As String, ByVal ToDate As String) As Ds_Rp.Rp_SummaryExtraWorkDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Group")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Group,String)
            End If
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_SummaryExtraWorkDataTable = New Ds_Rp.Rp_SummaryExtraWorkDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_Pm_KalaUseTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Pm_KalaUse"
            tableMapping.ColumnMappings.Add("نام کالا", "نام کالا")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("نام گروه", "نام گروه")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("تعداد", "تعداد")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"stg_kala.Name as [نام کالا],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Group.Name "& _ 
                "as[نام گروه],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WorkFormNo as [شماره فرم کار],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WorkFormTarikh as [تاریخ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Tedad"& _ 
                " as تعداد"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_WorkForm_Master,Stg_Kala,Pm_WorkForm_KalaMasrafi ,Pm_post,Pm"& _ 
                "_Group "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where Pm_WorkForm_KalaMasrafi .Srl_Kala = stg_kala.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND Pm_post.Sr"& _ 
                "l = Srl_Pm_Post_To  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND Pm_Group.Srl = Srl_Pm_Group "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and Pm_WorkForm_Master.S"& _ 
                "rl = Pm_WorkForm_KalaMasrafi.Srl_Pm_WorkForm_Master "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and (Pm_WorkForm_Master.Wo"& _ 
                "rkFormTarikh>=@FromDate OR @FromDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_WorkForm_Master.WorkFormTarikh"& _ 
                "<=@ToDate OR @ToDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_WorkForm_Master.Srl_Pm_Group = @Group OR @Grou"& _ 
                "p=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_WorkForm_Master.Srl_Pm_Post_To  = @Post OR @Post=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Ka"& _ 
                "la = @Kala OR @Kala=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (WorkFormNo = @WorkFormNo OR @WorkFormNo='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"order"& _ 
                " by Srl_Kala "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kala", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Kala", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WorkFormNo", Global.System.Data.SqlDbType.NVarChar, 500, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره فرم کار", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_Pm_KalaUseDataTable, ByVal FromDate As String, ByVal ToDate As String, ByVal Group As Global.System.Nullable(Of Integer), ByVal Post As Global.System.Nullable(Of Integer), ByVal Kala As Global.System.Nullable(Of Integer), ByVal WorkFormNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ToDate,String)
            End If
            If (Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Kala.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Kala.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (WorkFormNo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(WorkFormNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FromDate As String, ByVal ToDate As String, ByVal Group As Global.System.Nullable(Of Integer), ByVal Post As Global.System.Nullable(Of Integer), ByVal Kala As Global.System.Nullable(Of Integer), ByVal WorkFormNo As String) As Ds_Rp.Rp_Pm_KalaUseDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ToDate,String)
            End If
            If (Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Kala.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Kala.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (WorkFormNo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(WorkFormNo,String)
            End If
            Dim dataTable As Ds_Rp.Rp_Pm_KalaUseDataTable = New Ds_Rp.Rp_Pm_KalaUseDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_MojodiAnbarTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_MojodiAnbar"
            tableMapping.ColumnMappings.Add("Srl_Kala", "Srl_Kala")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("موجودی انبار", "موجودی انبار")
            tableMapping.ColumnMappings.Add("میزان مصرف", "میزان مصرف")
            tableMapping.ColumnMappings.Add("تعداد", "تعداد")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select * from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select case when t1.Srl_Stg_Kala IS NULL   then t2.Srl_Kala "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"el"& _ 
                "se t1.Srl_Stg_Kala end as Srl_Kala,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"case when t1.name  IS NULL  then t2.Name "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "else t1.Name end  as نام,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t1.تعداد,0)as [موجودی انبار],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t2.تعداد"& _ 
                ",0)as [میزان مصرف],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"isnull(t1.تعداد ,0)- isnull(t2.تعداد ,0) as تعداد"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                " (select Srl_Stg_Kala ,stg_kala.Name,SUM(count)as تعداد from Stg_AnbarKala,Stg_K"& _ 
                "ala where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Srl_Stg_Kala = stg_kala.srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Group by Srl_Stg_Kala,stg_kala.Name "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&")t"& _ 
                "1 FULL OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select Srl_Kala,stg_kala.Name,Sum(tedad)as تعداد from Pm_Wor"& _ 
                "kForm_KalaMasrafi ,Stg_Kala where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"stg_kala.Srl = Srl_Kala group by Srl_Kala ,st"& _ 
                "g_kala.Name )t2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ON t1.Srl_Stg_Kala = t2.Srl_Kala )t4"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Srl_Kala = @Srl_"& _ 
                "Kala OR @Srl_Kala=-1)and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(تعداد>=@BiggerThan  OR @BiggerThan=-1)AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(تعداد<="& _ 
                "@LessThan OR @LessThan=-1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Kala", Global.System.Data.SqlDbType.[Variant], 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Kala", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BiggerThan", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "تعداد", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LessThan", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "تعداد", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_MojodiAnbarDataTable, ByVal Srl_Kala As Object, ByVal BiggerThan As Decimal, ByVal LessThan As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Kala Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Kala")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Kala,Object)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(BiggerThan,Decimal)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(LessThan,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Kala As Object, ByVal BiggerThan As Decimal, ByVal LessThan As Decimal) As Ds_Rp.Rp_MojodiAnbarDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Kala Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Kala")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Kala,Object)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(BiggerThan,Decimal)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(LessThan,Decimal)
            Dim dataTable As Ds_Rp.Rp_MojodiAnbarDataTable = New Ds_Rp.Rp_MojodiAnbarDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_GroupEibFormTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_GroupEibForm"
            tableMapping.ColumnMappings.Add("Srl_Group", "Srl_Group")
            tableMapping.ColumnMappings.Add("رفع نشده", "رفع نشده")
            tableMapping.ColumnMappings.Add("رفع شده", "رفع شده")
            tableMapping.ColumnMappings.Add("کل", "کل")
            tableMapping.ColumnMappings.Add("نام", "نام")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select isnull(Pm_Group.Name,'ناشناخته')as نام,t3.* from"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select case when t1.Srl"& _ 
                "_Group IS null then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t2.Srl_Group "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"else"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t1.Srl_Group "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"end  as [Srl_Group]"& _ 
                ","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t1.[رفع نشده],0) as [رفع نشده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t2.[رفع شده] ,0)as [رفع شده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(ISNULL(t1.[رفع نشده],0) +ISNULL(t2.[رفع شده] ,0),0) as [کل]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(se"& _ 
                "lect ISnull(Srl_Pm_Group,-1)as Srl_Group,COUNT(*) as [رفع شده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibForm"& _ 
                "Master "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" where  (EibFixDate  IS not  null AND EibFixDate <> '' OR IsUnDecided ="& _ 
                "1 )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" AND  (OriginalEibFormDate>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"& _ 
                "( (Pm_EibFormMaster.Srl not in (select Srl_Pm_EibFormMasterPeiro  from Pm_EibFor"& _ 
                "mPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFormToDate OR @EibFo"& _ 
                "rmToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Group in (select * from split(@Group,',')) OR @Group"& _ 
                "='-1') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" group by Srl_Pm_Group )as t2 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" FULL outer join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select ISNULL(Srl_Pm"& _ 
                "_Group,-1)as Srl_Group,COUNT(*)as [رفع نشده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFormMaster "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" where  ("& _ 
                "(EibFixDate  IS null OR EibFixDate='') and IsUnDecided <>1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" AND  (OriginalEibF"& _ 
                "ormDate>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster.Srl "& _ 
                "not in (select Srl_Pm_EibFormMasterPeiro  from Pm_EibFormPeiro)) OR (@ShowPeiro="& _ 
                "-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFormToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl"& _ 
                "_Pm_Group in (select * from split(@Group,',')) OR @Group='-1') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  group by Srl_"& _ 
                "Pm_Group ) as t1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ON t1.Srl_Group = t2.Srl_Group ) as t3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" LEFT OUTER JOIN Pm_G"& _ 
                "roup ON Pm_Group.Srl = t3.Srl_Group "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Order by کل desc"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShowPeiro", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_GroupEibFormDataTable, ByVal EibFormFromDate As String, ByVal ShowPeiro As String, ByVal EibFormToDate As String, ByVal Group As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EibFormToDate,String)
            End If
            If (Group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Group")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Group,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal EibFormFromDate As String, ByVal ShowPeiro As String, ByVal EibFormToDate As String, ByVal Group As String) As Ds_Rp.Rp_GroupEibFormDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EibFormToDate,String)
            End If
            If (Group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Group")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Group,String)
            End If
            Dim dataTable As Ds_Rp.Rp_GroupEibFormDataTable = New Ds_Rp.Rp_GroupEibFormDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_NafarSatGroupTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_NafarSatGroup"
            tableMapping.ColumnMappings.Add("Srl_Pm_Group", "Srl_Pm_Group")
            tableMapping.ColumnMappings.Add("جمع ساعت کار", "جمع ساعت کار")
            tableMapping.ColumnMappings.Add("نام گروه", "نام گروه")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     SUM(CONVERT(int, DATEDIFF(Minute, '0:00:00', CONVERT(time(0), dbo.Pm_W"& _ 
                "orkFrom_Detail.SatKAr)))) / 60 AS 'جمع ساعت کار', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm"& _ 
                "_WorkForm_Master.Srl_Pm_Group, dbo.Pm_Group.Name AS 'نام گروه'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         dbo"& _ 
                ".Pm_WorkForm_Master INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkFrom_Detail ON "& _ 
                "dbo.Pm_WorkForm_Master.Srl = dbo.Pm_WorkFrom_Detail.Srl_Pm_WorkForm_Master INNER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group ON dbo.Pm_WorkForm_Master.Srl_Pm_Group"& _ 
                " = dbo.Pm_Group.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(dbo.Pm_WorkForm_Master.WorkFormTarikh >= @Tari"& _ 
                "khFromDate or @TarikhFromDate='-1')  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(dbo.Pm_WorkForm_Master.WorkFormTarik"& _ 
                "h <= @TarikhToDate or @TarikhToDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(dbo.Pm_WorkForm_Master.Srl_Pm_G"& _ 
                "roup = @Srl_Pm_Group or @Srl_Pm_Group=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY dbo.Pm_WorkForm_Master.Srl_P"& _ 
                "m_Group, dbo.Pm_Group.Name"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhFromDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "WorkFormTarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhToDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "WorkFormTarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_NafarSatGroupDataTable, ByVal TarikhFromDate As String, ByVal TarikhToDate As String, ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (TarikhFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TarikhFromDate,String)
            End If
            If (TarikhToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TarikhToDate,String)
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal TarikhFromDate As String, ByVal TarikhToDate As String, ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_NafarSatGroupDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (TarikhFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TarikhFromDate,String)
            End If
            If (TarikhToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TarikhToDate,String)
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_NafarSatGroupDataTable = New Ds_Rp.Rp_NafarSatGroupDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_WorkFormMaster1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_WorkFormMaster1"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("واحد", "واحد")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ فرم کار", "تاریخ فرم کار")
            tableMapping.ColumnMappings.Add("سرپرست", "سرپرست")
            tableMapping.ColumnMappings.Add("مبدا", "مبدا")
            tableMapping.ColumnMappings.Add("مقصد", "مقصد")
            tableMapping.ColumnMappings.Add("گروه", "گروه")
            tableMapping.ColumnMappings.Add("توضیح کار", "توضیح کار")
            tableMapping.ColumnMappings.Add("نام پروژه", "نام پروژه")
            tableMapping.ColumnMappings.Add("شرح کار", "شرح کار")
            tableMapping.ColumnMappings.Add("تعداد نفرات", "تعداد نفرات")
            tableMapping.ColumnMappings.Add("نفر ساعت", "نفر ساعت")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     dbo.Pm_WorkForm_Master.Srl, dbo.Pm_WorkForm_Master.No AS شماره, dbo.Pm"& _ 
                "_WorkForm_Master.Tarikh AS تاریخ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master"& _ 
                ".WorkFormNo AS [شماره فرم کار], dbo.Pm_WorkForm_Master.WorkFormTarikh AS [تاریخ "& _ 
                "فرم کار], dbo.Pm_Ashkhas.Name + ' ' + dbo.Pm_Ashkhas.Family AS سرپرست, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               dbo.Pm_Post.Name AS مبدا, Pm_Post_1.Name AS مقصد, dbo.Pm_Group.Na"& _ 
                "me AS گروه, dbo.Pm_Vahed.Name AS واحد, dbo.Pm_WorkDis.Name AS [توضیح کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                   dbo.Pm_HazineCode.Code AS [کد هزینه], dbo.Pm_HazineCode.Sharh"& _ 
                " AS [نام پروژه], dbo.Pm_WorkForm_Master.Dis AS [شرح کار], ISNULL(AShkhasCount.Co"& _ 
                "untAshkhs, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      0) AS [تعداد نفرات], SumSatKar.sumSatKAr AS ["& _ 
                "نفر ساعت]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         (SELECT     COUNT(Srl) AS CountAshkhs, Srl_Pm_WorkForm_M"& _ 
                "aster"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        FROM         dbo.Pm_WorkFrom_Detail AS Pm_WorkFro"& _ 
                "m_Detail_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        GROUP BY Srl_Pm_WorkForm_Master) AS AShkhasC"& _ 
                "ount RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (SELECT     CONVERT(nvarchar, S"& _ 
                "UM(CONVERT(int, DATEDIFF(Minute, '0:00:00', CONVERT(time(0), SatKAr)))) / 60) + "& _ 
                "':' + CONVERT(nvarchar, SUM(CONVERT(int, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                     "& _ 
                "              DATEDIFF(Minute, '0:00:00', CONVERT(time(0), SatKAr)))) % 60) AS s"& _ 
                "umSatKAr, Srl_Pm_WorkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             FROM         dbo."& _ 
                "Pm_WorkFrom_Detail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             GROUP BY Srl_Pm_WorkForm_Master"& _ 
                ") AS SumSatKar INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master INNER JO"& _ 
                "IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas ON dbo.Pm_WorkForm_Master.Srl_Pm_Ashkha"& _ 
                "s_Sarparast = dbo.Pm_Ashkhas.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post O"& _ 
                "N dbo.Pm_WorkForm_Master.Srl_Pm_Post_From = dbo.Pm_Post.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              dbo.Pm_Post AS Pm_Post_1 ON dbo.Pm_WorkForm_Master.Srl_Pm_Post_To "& _ 
                "= Pm_Post_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group ON dbo.Pm_WorkFor"& _ 
                "m_Master.Srl_Pm_Group = dbo.Pm_Group.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.P"& _ 
                "m_WorkDis ON dbo.Pm_WorkForm_Master.Srl_Pm_WorkDis = dbo.Pm_WorkDis.Srl INNER JO"& _ 
                "IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Vahed ON dbo.Pm_WorkForm_Master.Srl_Pm_Vahed = "& _ 
                "dbo.Pm_Vahed.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode ON dbo.Pm_W"& _ 
                "orkForm_Master.Srl_HazineCode = dbo.Pm_HazineCode.Srl ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                " SumSatKar.Srl_Pm_WorkForm_Master = dbo.Pm_WorkForm_Master.Srl ON AShkhasCount.S"& _ 
                "rl_Pm_WorkForm_Master = dbo.Pm_WorkForm_Master.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_"& _ 
                "Master.Srl_Pm_Post_From = @Srl_Pm_Post_From or @Srl_Pm_Post_From=-1)  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_"& _ 
                "WorkForm_Master.Srl_Pm_Post_To = @Srl_Pm_Post_To or @Srl_Pm_Post_To=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(P"& _ 
                "m_WorkForm_Master.Srl_Pm_Group = @Srl_Pm_Group or @Srl_Pm_Group=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_Wo"& _ 
                "rkForm_Master.Srl_Pm_Vahed = @Srl_Pm_Vahed or @Srl_Pm_Vahed=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkFo"& _ 
                "rm_Master.Srl_Pm_WorkDis = @Srl_Pm_WorkDis or @Srl_Pm_WorkDis=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_Work"& _ 
                "Form_Master.Srl_HazineCode = @Srl_HazineCode or @Srl_HazineCode=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_Wo"& _ 
                "rkForm_Master.No = @No or @No=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh >= @BeginDate"& _ 
                " or @BeginDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh <= @EbdDate or @EbdDate='-"& _ 
                "1') AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Ashkhas_Sarparast=@Srl_Pm_Ashkhas_Sarparast "& _ 
                "or @Srl_Pm_Ashkhas_Sarparast=-1)  AND (dbo.Pm_WorkForm_Master.srl_dayofweek = @s"& _ 
                "rl_dayofweek or @srl_dayofweek=-1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas_Sarparast", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas_Sarparast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@srl_dayofweek", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "srl_dayofweek", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     dbo.Pm_WorkForm_Master.Srl, dbo.Pm_WorkForm_Master.No AS شماره, dbo.Pm"& _ 
                "_WorkForm_Master.Tarikh AS تاریخ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master"& _ 
                ".WorkFormNo AS [شماره فرم کار], dbo.Pm_WorkForm_Master.WorkFormTarikh AS [تاریخ "& _ 
                "فرم کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas.Name + ' ' + dbo.Pm_Ashkhas.Fam"& _ 
                "ily AS سرپرست, dbo.Pm_Post.Name AS مبدا, Pm_Post_1.Name AS مقصد, dbo.Pm_Group.Na"& _ 
                "me AS گروه, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Vahed.Name AS واحد, dbo.Pm_WorkDis.Na"& _ 
                "me AS [توضیح کار], dbo.Pm_HazineCode.Code AS [کد هزینه], dbo.Pm_HazineCode.Sharh"& _ 
                " AS [نام پروژه], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master.Dis AS [شرح کار]"& _ 
                ", ISNULL(AShkhasCount.CountAshkhs, 0) AS [تعداد نفرات], SumSatKar.sumSatKAr AS ["& _ 
                "نفر ساعت]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         dbo.Pm_Vahed RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo"& _ 
                ".Pm_HazineCode RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post ON dbo.Pm_WorkForm_Master.Srl_Pm_Pos"& _ 
                "t_From = dbo.Pm_Post.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post AS Pm_Pos"& _ 
                "t_1 ON dbo.Pm_WorkForm_Master.Srl_Pm_Post_To = Pm_Post_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                   (SELECT     CONVERT(nvarchar, SUM(CONVERT(int, DATEDIFF(Minut"& _ 
                "e, '0:00:00', CONVERT(time(0), SatKAr)))) / 60) + ':' + CONVERT(nvarchar, SUM(CO"& _ 
                "NVERT(int, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   DATEDIFF(Minute,"& _ 
                " '0:00:00', CONVERT(time(0), SatKAr)))) % 60) AS sumSatKAr, Srl_Pm_WorkForm_Mast"& _ 
                "er"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             FROM         dbo.Pm_WorkFrom_Detail AS Pm_WorkF"& _ 
                "rom_Detail_2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             GROUP BY Srl_Pm_WorkForm_Master) AS S"& _ 
                "umSatKar ON dbo.Pm_WorkForm_Master.Srl = SumSatKar.Srl_Pm_WorkForm_Master LEFT O"& _ 
                "UTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas ON dbo.Pm_WorkForm_Master.Srl_Pm"& _ 
                "_Ashkhas_Sarparast = dbo.Pm_Ashkhas.Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      d"& _ 
                "bo.Pm_WorkDis ON dbo.Pm_WorkForm_Master.Srl_Pm_WorkDis = dbo.Pm_WorkDis.Srl LEFT"& _ 
                " OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group ON dbo.Pm_WorkForm_Master.Srl_Pm"& _ 
                "_Group = dbo.Pm_Group.Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkFrom"& _ 
                "_Detail ON dbo.Pm_WorkForm_Master.Srl = dbo.Pm_WorkFrom_Detail.Srl_Pm_WorkForm_M"& _ 
                "aster ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode.Srl = dbo.Pm_WorkForm_Master."& _ 
                "Srl_HazineCode ON dbo.Pm_Vahed.Srl = dbo.Pm_WorkForm_Master.Srl_Pm_Vahed LEFT OU"& _ 
                "TER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (SELECT     COUNT(Srl) AS CountAshkhs, Srl_P"& _ 
                "m_WorkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             FROM         dbo.Pm_WorkFrom_Det"& _ 
                "ail AS Pm_WorkFrom_Detail_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             GROUP BY Srl_Pm_WorkFo"& _ 
                "rm_Master) AS AShkhasCount ON dbo.Pm_WorkForm_Master.Srl = AShkhasCount.Srl_Pm_W"& _ 
                "orkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Post_From = @Srl_Pm_Po"& _ 
                "st_From or @Srl_Pm_Post_From=-1)  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Post_To = @Sr"& _ 
                "l_Pm_Post_To or @Srl_Pm_Post_To=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Group = @Sr"& _ 
                "l_Pm_Group or @Srl_Pm_Group=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Vahed = @Srl_Pm"& _ 
                "_Vahed or @Srl_Pm_Vahed=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_WorkDis = @Srl_Pm_W"& _ 
                "orkDis or @Srl_Pm_WorkDis=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_HazineCode = @Srl_Ha"& _ 
                "zineCode or @Srl_HazineCode=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.No = @No or @No=-1) AN"& _ 
                "D "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh >= @BeginDate or @BeginDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkF"& _ 
                "orm_Master.Tarikh <= @EbdDate or @EbdDate='-1') AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_"& _ 
                "Ashkhas_Sarparast=@Srl_Pm_Ashkhas_Sarparast or @Srl_Pm_Ashkhas_Sarparast=-1)  AN"& _ 
                "D (dbo.Pm_WorkForm_Master.srl_dayofweek = @srl_dayofweek or @srl_dayofweek=-1) A"& _ 
                "nd (dbo.Pm_WorkFrom_Detail.Srl_Pm_Ashkhas = @Srl_Pm_Ashkhas)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas_Sarparast", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas_Sarparast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@srl_dayofweek", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "srl_dayofweek", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_WorkFormMaster1DataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_WorkFormMaster1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_WorkFormMaster1DataTable = New Ds_Rp.Rp_WorkFormMaster1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByAshkhas(ByVal dataTable As Ds_Rp.Rp_WorkFormMaster1DataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByAshkhas(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_WorkFormMaster1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_WorkFormMaster1DataTable = New Ds_Rp.Rp_WorkFormMaster1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_WorkFormTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_WorkForm"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("واحد", "واحد")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ فرم کار", "تاریخ فرم کار")
            tableMapping.ColumnMappings.Add("سرپرست", "سرپرست")
            tableMapping.ColumnMappings.Add("مبدا", "مبدا")
            tableMapping.ColumnMappings.Add("مقصد", "مقصد")
            tableMapping.ColumnMappings.Add("گروه", "گروه")
            tableMapping.ColumnMappings.Add("توضیح کار", "توضیح کار")
            tableMapping.ColumnMappings.Add("نام پروژه", "نام پروژه")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        Pm_WorkForm_Master.Srl, Pm_WorkForm_Master.No AS شماره, Pm_WorkForm"& _ 
                "_Master.Tarikh AS تاریخ, Pm_WorkForm_Master.WorkFormNo AS [شماره فرم کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      Pm_WorkForm_Master.WorkFormTarikh AS [تاریخ فرم کار], Pm_A"& _ 
                "shkhas.Name AS سرپرست, Pm_Post.Name AS مبدا, Pm_Post_1.Name AS مقصد, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                Pm_Group.Name AS گروه, Pm_Vahed.Name AS واحد, Pm_WorkDis.Name AS"& _ 
                " [توضیح کار], Pm_HazineCode.Code AS [کد هزینه], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Ha"& _ 
                "zineCode.Sharh AS [نام پروژه]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Pm_WorkForm_Master INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       Pm_Ashkhas ON Pm_WorkForm_Master.Srl_Pm_Ashkhas_Sarparast"& _ 
                " = Pm_Ashkhas.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Post ON Pm_WorkForm_Ma"& _ 
                "ster.Srl_Pm_Post_From = Pm_Post.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Post"& _ 
                " AS Pm_Post_1 ON Pm_WorkForm_Master.Srl_Pm_Post_To = Pm_Post_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        Pm_Group ON Pm_WorkForm_Master.Srl_Pm_Group = Pm_Group.S"& _ 
                "rl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_WorkDis ON Pm_WorkForm_Master.Srl_Pm_"& _ 
                "WorkDis = Pm_WorkDis.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_WorkFrom_Detail"& _ 
                " ON Pm_WorkForm_Master.Srl = Pm_WorkFrom_Detail.Srl_Pm_WorkForm_Master INNER JOI"& _ 
                "N"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Ashkhas AS Pm_Ashkhas_1 ON Pm_WorkFrom_Detail.Srl"& _ 
                "_Pm_Ashkhas = Pm_Ashkhas_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Post AS P"& _ 
                "m_Post_2 ON Pm_WorkFrom_Detail.Srl_Pm_Post_From = Pm_Post_2.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     Pm_Post AS Pm_Post_3 ON Pm_WorkFrom_Detail.Srl_Pm_Post_To ="& _ 
                " Pm_Post_3.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Group AS Pm_Group_1 ON Pm"& _ 
                "_WorkFrom_Detail.Srl_Pm_Group = Pm_Group_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    Pm_Vahed ON Pm_WorkForm_Master.Srl_Pm_Vahed = Pm_Vahed.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    Pm_Vahed AS Pm_Vahed_1 ON Pm_WorkFrom_Detail.Srl_Pm_Vahed = "& _ 
                "Pm_Vahed_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_HazineCode ON Pm_WorkForm"& _ 
                "_Master.Srl_HazineCode = Pm_HazineCode.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "Pm_WorkDis AS Pm_WorkDis_1 ON Pm_WorkFrom_Detail.Srl_Pm_WorkDis = Pm_WorkDis_1.S"& _ 
                "rl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_HazineCode AS Pm_HazineCode_1 ON Pm_W"& _ 
                "orkFrom_Detail.Srl_HazineCode = Pm_HazineCode_1.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Pm_WorkForm_M"& _ 
                "aster.Srl_Pm_Post_From = @Srl_Pm_Post_From) AND (Pm_WorkForm_Master.Srl_Pm_Post_"& _ 
                "To = @Srl_Pm_Post_To) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (Pm_WorkForm_Master.Srl_Pm_"& _ 
                "Group = @Srl_Pm_Group) AND (Pm_WorkForm_Master.Srl_Pm_Vahed = @Srl_Pm_Vahed) AND"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (Pm_WorkForm_Master.Srl_Pm_WorkDis = @Srl_Pm_WorkDis"& _ 
                ") AND (Pm_WorkForm_Master.Srl_HazineCode = @Srl_HazineCode) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           (Pm_WorkForm_Master.No = @No) AND (Pm_WorkForm_Master.Tarikh > @Begin"& _ 
                "Date) AND (Pm_WorkForm_Master.Tarikh < @EbdDate)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_WorkFormDataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String) As Ds_Rp.Rp_WorkFormDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_WorkFormDataTable = New Ds_Rp.Rp_WorkFormDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_VahedEibFormTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_VahedEibForm"
            tableMapping.ColumnMappings.Add("Srl_Vahed", "Srl_Vahed")
            tableMapping.ColumnMappings.Add("رفع نشده", "رفع نشده")
            tableMapping.ColumnMappings.Add("رفع شده", "رفع شده")
            tableMapping.ColumnMappings.Add("کل", "کل")
            tableMapping.ColumnMappings.Add("نام", "نام")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select isnull(Pm_Vahed.Name,'ناشناخته')as نام,t3.* from"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select case when t1.Srl"& _ 
                "_Vahed IS null then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t2. Srl_Vahed "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"else"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t1. Srl_Vahed "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"end  as [Srl_Vahe"& _ 
                "d],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t1.[رفع نشده],0) as [رفع نشده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t2.[رفع شده] ,0)as [رفع شده]"& _ 
                ","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(ISNULL(t1.[رفع نشده],0) +ISNULL(t2.[رفع شده] ,0),0) as [کل]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"("& _ 
                "select ISnull(Srl_Pm_Vahed,-1)as Srl_Vahed,COUNT(*) as [رفع شده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFo"& _ 
                "rmMaster "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" where (( EibFixDate  IS not null  AND EibFixDate <> ''  )or IsUnDeci"& _ 
                "ded =1 )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" AND  (OriginalEibFormDate>=@EibFormFromDate OR @EibFormFromDate='-1')"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster.Srl not in (select Srl_Pm_EibFormMasterPeiro  from Pm_E"& _ 
                "ibFormPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFormToDate OR @"& _ 
                "EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Vahed in (select * from split(@Vahed,',')) OR @"& _ 
                "Vahed='-1') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" group by Srl_Pm_Vahed )as t2 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" FULL outer join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select ISNULL(S"& _ 
                "rl_Pm_Vahed,-1)as Srl_Vahed,COUNT(*)as [رفع نشده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFormMaster "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" whe"& _ 
                "re (( EibFixDate  IS null OR EibFixDate='' )and IsUnDecided <>1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" AND  (Origina"& _ 
                "lEibFormDate>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster"& _ 
                ".Srl not in (select Srl_Pm_EibFormMasterPeiro  from Pm_EibFormPeiro)) OR (@ShowP"& _ 
                "eiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFormToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"& _ 
                " (Srl_Pm_Vahed in (select * from split(@Vahed,',')) OR @Vahed='-1') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  group by"& _ 
                " Srl_Pm_Vahed ) as t1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ON t1.Srl_Vahed = t2.Srl_Vahed ) as t3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" LEFT OUTER JOIN"& _ 
                " Pm_Vahed ON Pm_Vahed.Srl = t3.Srl_Vahed"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Order by کل desc"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShowPeiro", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vahed", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_VahedEibFormDataTable, ByVal EibFormFromDate As String, ByVal ShowPeiro As String, ByVal EibFormToDate As String, ByVal Vahed As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EibFormToDate,String)
            End If
            If (Vahed Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Vahed")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Vahed,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal EibFormFromDate As String, ByVal ShowPeiro As String, ByVal EibFormToDate As String, ByVal Vahed As String) As Ds_Rp.Rp_VahedEibFormDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EibFormToDate,String)
            End If
            If (Vahed Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Vahed")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Vahed,String)
            End If
            Dim dataTable As Ds_Rp.Rp_VahedEibFormDataTable = New Ds_Rp.Rp_VahedEibFormDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_EibTypeEibFormTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_EibTypeEibForm"
            tableMapping.ColumnMappings.Add("Srl_Pm_EibType", "Srl_Pm_EibType")
            tableMapping.ColumnMappings.Add("رفع نشده", "رفع نشده")
            tableMapping.ColumnMappings.Add("رفع شده", "رفع شده")
            tableMapping.ColumnMappings.Add("کل", "کل")
            tableMapping.ColumnMappings.Add("نام", "نام")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select isnull(Pm_EibType .Name,'ناشناخته')as نام ,t3.* from"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select case when t1"& _ 
                ".Srl_Pm_EibType IS null then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t2. Srl_Pm_EibType "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"else"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t1. Srl_Pm_EibType "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"end  as Srl_Pm_EibType,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t1.[رفع نشده],0) as [رفع نشده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t2.[رف"& _ 
                "ع شده] ,0)as [رفع شده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(ISNULL(t1.[رفع نشده],0) +ISNULL(t2.[رفع شده] ,0)"& _ 
                ",0) as [کل]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select ISnull(Srl_Pm_EibType,-1)as Srl_Pm_EibType,COUNT(*)"& _ 
                " as [رفع شده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFormMaster,Pm_EibFormDetails  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" where  (EibFixDate  "& _ 
                "IS not  null AND EibFixDate <> '' OR IsUnDecided =1 )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  AND  (OriginalEibFormDa"& _ 
                "te>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster.Srl not i"& _ 
                "n (select Srl_Pm_EibFormMasterPeiro  from Pm_EibFormPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFormToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_E"& _ 
                "ibType in (select * from split(@EibType,',')) OR @EibType='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" and Pm_EibFo"& _ 
                "rmDetails.Srl_Pm_EibFormMaster = Pm_EibFormMaster.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" group by Srl_Pm_EibType"& _ 
                " )as t2 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" FULL outer join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select ISNULL(Srl_Pm_EibType,-1)as Srl_Pm_EibType,C"& _ 
                "OUNT(*)as [رفع نشده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFormMaster ,Pm_EibFormDetails "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" where (( EibF"& _ 
                "ixDate  IS null OR EibFixDate='' )and IsUnDecided <>1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" AND  (OriginalEibFormDa"& _ 
                "te>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster.Srl not i"& _ 
                "n (select Srl_Pm_EibFormMasterPeiro  from Pm_EibFormPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFormToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_E"& _ 
                "ibType in (select * from split(@EibType,',')) OR @EibType='-1') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" and Pm_EibFor"& _ 
                "mDetails.Srl_Pm_EibFormMaster = Pm_EibFormMaster.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  group by Srl_Pm_EibType"& _ 
                "  ) as t1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ON t1.Srl_Pm_EibType = t2.Srl_Pm_EibType ) as t3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" JOIN Pm_EibTy"& _ 
                "pe   ON Pm_EibType .Srl =t3.Srl_Pm_EibType  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Order by کل"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShowPeiro", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibType", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_EibTypeEibFormDataTable, ByVal EibFormFromDate As String, ByVal ShowPeiro As String, ByVal EibFormToDate As String, ByVal EibType As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EibFormToDate,String)
            End If
            If (EibType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EibType")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(EibType,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal EibFormFromDate As String, ByVal ShowPeiro As String, ByVal EibFormToDate As String, ByVal EibType As String) As Ds_Rp.Rp_EibTypeEibFormDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EibFormToDate,String)
            End If
            If (EibType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EibType")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(EibType,String)
            End If
            Dim dataTable As Ds_Rp.Rp_EibTypeEibFormDataTable = New Ds_Rp.Rp_EibTypeEibFormDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_PostEibformTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_PostEibform"
            tableMapping.ColumnMappings.Add("Srl_Post", "Srl_Post")
            tableMapping.ColumnMappings.Add("رفع نشده", "رفع نشده")
            tableMapping.ColumnMappings.Add("رفع شده", "رفع شده")
            tableMapping.ColumnMappings.Add("کل", "کل")
            tableMapping.ColumnMappings.Add("نام", "نام")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select isnull(Pm_post.Name,'ناشناخته')as نام,t3.* from"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select case when t1.Srl_"& _ 
                "Post IS null then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t2. Srl_Post "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"else"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t1. Srl_Post "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"end  as [Srl_Post],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "ISNULL(t1.[رفع نشده],0) as [رفع نشده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t2.[رفع شده] ,0)as [رفع شده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IS"& _ 
                "NULL(ISNULL(t1.[رفع نشده],0) +ISNULL(t2.[رفع شده] ,0),0) as [کل]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(selec"& _ 
                "t ISnull(Srl_Pm_Post,-1)as Srl_Post,COUNT(*) as [رفع شده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFormMaste"& _ 
                "r "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" where (( EibFixDate  IS not null  AND EibFixDate <> ''  )or IsUnDecided =1 "& _ 
                ")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" AND  (OriginalEibFormDate>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( "& _ 
                "(Pm_EibFormMaster.Srl not in (select Srl_Pm_EibFormMasterPeiro  from Pm_EibFormP"& _ 
                "eiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFormToDate OR @EibForm"& _ 
                "ToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Post in (select * from split(@Post,',')) OR @Post='-1'"& _ 
                ") "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" group by Srl_Pm_Post  )as t2 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" FULL outer join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select ISNULL(Srl_Pm_Post"& _ 
                ",-1)as Srl_Post,COUNT(*)as [رفع نشده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFormMaster "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" where (( EibFix"& _ 
                "Date  IS null OR EibFixDate='' )and IsUnDecided <>1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" AND  (OriginalEibFormDate"& _ 
                ">=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster.Srl not in "& _ 
                "(select Srl_Pm_EibFormMasterPeiro  from Pm_EibFormPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"A"& _ 
                "ND (OriginalEibFormDate<=@EibFormToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Pos"& _ 
                "t in (select * from split(@Post,',')) OR @Post='-1') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  group by Srl_Pm_Post  )"& _ 
                " as t1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ON t1.Srl_Post  = t2.Srl_Post ) as t3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" LEFT OUTER JOIN Pm_Post  ON Pm_"& _ 
                "Post.Srl = t3.Srl_Post "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Order by کل desc"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShowPeiro", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_PostEibformDataTable, ByVal EibFormFromDate As String, ByVal ShowPeiro As String, ByVal EibFormToDate As String, ByVal Post As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EibFormToDate,String)
            End If
            If (Post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Post")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Post,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal EibFormFromDate As String, ByVal ShowPeiro As String, ByVal EibFormToDate As String, ByVal Post As String) As Ds_Rp.Rp_PostEibformDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EibFormToDate,String)
            End If
            If (Post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Post")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Post,String)
            End If
            Dim dataTable As Ds_Rp.Rp_PostEibformDataTable = New Ds_Rp.Rp_PostEibformDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_CompareGroupEibFormTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_CompareGroupEibForm"
            tableMapping.ColumnMappings.Add("نام گروه", "نام گروه")
            tableMapping.ColumnMappings.Add("نام واحد", "نام واحد")
            tableMapping.ColumnMappings.Add("مسئول گروه", "مسئول گروه")
            tableMapping.ColumnMappings.Add("Srl_Group", "Srl_Group")
            tableMapping.ColumnMappings.Add("رفع نشده", "رفع نشده")
            tableMapping.ColumnMappings.Add("رفع شده", "رفع شده")
            tableMapping.ColumnMappings.Add("کل", "کل")
            tableMapping.ColumnMappings.Add("درصد رفع شده", "درصد رفع شده")
            tableMapping.ColumnMappings.Add("درصد رفع نشده", "درصد رفع نشده")
            tableMapping.ColumnMappings.Add("درصد نقص به کل نواقص", "درصد نقص به کل نواقص")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select ISNULL(Pm_Group.Name,'') as [نام گروه],ISNULL(Pm_Vahed.name,'') as [نام وا"& _ 
                "حد],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"isnull(Pm_Ashkhas.Name+' '+Pm_Ashkhas.Family,'') as [مسئول گروه],t3.*,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" I"& _ 
                "SNULL("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" convert(float,t3.[رفع شده])/nullif(t3.کل,0),0) *100 as [درصد رفع شده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ISNULL(convert(float,t3.[رفع نشده] )/nullif(t3.کل,0),0) *100 as [درصد رفع نشده"& _ 
                "]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ,0 as [درصد نقص به کل نواقص]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"select case when t1.Srl_Group IS null"& _ 
                " then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t2. Srl_Group "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"else"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"t1. Srl_Group "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"end  as [Srl_Group],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t1"& _ 
                ".[رفع نشده],0) as [رفع نشده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(t2.[رفع شده] ,0)as [رفع شده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(ISNU"& _ 
                "LL(t1.[رفع نشده],0) +ISNULL(t2.[رفع شده] ,0),0) as [کل]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select ISnull("& _ 
                "Srl_Pm_Group,-1)as Srl_Group,COUNT(*) as [رفع شده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFormMaster "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" wh"& _ 
                "ere not( EibFixDate  IS null) AND EibFixDate <> ''  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  AND  (OriginalEibFormDat"& _ 
                "e>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFor"& _ 
                "mToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster.Srl not in (select Srl_P"& _ 
                "m_EibFormMasterPeiro  from Pm_EibFormPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" group by Srl_"& _ 
                "Pm_Group  )as t2 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" FULL outer join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select ISNULL(Srl_Pm_Group,-1)as Srl_Group"& _ 
                ",COUNT(*)as [رفع نشده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_EibFormMaster "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" where  (EibFixDate  IS null OR"& _ 
                " EibFixDate='' )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  AND  (OriginalEibFormDate>=@EibFormFromDate OR @EibFormFromD"& _ 
                "ate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@EibFormToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"& _ 
                "( (Pm_EibFormMaster.Srl not in (select Srl_Pm_EibFormMasterPeiro  from Pm_EibFor"& _ 
                "mPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  group by Srl_Pm_Group  ) as t1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ON t1.Srl_Gro"& _ 
                "up  = t2.Srl_Group)as t3  LEFT JOIN Pm_Group"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ON Pm_Group.Srl = t3.Srl_Group "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                " LEFT Outer JOIN Pm_Vahed On Pm_Vahed.Srl = Pm_Group.Srl_Pm_Vahed"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Left outer J"& _ 
                "OIN Pm_GroupMember ON Pm_GroupMember.Srl_Pm_Group = "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Pm_Group.Srl and Pm_Group"& _ 
                "Member.IsPrimary = 1 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" left outer join Pm_Ashkhas ON Pm_Ashkhas.Srl = "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Pm_Gro"& _ 
                "upMember.Srl_Acc_Ashkhas  "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShowPeiro", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_CompareGroupEibFormDataTable, ByVal EibFormFromDate As String, ByVal EibFormToDate As String, ByVal ShowPeiro As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(EibFormToDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ShowPeiro,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal EibFormFromDate As String, ByVal EibFormToDate As String, ByVal ShowPeiro As String) As Ds_Rp.Rp_CompareGroupEibFormDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EibFormFromDate,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(EibFormToDate,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ShowPeiro,String)
            End If
            Dim dataTable As Ds_Rp.Rp_CompareGroupEibFormDataTable = New Ds_Rp.Rp_CompareGroupEibFormDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_WorkFormWorkDisTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_WorkFormWorkDis"
            tableMapping.ColumnMappings.Add("مجموع", "مجموع")
            tableMapping.ColumnMappings.Add("موضوع کار", "موضوع کار")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CAST(SUM(CONVERT(int, SUBSTRING(Pm_WorkFrom_Detail_1.SatKAr, 1, 2)) * "& _ 
                "60 + CONVERT(int, SUBSTRING(Pm_WorkFrom_Detail_1.SatKAr, 4, 2))) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         / 60 AS nvarchar(50)) + ':' + CAST(SUM(CONVERT(int, SUBSTRING(Pm_WorkFr"& _ 
                "om_Detail_1.SatKAr, 1, 2)) * 60 + CONVERT(int, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SUBSTRING"& _ 
                "(Pm_WorkFrom_Detail_1.SatKAr, 4, 2))) % 60 AS nvarchar(50)) AS مجموع, dbo.Pm_Wor"& _ 
                "kDis.Name AS [موضوع کار]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         dbo.Pm_WorkFrom_Detail AS Pm_WorkFrom_Det"& _ 
                "ail_1 INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkDis ON Pm_WorkFrom_Detail_1.S"& _ 
                "rl_Pm_WorkDis = dbo.Pm_WorkDis.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Pm_WorkFrom_Detail_1.Srl_Pm_Ash"& _ 
                "khas = @Srl_Pm_Ashkhas or @Srl_Pm_Ashkhas=-1)AND  (WorkFormTarikh >=@BeginDate O"& _ 
                "R @BeginDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (WorkFormTarikh <=@EndDate OR @EndDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY d"& _ 
                "bo.Pm_WorkDis.Name"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "WorkFormTarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "WorkFormTarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_WorkFormWorkDisDataTable, ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EndDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(BeginDate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EndDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EndDate As String) As Ds_Rp.Rp_WorkFormWorkDisDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(BeginDate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EndDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_WorkFormWorkDisDataTable = New Ds_Rp.Rp_WorkFormWorkDisDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_NafarSatProjectTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_NafarSatProject"
            tableMapping.ColumnMappings.Add("نام پروژه", "نام پروژه")
            tableMapping.ColumnMappings.Add("جمع ساعت کار", "جمع ساعت کار")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SUM(CONVERT(int, DATEDIFF(Minute, '0:00:00', CONVERT(time(0), Pm_W"& _ 
                "orkFrom_Detail.SatKAr)))) / 60  as 'جمع ساعت کار' , dbo.Pm_HazineCode.Sharh as '"& _ 
                "نام پروژه'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         dbo.Pm_WorkForm_Master INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  dbo.Pm_WorkFrom_Detail ON dbo.Pm_WorkForm_Master.Srl = dbo.Pm_WorkFrom_Detail."& _ 
                "Srl_Pm_WorkForm_Master INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode ON db"& _ 
                "o.Pm_WorkForm_Master.Srl_HazineCode = dbo.Pm_HazineCode.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(dbo.Pm"& _ 
                "_WorkForm_Master.WorkFormTarikh >= @TarikhFromDate or @TarikhFromDate='-1')  AND"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(dbo.Pm_WorkForm_Master.WorkFormTarikh <= @TarikhToDate or @TarikhToDate='-1'"& _ 
                ") AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(dbo.Pm_WorkForm_Master.Srl_HazineCode = @Srl_HazineCode or @Srl_HazineC"& _ 
                "ode =-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY dbo.Pm_HazineCode.Sharh, dbo.Pm_WorkForm_Master.Srl_HazineCod"& _ 
                "e"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhFromDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "WorkFormTarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TarikhToDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "WorkFormTarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_NafarSatProjectDataTable, ByVal TarikhFromDate As String, ByVal TarikhToDate As String, ByVal Srl_HazineCode As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (TarikhFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TarikhFromDate,String)
            End If
            If (TarikhToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TarikhToDate,String)
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal TarikhFromDate As String, ByVal TarikhToDate As String, ByVal Srl_HazineCode As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_NafarSatProjectDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (TarikhFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TarikhFromDate,String)
            End If
            If (TarikhToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TarikhToDate,String)
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_NafarSatProjectDataTable = New Ds_Rp.Rp_NafarSatProjectDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_KholaseWorkFormTmpTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_KholaseWorkFormTmp"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ فرم کار", "تاریخ فرم کار")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("اضافه کار تردد", "اضافه کار تردد")
            tableMapping.ColumnMappings.Add("ساعت شروع", "ساعت شروع")
            tableMapping.ColumnMappings.Add("ساعت پایان", "ساعت پایان")
            tableMapping.ColumnMappings.Add("جمع اضافه کار", "جمع اضافه کار")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     dbo.Pm_WorkForm_Master.Srl, dbo.Pm_WorkForm_Master.WorkFormNo AS [شمار"& _ 
                "ه فرم کار], dbo.Pm_WorkForm_Master.WorkFormTarikh AS [تاریخ فرم کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              dbo.Pm_Post.Name AS [محل فعالیت], dbo.Pm_WorkForm_Master.BeginWork"& _ 
                "Sat AS [ساعت شروع], dbo.Pm_WorkForm_Master.EndWorkSat AS [ساعت پایان], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               a.SumEzafeKAr AS [جمع اضافه کار], a.SumEzafeKarTaradod AS [اضافه "& _ 
                "کار تردد]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         (SELECT     CAST(SUM(CONVERT(int, SUBSTRING(EzafeKAr, 1,"& _ 
                " 2)) * 60 + CONVERT(int, SUBSTRING(EzafeKAr, 4, 2))) / 60 AS nvarchar(50)) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                           + ':' + CAST(SUM(CONVERT(int, SUBSTRI"& _ 
                "NG(EzafeKAr, 1, 2)) * 60 + CONVERT(int, SUBSTRING(EzafeKAr, 4, 2))) % 60 AS nvar"& _ 
                "char(50)) AS SumEzafeKAr, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              CAST(S"& _ 
                "UM(CONVERT(int, SUBSTRING(EzafeKarTaradod, 1, 2)) * 60 + CONVERT(int, SUBSTRING("& _ 
                "EzafeKarTaradod, 4, 2))) / 60 AS nvarchar(50)) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               "& _ 
                "               + ':' + CAST(SUM(CONVERT(int, SUBSTRING(EzafeKarTaradod, 1, 2)) *"& _ 
                " 60 + CONVERT(int, SUBSTRING(EzafeKarTaradod, 4, 2))) % 60 AS nvarchar(50)) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                            AS SumEzafeKarTaradod, Srl_Pm_WorkFo"& _ 
                "rm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        FROM         dbo.Pm_WorkFrom_Detail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                GROUP BY Srl_Pm_WorkForm_Master) AS a INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "        dbo.Pm_WorkForm_Master ON a.Srl_Pm_WorkForm_Master = dbo.Pm_WorkForm_Mas"& _ 
                "ter.Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post ON dbo.Pm_WorkForm_Ma"& _ 
                "ster.Srl_Pm_Post_From = dbo.Pm_Post.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_"& _ 
                "Pm_Post_From = @Srl_Pm_Post_From or @Srl_Pm_Post_From=-1)  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Ma"& _ 
                "ster.Srl_Pm_Post_To = @Srl_Pm_Post_To or @Srl_Pm_Post_To=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_"& _ 
                "Master.Srl_Pm_Group = @Srl_Pm_Group or @Srl_Pm_Group=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Mast"& _ 
                "er.Srl_Pm_Vahed = @Srl_Pm_Vahed or @Srl_Pm_Vahed=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.S"& _ 
                "rl_Pm_WorkDis = @Srl_Pm_WorkDis or @Srl_Pm_WorkDis=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master"& _ 
                ".Srl_HazineCode = @Srl_HazineCode or @Srl_HazineCode=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Mast"& _ 
                "er.No = @No or @No=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh >= @BeginDate or @BeginD"& _ 
                "ate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh <= @EbdDate or @EbdDate='-1') AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(P"& _ 
                "m_WorkForm_Master.Srl_Pm_Ashkhas_Sarparast=@Srl_Pm_Ashkhas_Sarparast or @Srl_Pm_"& _ 
                "Ashkhas_Sarparast=-1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "Tarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "Tarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas_Sarparast", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas_Sarparast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_KholaseWorkFormTmpDataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_KholaseWorkFormTmpDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_KholaseWorkFormTmpDataTable = New Ds_Rp.Rp_KholaseWorkFormTmpDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_SaghfeKarTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_SaghfeKar"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("سقف اضاقه کار", "سقف اضاقه کار")
            tableMapping.ColumnMappings.Add("نفر ساعت", "نفر ساعت")
            tableMapping.ColumnMappings.Add("اضافه کار", "اضافه کار")
            tableMapping.ColumnMappings.Add("اضافه کار تردد", "اضافه کار تردد")
            tableMapping.ColumnMappings.Add("عضو گروه", "عضو گروه")
            tableMapping.ColumnMappings.Add("نام گروه", "نام گروه")
            tableMapping.ColumnMappings.Add("روز هفته", "روز هفته")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     dbo.Pm_WorkForm_Master.Srl, dbo.Pm_WorkForm_Master.No AS [شماره فرم کا"& _ 
                "ر], dbo.Pm_WorkForm_Master.WorkFormTarikh AS تاریخ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo."& _ 
                "Pm_WorkFrom_Detail.MazadEzafeKar AS [سقف اضاقه کار], dbo.Pm_WorkFrom_Detail.SatK"& _ 
                "Ar AS [نفر ساعت], dbo.Pm_WorkFrom_Detail.EzafeKAr AS [اضافه کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "          dbo.Pm_WorkFrom_Detail.EzafeKarTaradod AS [اضافه کار تردد], dbo.Pm_Ash"& _ 
                "khas.Name + ' ' + dbo.Pm_Ashkhas.Family AS [عضو گروه], dbo.Pm_Group.Name AS [نام"& _ 
                " گروه],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       ISNULL(dbo.Hafte.text, 'ثبت نشده') AS [روز هفته]"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         dbo.Pm_WorkForm_Master INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_W"& _ 
                "orkFrom_Detail ON dbo.Pm_WorkForm_Master.Srl = dbo.Pm_WorkFrom_Detail.Srl_Pm_Wor"& _ 
                "kForm_Master LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group ON dbo.Pm_WorkF"& _ 
                "rom_Detail.Srl_Pm_Group = dbo.Pm_Group.Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  dbo.Pm_WorkDis ON dbo.Pm_WorkFrom_Detail.Srl_Pm_WorkDis = dbo.Pm_WorkDis.Srl L"& _ 
                "EFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Hafte ON dbo.Pm_WorkForm_Master.srl_da"& _ 
                "yofweek = dbo.Hafte.srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas ON"& _ 
                " dbo.Pm_WorkFrom_Detail.Srl_Pm_Ashkhas = dbo.Pm_Ashkhas.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (dbo.Pm_W"& _ 
                "orkFrom_Detail.Srl_Pm_Ashkhas = @Srl_Pm_Ashkhas  OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      @Srl_"& _ 
                "Pm_Ashkhas = - 1) AND  (dbo.Pm_WorkForm_Master.WorkFormTarikh >=@BeginDate OR @B"& _ 
                "eginDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (dbo.Pm_WorkForm_Master.WorkFormTarikh <=@EndDate OR @EndDat"& _ 
                "e='-1')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_SaghfeKarDataTable, ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EndDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(BeginDate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EndDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EndDate As String) As Ds_Rp.Rp_SaghfeKarDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(BeginDate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(EndDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_SaghfeKarDataTable = New Ds_Rp.Rp_SaghfeKarDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_SaghfKarTotalTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_SaghfKarTotal"
            tableMapping.ColumnMappings.Add("کد پرسنلی", "کد پرسنلی")
            tableMapping.ColumnMappings.Add("نام و نام خانوادگی", "نام و نام خانوادگی")
            tableMapping.ColumnMappings.Add("مجموع ساعت کار", "مجموع ساعت کار")
            tableMapping.ColumnMappings.Add("مجموع اضافه کار", "مجموع اضافه کار")
            tableMapping.ColumnMappings.Add("مجموع اضافه کار تردد", "مجموع اضافه کار تردد")
            tableMapping.ColumnMappings.Add("مجموع سقف کار", "مجموع سقف کار")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     dbo.Pm_Ashkhas.PersonalCode AS [کد پرسنلی], dbo.Pm_Ashkhas.Name + ' ' "& _ 
                "+ dbo.Pm_Ashkhas.Family AS [نام و نام خانوادگی], satkar.[مجموع ساعت کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                  ezafekar.[مجموع اضافه کار], taradod.[مجموع اضافه کار تردد], sa"& _ 
                "ghfkar.[مجموع سقف کار]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         (SELECT     CAST(F / 60 AS nvarchar(50)) + "& _ 
                "':' + CAST(F % 60 AS nvarchar(50)) AS [مجموع اضافه کار], Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                 FROM         (SELECT     SUM(CONVERT(int, SUBSTRING(EzafeKAr, 1"& _ 
                ", 2)) * 60 + CONVERT(int, SUBSTRING(EzafeKAr, 4, 2))) AS F, Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                            FROM         dbo.Pm_WorkFrom_Detail "& _ 
                "AS Pm_WorkFrom_Detail_2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                WHERE  "& _ 
                "   (WorkFormTarikh >= @begin) AND (WorkFormTarikh <= @end)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "                            GROUP BY Srl_Pm_Ashkhas) AS a_2) AS ezafekar INNER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (SELECT     CAST(F / 60 AS nvarchar(50)) + ':' + "& _ 
                "CAST(F % 60 AS nvarchar(50)) AS [مجموع اضافه کار تردد], Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                     FROM         (SELECT     SUM(CONVERT(int, SUBSTRING(EzafeKa"& _ 
                "rTaradod, 1, 2)) * 60 + CONVERT(int, SUBSTRING(EzafeKarTaradod, 4, 2))) AS F, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                                                                           Srl_P"& _ 
                "m_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     FROM         dbo"& _ 
                ".Pm_WorkFrom_Detail AS Pm_WorkFrom_Detail_3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                  WHERE     (WorkFormTarikh >= @begin) AND (WorkFormTarikh <= @e"& _ 
                "nd)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     GROUP BY Srl_Pm_Ashkha"& _ 
                "s) AS a_3) AS taradod INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (SELECT     CAST(F /"& _ 
                " 60 AS nvarchar(50)) + ':' + CAST(F % 60 AS nvarchar(50)) AS [مجموع سقف کار], Sr"& _ 
                "l_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             FROM         (SELECT     SUM(CONVERT("& _ 
                "int, SUBSTRING(MazadEzafeKar, 1, 2)) * 60 + CONVERT(int, SUBSTRING(MazadEzafeKar"& _ 
                ", 4, 2))) AS F, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                              "& _ 
                "             Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   "& _ 
                "  FROM         dbo.Pm_WorkFrom_Detail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            WHERE     (WorkFormTarikh >= @begin) AND (WorkFormTarikh <= @end)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                    GROUP BY Srl_Pm_Ashkhas) AS "& _ 
                "a) AS saghfkar INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas ON saghfkar.Srl_"& _ 
                "Pm_Ashkhas = dbo.Pm_Ashkhas.Srl ON taradod.Srl_Pm_Ashkhas = dbo.Pm_Ashkhas.Srl O"& _ 
                "N "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ezafekar.Srl_Pm_Ashkhas = dbo.Pm_Ashkhas.Srl INNER JOI"& _ 
                "N"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (SELECT     CAST(F / 60 AS nvarchar(50)) + ':' + CA"& _ 
                "ST(F % 60 AS nvarchar(50)) AS [مجموع ساعت کار], Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "             FROM         (SELECT     SUM(CONVERT(int, SUBSTRING(SatKAr, 1, 2)) "& _ 
                "* 60 + CONVERT(int, SUBSTRING(SatKAr, 4, 2))) AS F, Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                                         FROM         dbo.Pm_WorkFrom_Detail AS "& _ 
                "Pm_WorkFrom_Detail_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     WHERE"& _ 
                "     (WorkFormTarikh >= @begin) AND (WorkFormTarikh <= @end)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "                                   GROUP BY Srl_Pm_Ashkhas) AS a_1) AS satkar ON"& _ 
                " dbo.Pm_Ashkhas.Srl = satkar.Srl_Pm_Ashkhas"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@begin", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@end", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_SaghfKarTotalDataTable, ByVal begin As String, ByVal _end As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (begin Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(begin,String)
            End If
            If (_end Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(_end,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal begin As String, ByVal _end As String) As Ds_Rp.Rp_SaghfKarTotalDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (begin Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(begin,String)
            End If
            If (_end Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(_end,String)
            End If
            Dim dataTable As Ds_Rp.Rp_SaghfKarTotalDataTable = New Ds_Rp.Rp_SaghfKarTotalDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_WorkFormMasterWithTEMPTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_WorkFormMasterWithTEMP"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("واحد", "واحد")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ فرم کار", "تاریخ فرم کار")
            tableMapping.ColumnMappings.Add("سرپرست", "سرپرست")
            tableMapping.ColumnMappings.Add("مبدا", "مبدا")
            tableMapping.ColumnMappings.Add("مقصد", "مقصد")
            tableMapping.ColumnMappings.Add("گروه", "گروه")
            tableMapping.ColumnMappings.Add("توضیح کار", "توضیح کار")
            tableMapping.ColumnMappings.Add("نام پروژه", "نام پروژه")
            tableMapping.ColumnMappings.Add("شرح کار", "شرح کار")
            tableMapping.ColumnMappings.Add("تعداد نفرات", "تعداد نفرات")
            tableMapping.ColumnMappings.Add("نفر ساعت", "نفر ساعت")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT    distinct dbo.Pm_WorkForm_Master.Srl, dbo.Pm_WorkForm_Master.No AS شماره"& _ 
                ", dbo.Pm_WorkForm_Master.Tarikh AS تاریخ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkFor"& _ 
                "m_Master.WorkFormNo AS [شماره فرم کار], dbo.Pm_WorkForm_Master.WorkFormTarikh AS"& _ 
                " [تاریخ فرم کار], dbo.Pm_Ashkhas.Name + ' ' + dbo.Pm_Ashkhas.Family AS سرپرست, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post.Name AS مبدا, Pm_Post_1.Name AS مقصد, dbo.Pm_"& _ 
                "Group.Name AS گروه, dbo.Pm_Vahed.Name AS واحد, dbo.Pm_WorkDis.Name AS [توضیح کار"& _ 
                "], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode.Code AS [کد هزینه], dbo.Pm_HazineCo"& _ 
                "de.Sharh AS [نام پروژه], dbo.Pm_WorkForm_Master.Dis AS [شرح کار], ISNULL(AShkhas"& _ 
                "Count.CountAshkhs, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      0) AS [تعداد نفرات], SumSatKar.sumSat"& _ 
                "KAr AS [نفر ساعت]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         (SELECT     COUNT(Srl) AS CountAshkhs, Srl_Pm_Wo"& _ 
                "rkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        FROM         dbo.Pm_WorkFrom_Detail AS Pm"& _ 
                "_WorkFrom_Detail_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        GROUP BY Srl_Pm_WorkForm_Master) AS "& _ 
                "AShkhasCount RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (SELECT     CONVERT(nva"& _ 
                "rchar, SUM(CONVERT(int, DATEDIFF(Minute, '0:00:00', CONVERT(time(0), SatKAr)))) "& _ 
                "/ 60) + ':' + CONVERT(nvarchar, SUM(CONVERT(int, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             "& _ 
                "                      DATEDIFF(Minute, '0:00:00', CONVERT(time(0), SatKAr)))) % "& _ 
                "60) AS sumSatKAr, Srl_Pm_WorkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             FROM     "& _ 
                "    dbo.Pm_WorkFrom_Detail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             GROUP BY Srl_Pm_WorkFor"& _ 
                "m_Master) AS SumSatKar INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master "& _ 
                "INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas ON dbo.Pm_WorkForm_Master.Srl_P"& _ 
                "m_Ashkhas_Sarparast = dbo.Pm_Ashkhas.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.P"& _ 
                "m_Post ON dbo.Pm_WorkForm_Master.Srl_Pm_Post_From = dbo.Pm_Post.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                      dbo.Pm_Post AS Pm_Post_1 ON dbo.Pm_WorkForm_Master.Srl_Pm_"& _ 
                "Post_To = Pm_Post_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group ON dbo.Pm"& _ 
                "_WorkForm_Master.Srl_Pm_Group = dbo.Pm_Group.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "   dbo.Pm_WorkDis ON dbo.Pm_WorkForm_Master.Srl_Pm_WorkDis = dbo.Pm_WorkDis.Srl "& _ 
                "INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Vahed ON dbo.Pm_WorkForm_Master.Srl_Pm_"& _ 
                "Vahed = dbo.Pm_Vahed.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode ON "& _ 
                "dbo.Pm_WorkForm_Master.Srl_HazineCode = dbo.Pm_HazineCode.Srl ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         SumSatKar.Srl_Pm_WorkForm_Master = dbo.Pm_WorkForm_Master.Srl ON AShkha"& _ 
                "sCount.Srl_Pm_WorkForm_Master = dbo.Pm_WorkForm_Master.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_W"& _ 
                "orkForm_Master.Srl_Pm_Post_From = @Srl_Pm_Post_From or @Srl_Pm_Post_From=-1)  AN"& _ 
                "D "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Post_To = @Srl_Pm_Post_To or @Srl_Pm_Post_To=-1) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Group = @Srl_Pm_Group or @Srl_Pm_Group=-1) AND "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Vahed = @Srl_Pm_Vahed or @Srl_Pm_Vahed=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(P"& _ 
                "m_WorkForm_Master.Srl_Pm_WorkDis = @Srl_Pm_WorkDis or @Srl_Pm_WorkDis=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "(Pm_WorkForm_Master.Srl_HazineCode = @Srl_HazineCode or @Srl_HazineCode=-1) AND "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.No = @No or @No=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh >= @B"& _ 
                "eginDate or @BeginDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh <= @EbdDate or @Eb"& _ 
                "dDate='-1') AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Ashkhas_Sarparast=@Srl_Pm_Ashkhas_Sa"& _ 
                "rparast or @Srl_Pm_Ashkhas_Sarparast=-1)  AND (dbo.Pm_WorkForm_Master.srl_dayofw"& _ 
                "eek = @srl_dayofweek or @srl_dayofweek=-1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas_Sarparast", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas_Sarparast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@srl_dayofweek", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "srl_dayofweek", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     dbo.Pm_WorkForm_Master.Srl, dbo.Pm_WorkForm_Master.No AS شماره, dbo.Pm"& _ 
                "_WorkForm_Master.Tarikh AS تاریخ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master"& _ 
                ".WorkFormNo AS [شماره فرم کار], dbo.Pm_WorkForm_Master.WorkFormTarikh AS [تاریخ "& _ 
                "فرم کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas.Name + ' ' + dbo.Pm_Ashkhas.Fam"& _ 
                "ily AS سرپرست, dbo.Pm_Post.Name AS مبدا, Pm_Post_1.Name AS مقصد, dbo.Pm_Group.Na"& _ 
                "me AS گروه, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Vahed.Name AS واحد, dbo.Pm_WorkDis.Na"& _ 
                "me AS [توضیح کار], dbo.Pm_HazineCode.Code AS [کد هزینه], dbo.Pm_HazineCode.Sharh"& _ 
                " AS [نام پروژه], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master.Dis AS [شرح کار]"& _ 
                ", ISNULL(AShkhasCount.CountAshkhs, 0) AS [تعداد نفرات], SumSatKar.sumSatKAr AS ["& _ 
                "نفر ساعت]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         dbo.Pm_Vahed RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo"& _ 
                ".Pm_HazineCode RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post ON dbo.Pm_WorkForm_Master.Srl_Pm_Pos"& _ 
                "t_From = dbo.Pm_Post.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post AS Pm_Pos"& _ 
                "t_1 ON dbo.Pm_WorkForm_Master.Srl_Pm_Post_To = Pm_Post_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                   (SELECT     CONVERT(nvarchar, SUM(CONVERT(int, DATEDIFF(Minut"& _ 
                "e, '0:00:00', CONVERT(time(0), SatKAr)))) / 60) + ':' + CONVERT(nvarchar, SUM(CO"& _ 
                "NVERT(int, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   DATEDIFF(Minute,"& _ 
                " '0:00:00', CONVERT(time(0), SatKAr)))) % 60) AS sumSatKAr, Srl_Pm_WorkForm_Mast"& _ 
                "er"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             FROM         dbo.Pm_WorkFrom_Detail AS Pm_WorkF"& _ 
                "rom_Detail_2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             GROUP BY Srl_Pm_WorkForm_Master) AS S"& _ 
                "umSatKar ON dbo.Pm_WorkForm_Master.Srl = SumSatKar.Srl_Pm_WorkForm_Master LEFT O"& _ 
                "UTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas ON dbo.Pm_WorkForm_Master.Srl_Pm"& _ 
                "_Ashkhas_Sarparast = dbo.Pm_Ashkhas.Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      d"& _ 
                "bo.Pm_WorkDis ON dbo.Pm_WorkForm_Master.Srl_Pm_WorkDis = dbo.Pm_WorkDis.Srl LEFT"& _ 
                " OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group ON dbo.Pm_WorkForm_Master.Srl_Pm"& _ 
                "_Group = dbo.Pm_Group.Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkFrom"& _ 
                "_Detail ON dbo.Pm_WorkForm_Master.Srl = dbo.Pm_WorkFrom_Detail.Srl_Pm_WorkForm_M"& _ 
                "aster ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode.Srl = dbo.Pm_WorkForm_Master."& _ 
                "Srl_HazineCode ON dbo.Pm_Vahed.Srl = dbo.Pm_WorkForm_Master.Srl_Pm_Vahed LEFT OU"& _ 
                "TER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (SELECT     COUNT(Srl) AS CountAshkhs, Srl_P"& _ 
                "m_WorkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             FROM         dbo.Pm_WorkFrom_Det"& _ 
                "ail AS Pm_WorkFrom_Detail_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             GROUP BY Srl_Pm_WorkFo"& _ 
                "rm_Master) AS AShkhasCount ON dbo.Pm_WorkForm_Master.Srl = AShkhasCount.Srl_Pm_W"& _ 
                "orkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Post_From = @Srl_Pm_Po"& _ 
                "st_From or @Srl_Pm_Post_From=-1)  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Post_To = @Sr"& _ 
                "l_Pm_Post_To or @Srl_Pm_Post_To=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Group = @Sr"& _ 
                "l_Pm_Group or @Srl_Pm_Group=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Vahed = @Srl_Pm"& _ 
                "_Vahed or @Srl_Pm_Vahed=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_WorkDis = @Srl_Pm_W"& _ 
                "orkDis or @Srl_Pm_WorkDis=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_HazineCode = @Srl_Ha"& _ 
                "zineCode or @Srl_HazineCode=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.No = @No or @No=-1) AN"& _ 
                "D "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh >= @BeginDate or @BeginDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkF"& _ 
                "orm_Master.Tarikh <= @EbdDate or @EbdDate='-1') AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_"& _ 
                "Ashkhas_Sarparast=@Srl_Pm_Ashkhas_Sarparast or @Srl_Pm_Ashkhas_Sarparast=-1)  AN"& _ 
                "D (dbo.Pm_WorkForm_Master.srl_dayofweek = @srl_dayofweek or @srl_dayofweek=-1) A"& _ 
                "nd (dbo.Pm_WorkFrom_Detail.Srl_Pm_Ashkhas = @Srl_Pm_Ashkhas)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas_Sarparast", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas_Sarparast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@srl_dayofweek", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "srl_dayofweek", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_WorkFormMasterWithTEMPDataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_WorkFormMasterWithTEMPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_WorkFormMasterWithTEMPDataTable = New Ds_Rp.Rp_WorkFormMasterWithTEMPDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByAshkhas(ByVal dataTable As Ds_Rp.Rp_WorkFormMasterWithTEMPDataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByAshkhas(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_WorkFormMasterWithTEMPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_WorkFormMasterWithTEMPDataTable = New Ds_Rp.Rp_WorkFormMasterWithTEMPDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_WorkFormMasterTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_WorkFormMaster"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ فرم کار", "تاریخ فرم کار")
            tableMapping.ColumnMappings.Add("عضو", "عضو")
            tableMapping.ColumnMappings.Add("سرپرست", "سرپرست")
            tableMapping.ColumnMappings.Add("مبدا", "مبدا")
            tableMapping.ColumnMappings.Add("مقصد", "مقصد")
            tableMapping.ColumnMappings.Add("گروه", "گروه")
            tableMapping.ColumnMappings.Add("واحد", "واحد")
            tableMapping.ColumnMappings.Add("توضیح کار", "توضیح کار")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("نام پروژه", "نام پروژه")
            tableMapping.ColumnMappings.Add("شرح کار", "شرح کار")
            tableMapping.ColumnMappings.Add("Srl_Pm_Ashkhas_Sarparast", "Srl_Pm_Ashkhas_Sarparast")
            tableMapping.ColumnMappings.Add("اعضا", "اعضا")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     TOP (100) PERCENT dbo.Pm_WorkForm_Master.Srl, dbo.Pm_WorkForm_Master.N"& _ 
                "o AS شماره, dbo.Pm_WorkForm_Master.Tarikh AS تاریخ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo."& _ 
                "Pm_WorkForm_Master.WorkFormNo AS [شماره فرم کار], dbo.Pm_WorkForm_Master.WorkFor"& _ 
                "mTarikh AS [تاریخ فرم کار], Pm_WorkFormDetails.عضو, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ISNU"& _ 
                "LL(dbo.Pm_Ashkhas.Name, '') + ' ' + ISNULL(dbo.Pm_Ashkhas.Family, '') AS سرپرست,"& _ 
                " dbo.Pm_Post.Name AS مبدا, Pm_Post_1.Name AS مقصد, dbo.GetWrokFormGroupOzv(dbo.P"& _ 
                "m_WorkForm_Master.Srl) AS [اعضا],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group.Name AS گر"& _ 
                "وه, dbo.Pm_Vahed.Name AS واحد, ISNULL(dbo.Pm_WorkDis.Name, 'ثبت نشده') AS [توضیح"& _ 
                " کار], dbo.Pm_HazineCode.Code AS [کد هزینه], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Hazi"& _ 
                "neCode.Sharh AS [نام پروژه], dbo.Pm_WorkForm_Master.Dis AS [شرح کار], dbo.Pm_Wor"& _ 
                "kForm_Master.Srl_Pm_Ashkhas_Sarparast"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         dbo.Pm_HazineCode RIGHT OUTE"& _ 
                "R JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkDis RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     dbo.Pm_WorkForm_Master INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post ON dbo"& _ 
                ".Pm_WorkForm_Master.Srl_Pm_Post_From = dbo.Pm_Post.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         dbo.Pm_Post AS Pm_Post_1 ON dbo.Pm_WorkForm_Master.Srl_Pm_Post_To = Pm_"& _ 
                "Post_1.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (SELECT     dbo.Pm_WorkFrom_Det"& _ 
                "ail.Srl_Pm_WorkForm_Master, dbo.Pm_WorkFrom_Detail.Srl_Pm_Ashkhas, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                        Pm_Ashkhas_1.Name + ' ' + Pm_Ashkhas_1.F"& _ 
                "amily AS عضو"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             FROM         dbo.Pm_Ashkhas AS Pm_Ash"& _ 
                "khas_1 INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   dbo.Pm_Wor"& _ 
                "kFrom_Detail ON Pm_Ashkhas_1.Srl = dbo.Pm_WorkFrom_Detail.Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                       WHERE     (dbo.Pm_WorkFrom_Detail.Srl_Pm_Ashkhas = @Srl_P"& _ 
                "m_Ashkhas or "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             @Srl_Pm_Ashkhas=-1)) AS Pm_WorkFormD"& _ 
                "etails ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master.Srl = Pm_WorkFormDetail"& _ 
                "s.Srl_Pm_WorkForm_Master LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas O"& _ 
                "N dbo.Pm_WorkForm_Master.Srl_Pm_Ashkhas_Sarparast = dbo.Pm_Ashkhas.Srl ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                  dbo.Pm_WorkDis.Srl = dbo.Pm_WorkForm_Master.Srl_Pm_WorkDis LEF"& _ 
                "T OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group ON dbo.Pm_WorkForm_Master.Srl_P"& _ 
                "m_Group = dbo.Pm_Group.Srl ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode.Srl = db"& _ 
                "o.Pm_WorkForm_Master.Srl_HazineCode LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.P"& _ 
                "m_Vahed ON dbo.Pm_WorkForm_Master.Srl_Pm_Vahed = dbo.Pm_Vahed.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" WHERE       "& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Post_From = @Srl_Pm_Post_From or @Srl_Pm_Post_From"& _ 
                "=-1)  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Post_To = @Srl_Pm_Post_To or @Srl_Pm_Post"& _ 
                "_To=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Group = @Srl_Pm_Group or @Srl_Pm_Group="& _ 
                "-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Vahed = @Srl_Pm_Vahed or @Srl_Pm_Vahed=-1) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_WorkDis = @Srl_Pm_WorkDis or @Srl_Pm_WorkDis=-1"& _ 
                ") AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_HazineCode = @Srl_HazineCode or @Srl_HazineCode="& _ 
                "-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.No = @No or @No=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tari"& _ 
                "kh >= @BeginDate or @BeginDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Tarikh <= @EbdDat"& _ 
                "e or @EbdDate='-1') AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Ashkhas_Sarparast=@Srl_Pm_As"& _ 
                "hkhas_Sarparast or "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"@Srl_Pm_Ashkhas_Sarparast=-1)  AND (dbo.Pm_WorkForm_Master."& _ 
                "srl_dayofweek = "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"@srl_dayofweek or @srl_dayofweek=-1) "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas_Sarparast", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas_Sarparast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@srl_dayofweek", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "srl_dayofweek", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_WorkFormMasterDataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Ashkhas As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_WorkFormMasterDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Srl_Pm_Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_WorkFormMasterDataTable = New Ds_Rp.Rp_WorkFormMasterDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_KholaseWorkFormTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_KholaseWorkForm"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ فرم کار", "تاریخ فرم کار")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("ساعت شروع", "ساعت شروع")
            tableMapping.ColumnMappings.Add("ساعت پایان", "ساعت پایان")
            tableMapping.ColumnMappings.Add("جمع اضافه کار", "جمع اضافه کار")
            tableMapping.ColumnMappings.Add("اضافه کار تردد", "اضافه کار تردد")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     dbo.Pm_WorkForm_Master.Srl,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"dbo.Pm_WorkForm_Master.No AS [شماره], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "dbo.Pm_WorkForm_Master.WorkFormNo AS [شماره فرم کار], dbo.Pm_WorkForm_Master.Wor"& _ 
                "kFormTarikh AS [تاریخ فرم کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post.Name AS [محل"& _ 
                " فعالیت], dbo.Pm_WorkForm_Master.BeginWorkSat AS [ساعت شروع], dbo.Pm_WorkForm_Ma"& _ 
                "ster.EndWorkSat AS [ساعت پایان], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      a.SumEzafeKAr AS [جمع ا"& _ 
                "ضافه کار], a.SumEzafeKarTaradod AS [اضافه کار تردد]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          (SELECT     C"& _ 
                "AST(SUM("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CONVERT(int, SUBSTRING(EzafeKAr, 0, CHARINDEX(':',EzafeKAr))) * 60 + C"& _ 
                "ONVERT(int, SUBSTRING(EzafeKAr,  CHARINDEX(':',EzafeKAr)+1,LEN(ezafekar)))) / 60"& _ 
                " AS nvarchar(50)) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"+ ':' + "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CAST(SUM(CONVERT(int, SUBSTRING(EzafeKAr, 0, CHARI"& _ 
                "NDEX(':',EzafeKAr))) * 60 + CONVERT(int, SUBSTRING(EzafeKAr, CHARINDEX(':',Ezafe"& _ 
                "KAr)+1, LEN(EzafeKAr)))) % 60 AS nvarchar(50)) AS SumEzafeKAr, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CAST(SUM(CONVER"& _ 
                "T(int, SUBSTRING(EzafeKarTaradod, 0, CHARINDEX(':',EzafeKarTaradod))) * 60 + CON"& _ 
                "VERT(int, SUBSTRING(EzafeKarTaradod, CHARINDEX(':',EzafeKarTaradod)+1 ,LEN(Ezafe"& _ 
                "KarTaradod)))) / 60 AS nvarchar(50)) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"+ ':' + CAST(SUM(CONVERT(int, SUBSTRING(E"& _ 
                "zafeKarTaradod, 0,  CHARINDEX(':',EzafeKarTaradod))) * 60 + CONVERT(int, SUBSTRI"& _ 
                "NG(EzafeKarTaradod, CHARINDEX(':',EzafeKarTaradod)+1 ,LEN(EzafeKarTaradod)))) % "& _ 
                "60 AS nvarchar(50)) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                      AS SumEzafeKarTarado"& _ 
                "d, Srl_Pm_WorkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        FROM         dbo.Pm_WorkFrom_"& _ 
                "Detail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        GROUP BY Srl_Pm_WorkForm_Master) AS a INNER JOIN"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master ON a.Srl_Pm_WorkForm_Master = dbo"& _ 
                ".Pm_WorkForm_Master.Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post ON db"& _ 
                "o.Pm_WorkForm_Master.Srl_Pm_Post_From = dbo.Pm_Post.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_Work"& _ 
                "Form_Master.Srl_Pm_Post_From = @Srl_Pm_Post_From or @Srl_Pm_Post_From=-1)  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Post_To = @Srl_Pm_Post_To or @Srl_Pm_Post_To=-1) AND"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Group = @Srl_Pm_Group or @Srl_Pm_Group=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"("& _ 
                "Pm_WorkForm_Master.Srl_Pm_Vahed = @Srl_Pm_Vahed or @Srl_Pm_Vahed=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_W"& _ 
                "orkForm_Master.Srl_Pm_WorkDis = @Srl_Pm_WorkDis or @Srl_Pm_WorkDis=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm"& _ 
                "_WorkForm_Master.Srl_HazineCode = @Srl_HazineCode or @Srl_HazineCode=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"("& _ 
                "Pm_WorkForm_Master.No = @No or @No=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.WorkFormTarikh "& _ 
                ">= @BeginDate or @BeginDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.WorkFormTarikh <= @E"& _ 
                "bdDate or @EbdDate='-1') AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Ashkhas_Sarparast=@Srl_"& _ 
                "Pm_Ashkhas_Sarparast or @Srl_Pm_Ashkhas_Sarparast=-1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ فرم کار", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ فرم کار", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas_Sarparast", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas_Sarparast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_KholaseWorkFormDataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_KholaseWorkFormDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_KholaseWorkFormDataTable = New Ds_Rp.Rp_KholaseWorkFormDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_ExtraWorkTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_ExtraWork"
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("نام فرد", "نام فرد")
            tableMapping.ColumnMappings.Add("کد شناسایی", "کد شناسایی")
            tableMapping.ColumnMappings.Add("فرم کار", "فرم کار")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("اضافه کار", "اضافه کار")
            tableMapping.ColumnMappings.Add("اضافه کار تردد", "اضافه کار تردد")
            tableMapping.ColumnMappings.Add("کسر کار", "کسر کار")
            tableMapping.ColumnMappings.Add("جمع اضافه کار", "جمع اضافه کار")
            tableMapping.ColumnMappings.Add("تعطیل", "تعطیل")
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("ماموریت", "ماموریت")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Rp_MultiEzafeKar"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Ashkhas", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fromdate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_ExtraWorkDataTable, ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Ds_Rp.Rp_ExtraWorkDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_ExtraWorkDataTable = New Ds_Rp.Rp_ExtraWorkDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_WorkFormMasterSearchTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_WorkFormMasterSearch"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("شماره فرم کار", "شماره فرم کار")
            tableMapping.ColumnMappings.Add("تاریخ فرم کار", "تاریخ فرم کار")
            tableMapping.ColumnMappings.Add("سرپرست", "سرپرست")
            tableMapping.ColumnMappings.Add("مبدا", "مبدا")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("اعضا", "اعضا")
            tableMapping.ColumnMappings.Add("گروه", "گروه")
            tableMapping.ColumnMappings.Add("واحد", "واحد")
            tableMapping.ColumnMappings.Add("توضیح کار", "توضیح کار")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("نام پروژه", "نام پروژه")
            tableMapping.ColumnMappings.Add("شرح کار", "شرح کار")
            tableMapping.ColumnMappings.Add("Srl_Pm_Ashkhas_Sarparast", "Srl_Pm_Ashkhas_Sarparast")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     TOP (100) PERCENT dbo.Pm_WorkForm_Master.Srl, dbo.Pm_WorkForm_Master.N"& _ 
                "o AS شماره, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkForm_Master.Tarikh AS تاریخ, dbo."& _ 
                "Pm_WorkForm_Master.WorkFormNo AS [شماره فرم کار], dbo.Pm_WorkForm_Master.WorkFor"& _ 
                "mTarikh AS [تاریخ فرم کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       ISNULL(dbo.Pm_Ashkhas.Name,"& _ 
                " '') + ' ' + ISNULL(dbo.Pm_Ashkhas.Family, '') AS سرپرست, dbo.Pm_Post.Name AS مب"& _ 
                "دا, Pm_Post_1.Name AS [محل فعالیت], dbo.GetWrokFormGroupOzv(dbo.Pm_WorkForm_Mast"& _ 
                "er.Srl) AS [اعضا],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Group.Name AS گروه, dbo.Pm_Vahe"& _ 
                "d.Name AS واحد, ISNULL(dbo.Pm_WorkDis.Name, 'ثبت نشده') AS [توضیح کار], dbo.Pm_H"& _ 
                "azineCode.Code AS [کد هزینه], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode.Sharh AS"& _ 
                " [نام پروژه], dbo.Pm_WorkForm_Master.WorkFormDis AS [شرح کار], dbo.Pm_WorkForm_M"& _ 
                "aster.Srl_Pm_Ashkhas_Sarparast"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         dbo.Pm_HazineCode RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_WorkDis RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      db"& _ 
                "o.Pm_WorkForm_Master INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Post ON dbo.Pm_Wor"& _ 
                "kForm_Master.Srl_Pm_Post_From = dbo.Pm_Post.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  dbo.Pm_Post AS Pm_Post_1 ON dbo.Pm_WorkForm_Master.Srl_Pm_Post_To = Pm_Post_1."& _ 
                "Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Ashkhas ON dbo.Pm_WorkForm_Mas"& _ 
                "ter.Srl_Pm_Ashkhas_Sarparast = dbo.Pm_Ashkhas.Srl ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo"& _ 
                ".Pm_WorkDis.Srl = dbo.Pm_WorkForm_Master.Srl_Pm_WorkDis LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               dbo.Pm_Group ON dbo.Pm_WorkForm_Master.Srl_Pm_Group = dbo.Pm_Grou"& _ 
                "p.Srl ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_HazineCode.Srl = dbo.Pm_WorkForm_Master."& _ 
                "Srl_HazineCode LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      dbo.Pm_Vahed ON dbo.Pm_Wor"& _ 
                "kForm_Master.Srl_Pm_Vahed = dbo.Pm_Vahed.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" WHERE        "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Maste"& _ 
                "r.Srl_Pm_Post_From = @Srl_Pm_Post_From or @Srl_Pm_Post_From=-1)  AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkF"& _ 
                "orm_Master.Srl_Pm_Post_To = @Srl_Pm_Post_To or @Srl_Pm_Post_To=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_Wor"& _ 
                "kForm_Master.Srl_Pm_Group = @Srl_Pm_Group or @Srl_Pm_Group=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkFor"& _ 
                "m_Master.Srl_Pm_Vahed = @Srl_Pm_Vahed or @Srl_Pm_Vahed=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Ma"& _ 
                "ster.Srl_Pm_WorkDis = @Srl_Pm_WorkDis or @Srl_Pm_WorkDis=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_"& _ 
                "Master.Srl_HazineCode = @Srl_HazineCode or @Srl_HazineCode=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkFor"& _ 
                "m_Master.No = @No or @No=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.WorkFormTarikh >= @BeginD"& _ 
                "ate or @BeginDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.WorkFormTarikh <= @EbdDate or "& _ 
                "@EbdDate='-1') AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkForm_Master.Srl_Pm_Ashkhas_Sarparast=@Srl_Pm_Ashkhas"& _ 
                "_Sarparast or "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"@Srl_Pm_Ashkhas_Sarparast=-1)  AND (dbo.Pm_WorkForm_Master.srl_d"& _ 
                "ayofweek = "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"@srl_dayofweek or @srl_dayofweek=-1) and  (dbo.Pm_WorkForm_Master.W"& _ 
                "orkFormDis like @WorkFormDis)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY dbo.Pm_WorkForm_Master.WorkFormTarikh "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_To", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_To", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_WorkDis", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_WorkDis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_HazineCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_HazineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ فرم کار", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ فرم کار", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Ashkhas_Sarparast", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas_Sarparast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@srl_dayofweek", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "srl_dayofweek", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WorkFormDis", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "شرح کار", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_WorkFormMasterSearchDataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer), ByVal WorkFormDis As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (WorkFormDis Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(WorkFormDis,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Post_To As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Pm_WorkDis As Global.System.Nullable(Of Integer), ByVal Srl_HazineCode As Global.System.Nullable(Of Integer), ByVal No As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Srl_Pm_Ashkhas_Sarparast As Global.System.Nullable(Of Integer), ByVal srl_dayofweek As Global.System.Nullable(Of Integer), ByVal WorkFormDis As String) As Ds_Rp.Rp_WorkFormMasterSearchDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Post_To.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Post_To.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_WorkDis.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Srl_Pm_WorkDis.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Srl_HazineCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_HazineCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (No.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(No.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EbdDate,String)
            End If
            If (Srl_Pm_Ashkhas_Sarparast.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Srl_Pm_Ashkhas_Sarparast.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (srl_dayofweek.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(srl_dayofweek.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (WorkFormDis Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(WorkFormDis,String)
            End If
            Dim dataTable As Ds_Rp.Rp_WorkFormMasterSearchDataTable = New Ds_Rp.Rp_WorkFormMasterSearchDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_MultiEzafeKarTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_MultiEzafeKar"
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام فرد", "نام فرد")
            tableMapping.ColumnMappings.Add("کد شناسایی", "کد شناسایی")
            tableMapping.ColumnMappings.Add("فرم کار", "فرم کار")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("اضافه کار", "اضافه کار")
            tableMapping.ColumnMappings.Add("اضافه کار تردد", "اضافه کار تردد")
            tableMapping.ColumnMappings.Add("کسر کار", "کسر کار")
            tableMapping.ColumnMappings.Add("جمع اضافه کار", "جمع اضافه کار")
            tableMapping.ColumnMappings.Add("تعطیل", "تعطیل")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Rp_MultiEzafeKar"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Ashkhas", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fromdate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_MultiEzafeKarDataTable, ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Ds_Rp.Rp_MultiEzafeKarDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_MultiEzafeKarDataTable = New Ds_Rp.Rp_MultiEzafeKarDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_ReleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Rele"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("مدل", "مدل")
            tableMapping.ColumnMappings.Add("تاریخ ساخت", "تاریخ ساخت")
            tableMapping.ColumnMappings.Add("تاریخ بهره برداری", "تاریخ بهره برداری")
            tableMapping.ColumnMappings.Add("شماره سریال", "شماره سریال")
            tableMapping.ColumnMappings.Add("کد دیسپاچینگ", "کد دیسپاچینگ")
            tableMapping.ColumnMappings.Add("نسبت CT", "نسبت CT")
            tableMapping.ColumnMappings.Add("نسبت VT", "نسبت VT")
            tableMapping.ColumnMappings.Add("کد سفارش", "کد سفارش")
            tableMapping.ColumnMappings.Add("سازنده", "سازنده")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Hadese_KhesaratDevice.Srl,Pm_Hadese_KhesaratDevice .Name as نام,Pm_Pos"& _ 
                "t.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"model as مدل , madedate as [تاریخ ساخت], UtilizationDate a"& _ 
                "s [تاریخ بهره برداری],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SerialNumber as [شماره سریال],DispatchingCode as [کد دیس"& _ 
                "پاچینگ], CT as [نسبت CT], VT as [نسبت VT],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"OrderCode as [کد سفارش],Pm_Device_Sa"& _ 
                "zande .Text as سازنده"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_Hadese_KhesaratDevice JOIN Pm_Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.s"& _ 
                "rl = Srl_Pm_Post Left JOIN Pm_Device_Sazande ON Srl_Pm_Device_Sazande = Pm_Devic"& _ 
                "e_Sazande .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_DescriptableTajhiz=1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_Hadese_KhesaratDevice."& _ 
                "name=@Name OR @Name='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(OrderCode = @OrderCode OR @OrderCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(C"& _ 
                "T = @CT OR  @CT='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(VT=@VT OR @VT = '')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Srl_Pm_Post  = @Post OR @P"& _ 
                "ost = -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Srl_Pm_Device_Sazande =@Sazande  OR @Sazande=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Model "& _ 
                "= @Model OR @Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(MadeDate>=@StartMadeDate OR @StartMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AN"& _ 
                "D"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(MadeDate<=@EndMadeDate OR @EndMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(UtilizationDate >= @StartU"& _ 
                "tiDate OR @StartUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(UtilizationDate <=@EndUtiDate OR @EndUtiDate="& _ 
                "'')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(DispatchingCode = @DispatchingCode OR @DispatchingCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Ser"& _ 
                "ialNumber  = @SerialCode OR @SerialCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "نام", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد سفارش", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "نسبت CT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "نسبت VT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sazande", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Device_Sazande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Model", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مدل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DispatchingCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد دیسپاچینگ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerialCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره سریال", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_ReleDataTable, ByVal Name As String, ByVal OrderCode As String, ByVal CT As String, ByVal VT As String, ByVal Post As Global.System.Nullable(Of Integer), ByVal Sazande As Global.System.Nullable(Of Integer), ByVal Model As String, ByVal StartMadeDate As String, ByVal EndMadeDate As String, ByVal StartUtiDate As String, ByVal EndUtiDate As String, ByVal DispatchingCode As String, ByVal SerialCode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Name,String)
            End If
            If (OrderCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(OrderCode,String)
            End If
            If (CT Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CT,String)
            End If
            If (VT Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(VT,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(SerialCode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Name As String, ByVal OrderCode As String, ByVal CT As String, ByVal VT As String, ByVal Post As Global.System.Nullable(Of Integer), ByVal Sazande As Global.System.Nullable(Of Integer), ByVal Model As String, ByVal StartMadeDate As String, ByVal EndMadeDate As String, ByVal StartUtiDate As String, ByVal EndUtiDate As String, ByVal DispatchingCode As String, ByVal SerialCode As String) As Ds_Rp.Rp_ReleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Name,String)
            End If
            If (OrderCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(OrderCode,String)
            End If
            If (CT Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CT,String)
            End If
            If (VT Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(VT,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(SerialCode,String)
            End If
            Dim dataTable As Ds_Rp.Rp_ReleDataTable = New Ds_Rp.Rp_ReleDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_TranseGhodratTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_TranseGhodrat"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("مدل", "مدل")
            tableMapping.ColumnMappings.Add("تاریخ ساخت", "تاریخ ساخت")
            tableMapping.ColumnMappings.Add("تاریخ بهره برداری", "تاریخ بهره برداری")
            tableMapping.ColumnMappings.Add("سازنده", "سازنده")
            tableMapping.ColumnMappings.Add("شماره سریال", "شماره سریال")
            tableMapping.ColumnMappings.Add("کد دیسپاچینگ", "کد دیسپاچینگ")
            tableMapping.ColumnMappings.Add("خنک کننده", "خنک کننده")
            tableMapping.ColumnMappings.Add("ظرفیت نامی", "ظرفیت نامی")
            tableMapping.ColumnMappings.Add("گروه برداری", "گروه برداری")
            tableMapping.ColumnMappings.Add("نسبت تبدیل ولتاژ", "نسبت تبدیل ولتاژ")
            tableMapping.ColumnMappings.Add("سیستم تغییر تپ", "سیستم تغییر تپ")
            tableMapping.ColumnMappings.Add("مکان تپ", "مکان تپ")
            tableMapping.ColumnMappings.Add("نسبت تبدیل جریان", "نسبت تبدیل جریان")
            tableMapping.ColumnMappings.Add("Bill", "Bill")
            tableMapping.ColumnMappings.Add("درصد امپدانس", "درصد امپدانس")
            tableMapping.ColumnMappings.Add("فرکانس", "فرکانس")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Hadese_KhesaratDevice.Srl,Pm_Hadese_KhesaratDevice .Name as نام,Pm_Pos"& _ 
                "t.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"model as مدل , madedate as [تاریخ ساخت], UtilizationDate a"& _ 
                "s [تاریخ بهره برداری],Pm_Device_Sazande .Text as سازنده,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SerialNumber as [شماره"& _ 
                " سریال],DispatchingCode as [کد دیسپاچینگ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" CollingType as [خنک کننده],Volume a"& _ 
                "s [ظرفیت نامی],VectorGroup as [گروه برداری],VoltajConvert as[نسبت تبدیل ولتاژ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" TapChangeSystem as [سیستم تغییر تپ],TapPlace as [مکان تپ],JaryanConvert as [نس"& _ 
                "بت تبدیل جریان],Bill , Ampedance as [درصد امپدانس]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ,Frequency as [فرکانس]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  f"& _ 
                "rom Pm_Hadese_KhesaratDevice JOIN Pm_Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.srl = Srl_Pm_Post Left JOI"& _ 
                "N Pm_Device_Sazande ON Srl_Pm_Device_Sazande = Pm_Device_Sazande .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"P"& _ 
                "m_DescriptableTajhiz=2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(CollingType=@Colling OR  @Colling='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Volume =@"& _ 
                "volume OR @volume='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(VectorGroup=@Vector OR @Vector='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(VoltajConvert"& _ 
                " =@VoltajConvert OR @VoltajConvert='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(TapChangeSystem =@TapChangeSystem OR"& _ 
                " @TapChangeSystem='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(TapPlace=@TapPlace OR  @TapPlace='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(JaryanConve"& _ 
                "rt =@JaryanConvert OR @JaryanConvert='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Bill=@Bill OR @Bill='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Amped"& _ 
                "ance =@Ampedance OR @Ampedance='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Frequency =@Frequency OR @Frequency='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Hadese_KhesaratDevice.name=@Name OR @Name='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Srl_Pm_Post  = @Post "& _ 
                "OR @Post = -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Device_Sazande =@Sazande  OR @Sazande=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Model"& _ 
                " = @Model OR @Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate>=@StartMadeDate OR @StartMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"& _ 
                "(MadeDate<=@EndMadeDate OR @EndMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate >= @StartUtiDat"& _ 
                "e OR @StartUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate <=@EndUtiDate OR @EndUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AN"& _ 
                "D(DispatchingCode = @DispatchingCode OR @DispatchingCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(SerialNumber  "& _ 
                "= @SerialCode OR @SerialCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Colling", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "خنک کننده", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@volume", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ظرفیت نامی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vector", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "گروه برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VoltajConvert", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "نسبت تبدیل ولتاژ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TapChangeSystem", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "سیستم تغییر تپ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TapPlace", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مکان تپ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JaryanConvert", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "نسبت تبدیل جریان", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bill", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Bill", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ampedance", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "درصد امپدانس", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Frequency", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "فرکانس", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "نام", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sazande", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Device_Sazande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Model", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مدل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DispatchingCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد دیسپاچینگ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerialCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره سریال", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As Ds_Rp.Rp_TranseGhodratDataTable,  _
                    ByVal Colling As String,  _
                    ByVal volume As String,  _
                    ByVal Vector As String,  _
                    ByVal VoltajConvert As String,  _
                    ByVal TapChangeSystem As String,  _
                    ByVal TapPlace As String,  _
                    ByVal JaryanConvert As String,  _
                    ByVal Bill As String,  _
                    ByVal Ampedance As String,  _
                    ByVal Frequency As String,  _
                    ByVal Name As String,  _
                    ByVal Post As Global.System.Nullable(Of Integer),  _
                    ByVal Sazande As Global.System.Nullable(Of Integer),  _
                    ByVal Model As String,  _
                    ByVal StartMadeDate As String,  _
                    ByVal EndMadeDate As String,  _
                    ByVal StartUtiDate As String,  _
                    ByVal EndUtiDate As String,  _
                    ByVal DispatchingCode As String,  _
                    ByVal SerialCode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Colling Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Colling,String)
            End If
            If (volume Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(volume,String)
            End If
            If (Vector Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Vector,String)
            End If
            If (VoltajConvert Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(VoltajConvert,String)
            End If
            If (TapChangeSystem Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(TapChangeSystem,String)
            End If
            If (TapPlace Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(TapPlace,String)
            End If
            If (JaryanConvert Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(JaryanConvert,String)
            End If
            If (Bill Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Bill,String)
            End If
            If (Ampedance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Ampedance,String)
            End If
            If (Frequency Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Frequency,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(SerialCode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal Colling As String,  _
                    ByVal volume As String,  _
                    ByVal Vector As String,  _
                    ByVal VoltajConvert As String,  _
                    ByVal TapChangeSystem As String,  _
                    ByVal TapPlace As String,  _
                    ByVal JaryanConvert As String,  _
                    ByVal Bill As String,  _
                    ByVal Ampedance As String,  _
                    ByVal Frequency As String,  _
                    ByVal Name As String,  _
                    ByVal Post As Global.System.Nullable(Of Integer),  _
                    ByVal Sazande As Global.System.Nullable(Of Integer),  _
                    ByVal Model As String,  _
                    ByVal StartMadeDate As String,  _
                    ByVal EndMadeDate As String,  _
                    ByVal StartUtiDate As String,  _
                    ByVal EndUtiDate As String,  _
                    ByVal DispatchingCode As String,  _
                    ByVal SerialCode As String) As Ds_Rp.Rp_TranseGhodratDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Colling Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Colling,String)
            End If
            If (volume Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(volume,String)
            End If
            If (Vector Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Vector,String)
            End If
            If (VoltajConvert Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(VoltajConvert,String)
            End If
            If (TapChangeSystem Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(TapChangeSystem,String)
            End If
            If (TapPlace Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(TapPlace,String)
            End If
            If (JaryanConvert Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(JaryanConvert,String)
            End If
            If (Bill Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Bill,String)
            End If
            If (Ampedance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Ampedance,String)
            End If
            If (Frequency Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Frequency,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(SerialCode,String)
            End If
            Dim dataTable As Ds_Rp.Rp_TranseGhodratDataTable = New Ds_Rp.Rp_TranseGhodratDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_BarghgirTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Barghgir"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("مدل", "مدل")
            tableMapping.ColumnMappings.Add("تاریخ ساخت", "تاریخ ساخت")
            tableMapping.ColumnMappings.Add("تاریخ بهره برداری", "تاریخ بهره برداری")
            tableMapping.ColumnMappings.Add("سازنده", "سازنده")
            tableMapping.ColumnMappings.Add("شماره سریال", "شماره سریال")
            tableMapping.ColumnMappings.Add("کد دیسپاچینگ", "کد دیسپاچینگ")
            tableMapping.ColumnMappings.Add("توان نامی", "توان نامی")
            tableMapping.ColumnMappings.Add("جریان نامی", "جریان نامی")
            tableMapping.ColumnMappings.Add("ولتاژ نامی", "ولتاژ نامی")
            tableMapping.ColumnMappings.Add("جریان اتصال کوتاه", "جریان اتصال کوتاه")
            tableMapping.ColumnMappings.Add("کلاس", "کلاس")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Hadese_KhesaratDevice.Srl,Pm_Hadese_KhesaratDevice .Name as نام,Pm_Pos"& _ 
                "t.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"model as مدل , madedate as [تاریخ ساخت], UtilizationDate a"& _ 
                "s [تاریخ بهره برداری],Pm_Device_Sazande .Text as سازنده,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SerialNumber as [شماره"& _ 
                " سریال],DispatchingCode as [کد دیسپاچینگ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" TavanNami  as [توان نامی],JaryanNam"& _ 
                "i  as [جریان نامی],VoltajNami  as [ولتاژ نامی],JaryanShortCyrcle as[جریان اتصال "& _ 
                "کوتاه],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Class  as [کلاس]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from Pm_Hadese_KhesaratDevice JOIN Pm_Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_"& _ 
                "Post.srl = Srl_Pm_Post Left JOIN Pm_Device_Sazande ON Srl_Pm_Device_Sazande = Pm"& _ 
                "_Device_Sazande .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_DescriptableTajhiz=3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(TavanNami=@Tavan OR  "& _ 
                "@Tavan='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(JaryanNami =@JaryanNami OR  @JaryanNami='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(VoltajNami =@Vo"& _ 
                "ltajName OR  @VoltajName='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(JaryanShortCyrcle =@JSC OR  @JSC='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Clas"& _ 
                "s =@Class OR  @Class='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Hadese_KhesaratDevice.name=@Name OR @Name='')"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Srl_Pm_Post  = @Post OR @Post = -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Device_Sazande =@Sazande "& _ 
                " OR @Sazande=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Model = @Model OR @Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate>=@StartMadeDate"& _ 
                " OR @StartMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate<=@EndMadeDate OR @EndMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Util"& _ 
                "izationDate >= @StartUtiDate OR @StartUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate <=@EndUti"& _ 
                "Date OR @EndUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(DispatchingCode = @DispatchingCode OR @DispatchingC"& _ 
                "ode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(SerialNumber  = @SerialCode OR @SerialCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tavan", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "توان نامی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JaryanNami", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "جریان نامی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VoltajName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ولتاژ نامی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JSC", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "جریان اتصال کوتاه", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Class", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کلاس", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "نام", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sazande", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Device_Sazande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Model", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مدل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DispatchingCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد دیسپاچینگ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerialCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره سریال", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As Ds_Rp.Rp_BarghgirDataTable,  _
                    ByVal Tavan As String,  _
                    ByVal JaryanNami As String,  _
                    ByVal VoltajName As String,  _
                    ByVal JSC As String,  _
                    ByVal _Class As String,  _
                    ByVal Name As String,  _
                    ByVal Post As Global.System.Nullable(Of Integer),  _
                    ByVal Sazande As Global.System.Nullable(Of Integer),  _
                    ByVal Model As String,  _
                    ByVal StartMadeDate As String,  _
                    ByVal EndMadeDate As String,  _
                    ByVal StartUtiDate As String,  _
                    ByVal EndUtiDate As String,  _
                    ByVal DispatchingCode As String,  _
                    ByVal SerialCode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Tavan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Tavan,String)
            End If
            If (JaryanNami Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(JaryanNami,String)
            End If
            If (VoltajName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(VoltajName,String)
            End If
            If (JSC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(JSC,String)
            End If
            If (_Class Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(_Class,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(SerialCode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Tavan As String, ByVal JaryanNami As String, ByVal VoltajName As String, ByVal JSC As String, ByVal _Class As String, ByVal Name As String, ByVal Post As Global.System.Nullable(Of Integer), ByVal Sazande As Global.System.Nullable(Of Integer), ByVal Model As String, ByVal StartMadeDate As String, ByVal EndMadeDate As String, ByVal StartUtiDate As String, ByVal EndUtiDate As String, ByVal DispatchingCode As String, ByVal SerialCode As String) As Ds_Rp.Rp_BarghgirDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Tavan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Tavan,String)
            End If
            If (JaryanNami Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(JaryanNami,String)
            End If
            If (VoltajName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(VoltajName,String)
            End If
            If (JSC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(JSC,String)
            End If
            If (_Class Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(_Class,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(SerialCode,String)
            End If
            Dim dataTable As Ds_Rp.Rp_BarghgirDataTable = New Ds_Rp.Rp_BarghgirDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_SexionerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Sexioner"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("مدل", "مدل")
            tableMapping.ColumnMappings.Add("تاریخ ساخت", "تاریخ ساخت")
            tableMapping.ColumnMappings.Add("تاریخ بهره برداری", "تاریخ بهره برداری")
            tableMapping.ColumnMappings.Add("سازنده", "سازنده")
            tableMapping.ColumnMappings.Add("شماره سریال", "شماره سریال")
            tableMapping.ColumnMappings.Add("کد دیسپاچینگ", "کد دیسپاچینگ")
            tableMapping.ColumnMappings.Add("جریان نامی", "جریان نامی")
            tableMapping.ColumnMappings.Add("ولتاژ نامی", "ولتاژ نامی")
            tableMapping.ColumnMappings.Add("جریان اتصال کوتاه", "جریان اتصال کوتاه")
            tableMapping.ColumnMappings.Add("حداکثر جریان", "حداکثر جریان")
            tableMapping.ColumnMappings.Add("ولتاژ قابل بهره برداری", "ولتاژ قابل بهره برداری")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Hadese_KhesaratDevice.Srl,Pm_Hadese_KhesaratDevice .Name as نام,Pm_Pos"& _ 
                "t.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"model as مدل , madedate as [تاریخ ساخت], UtilizationDate a"& _ 
                "s [تاریخ بهره برداری],Pm_Device_Sazande .Text as سازنده,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SerialNumber as [شماره"& _ 
                " سریال],DispatchingCode as [کد دیسپاچینگ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" JaryanNami  as [جریان نامی],VoltajN"& _ 
                "ami  as [ولتاژ نامی],JaryanShortCyrcle as[جریان اتصال کوتاه],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" MaxJaryan   as ["& _ 
                "حداکثر جریان],UtilizationVoltaje [ولتاژ قابل بهره برداری]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from Pm_Hadese_Khes"& _ 
                "aratDevice JOIN Pm_Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.srl = Srl_Pm_Post Left JOIN Pm_Device_Sazand"& _ 
                "e ON Srl_Pm_Device_Sazande = Pm_Device_Sazande .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_DescriptableTajh"& _ 
                "iz=4"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(JaryanNami =@JaryanNami OR  @JaryanNami='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(VoltajNami =@VoltajNa"& _ 
                "me OR  @VoltajName='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(JaryanShortCyrcle =@JSC OR  @JSC='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MaxJaryan "& _ 
                "=@MaxJaryan OR  @MaxJaryan='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationVoltaje =@UtiVoltaje OR  @UtiVolt"& _ 
                "aje='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Hadese_KhesaratDevice.name=@Name OR @Name='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Srl_Pm_Post"& _ 
                "  = @Post OR @Post = -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Device_Sazande =@Sazande  OR @Sazande=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Model = @Model OR @Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate>=@StartMadeDate OR @StartMadeDat"& _ 
                "e='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate<=@EndMadeDate OR @EndMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate >= @S"& _ 
                "tartUtiDate OR @StartUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate <=@EndUtiDate OR @EndUtiDa"& _ 
                "te='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(DispatchingCode = @DispatchingCode OR @DispatchingCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Seri"& _ 
                "alNumber  = @SerialCode OR @SerialCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JaryanNami", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "جریان نامی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VoltajName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ولتاژ نامی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JSC", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "جریان اتصال کوتاه", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxJaryan", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "حداکثر جریان", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UtiVoltaje", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ولتاژ قابل بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "نام", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sazande", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Device_Sazande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Model", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مدل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DispatchingCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد دیسپاچینگ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerialCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره سریال", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As Ds_Rp.Rp_SexionerDataTable,  _
                    ByVal JaryanNami As String,  _
                    ByVal VoltajName As String,  _
                    ByVal JSC As String,  _
                    ByVal MaxJaryan As String,  _
                    ByVal UtiVoltaje As String,  _
                    ByVal Name As String,  _
                    ByVal Post As Global.System.Nullable(Of Integer),  _
                    ByVal Sazande As Global.System.Nullable(Of Integer),  _
                    ByVal Model As String,  _
                    ByVal StartMadeDate As String,  _
                    ByVal EndMadeDate As String,  _
                    ByVal StartUtiDate As String,  _
                    ByVal EndUtiDate As String,  _
                    ByVal DispatchingCode As String,  _
                    ByVal SerialCode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (JaryanNami Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(JaryanNami,String)
            End If
            If (VoltajName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(VoltajName,String)
            End If
            If (JSC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(JSC,String)
            End If
            If (MaxJaryan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MaxJaryan,String)
            End If
            If (UtiVoltaje Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(UtiVoltaje,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(SerialCode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal JaryanNami As String, ByVal VoltajName As String, ByVal JSC As String, ByVal MaxJaryan As String, ByVal UtiVoltaje As String, ByVal Name As String, ByVal Post As Global.System.Nullable(Of Integer), ByVal Sazande As Global.System.Nullable(Of Integer), ByVal Model As String, ByVal StartMadeDate As String, ByVal EndMadeDate As String, ByVal StartUtiDate As String, ByVal EndUtiDate As String, ByVal DispatchingCode As String, ByVal SerialCode As String) As Ds_Rp.Rp_SexionerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (JaryanNami Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(JaryanNami,String)
            End If
            If (VoltajName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(VoltajName,String)
            End If
            If (JSC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(JSC,String)
            End If
            If (MaxJaryan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MaxJaryan,String)
            End If
            If (UtiVoltaje Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(UtiVoltaje,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(SerialCode,String)
            End If
            Dim dataTable As Ds_Rp.Rp_SexionerDataTable = New Ds_Rp.Rp_SexionerDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_BreakerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Breaker"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("مدل", "مدل")
            tableMapping.ColumnMappings.Add("تاریخ ساخت", "تاریخ ساخت")
            tableMapping.ColumnMappings.Add("تاریخ بهره برداری", "تاریخ بهره برداری")
            tableMapping.ColumnMappings.Add("سازنده", "سازنده")
            tableMapping.ColumnMappings.Add("شماره سریال", "شماره سریال")
            tableMapping.ColumnMappings.Add("کد دیسپاچینگ", "کد دیسپاچینگ")
            tableMapping.ColumnMappings.Add("جریان نامی", "جریان نامی")
            tableMapping.ColumnMappings.Add("ولتاژ نامی", "ولتاژ نامی")
            tableMapping.ColumnMappings.Add("جریان اتصال کوتاه", "جریان اتصال کوتاه")
            tableMapping.ColumnMappings.Add("حداکثر جریان", "حداکثر جریان")
            tableMapping.ColumnMappings.Add("حداکثر ولتاژ", "حداکثر ولتاژ")
            tableMapping.ColumnMappings.Add("زمان قطع", "زمان قطع")
            tableMapping.ColumnMappings.Add("زمان وصل", "زمان وصل")
            tableMapping.ColumnMappings.Add("Bill", "Bill")
            tableMapping.ColumnMappings.Add("نوع مکانیزم", "نوع مکانیزم")
            tableMapping.ColumnMappings.Add("سیستم خاموش کننده", "سیستم خاموش کننده")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Hadese_KhesaratDevice.Srl,Pm_Hadese_KhesaratDevice .Name as نام,Pm_Pos"& _ 
                "t.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"model as مدل , madedate as [تاریخ ساخت], UtilizationDate a"& _ 
                "s [تاریخ بهره برداری],Pm_Device_Sazande .Text as سازنده,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SerialNumber as [شماره"& _ 
                " سریال],DispatchingCode as [کد دیسپاچینگ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" JaryanNami  as [جریان نامی],VoltajN"& _ 
                "ami  as [ولتاژ نامی],JaryanSC as[جریان اتصال کوتاه],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" MaxJaryan   as [حداکثر جر"& _ 
                "یان],MaxVoltaj  [حداکثر ولتاژ],DisconnectTime as [زمان قطع],ConnectTime as [زمان"& _ 
                " وصل]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" ,Bill ,MekanismType as [نوع مکانیزم],TurnOffSystem [سیستم خاموش کننده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from Pm_Hadese_KhesaratDevice JOIN Pm_Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.srl = Srl_Pm_Post Le"& _ 
                "ft JOIN Pm_Device_Sazande ON Srl_Pm_Device_Sazande = Pm_Device_Sazande .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"wh"& _ 
                "ere"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_DescriptableTajhiz=5"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(JaryanNami =@JaryanNami OR  @JaryanNami='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"A"& _ 
                "ND(VoltajNami =@VoltajName OR  @VoltajName='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(JaryanSC =@BSC OR  @BSC='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MaxJaryan =@MaxJaryan OR  @MaxJaryan='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MaxVoltaj  =@MaxVoltaje OR  @"& _ 
                "MaxVoltaje='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(ConnectTime  =@connecttime OR  @connecttime='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Disconn"& _ 
                "ectTime   =@DisconnectTime OR  @DisconnectTime='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Bill   =@Bill OR  @Bill="& _ 
                "'')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MekanismType    =@MekanismType OR  @MekanismType='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(TurnOffSystem"& _ 
                "     =@TurnOffSystem OR  @TurnOffSystem='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Hadese_KhesaratDevice.na"& _ 
                "me=@Name OR @Name='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Srl_Pm_Post  = @Post OR @Post = -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Devi"& _ 
                "ce_Sazande =@Sazande  OR @Sazande=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Model = @Model OR @Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Mad"& _ 
                "eDate>=@StartMadeDate OR @StartMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate<=@EndMadeDate OR @EndM"& _ 
                "adeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate >= @StartUtiDate OR @StartUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Util"& _ 
                "izationDate <=@EndUtiDate OR @EndUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(DispatchingCode = @Dispatching"& _ 
                "Code OR @DispatchingCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(SerialNumber  = @SerialCode OR @SerialCode='')"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JaryanNami", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "جریان نامی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VoltajName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ولتاژ نامی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSC", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "جریان اتصال کوتاه", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxJaryan", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "حداکثر جریان", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxVoltaje", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "حداکثر ولتاژ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@connecttime", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "زمان وصل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DisconnectTime", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "زمان قطع", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bill", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Bill", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MekanismType", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "نوع مکانیزم", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TurnOffSystem", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "سیستم خاموش کننده", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "نام", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sazande", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Device_Sazande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Model", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مدل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DispatchingCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد دیسپاچینگ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerialCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره سریال", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As Ds_Rp.Rp_BreakerDataTable,  _
                    ByVal JaryanNami As String,  _
                    ByVal VoltajName As String,  _
                    ByVal BSC As String,  _
                    ByVal MaxJaryan As String,  _
                    ByVal MaxVoltaje As String,  _
                    ByVal connecttime As String,  _
                    ByVal DisconnectTime As String,  _
                    ByVal Bill As String,  _
                    ByVal MekanismType As String,  _
                    ByVal TurnOffSystem As String,  _
                    ByVal Name As String,  _
                    ByVal Post As Global.System.Nullable(Of Integer),  _
                    ByVal Sazande As Global.System.Nullable(Of Integer),  _
                    ByVal Model As String,  _
                    ByVal StartMadeDate As String,  _
                    ByVal EndMadeDate As String,  _
                    ByVal StartUtiDate As String,  _
                    ByVal EndUtiDate As String,  _
                    ByVal DispatchingCode As String,  _
                    ByVal SerialCode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (JaryanNami Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(JaryanNami,String)
            End If
            If (VoltajName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(VoltajName,String)
            End If
            If (BSC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BSC,String)
            End If
            If (MaxJaryan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MaxJaryan,String)
            End If
            If (MaxVoltaje Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(MaxVoltaje,String)
            End If
            If (connecttime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(connecttime,String)
            End If
            If (DisconnectTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(DisconnectTime,String)
            End If
            If (Bill Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Bill,String)
            End If
            If (MekanismType Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(MekanismType,String)
            End If
            If (TurnOffSystem Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(TurnOffSystem,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(SerialCode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal JaryanNami As String,  _
                    ByVal VoltajName As String,  _
                    ByVal BSC As String,  _
                    ByVal MaxJaryan As String,  _
                    ByVal MaxVoltaje As String,  _
                    ByVal connecttime As String,  _
                    ByVal DisconnectTime As String,  _
                    ByVal Bill As String,  _
                    ByVal MekanismType As String,  _
                    ByVal TurnOffSystem As String,  _
                    ByVal Name As String,  _
                    ByVal Post As Global.System.Nullable(Of Integer),  _
                    ByVal Sazande As Global.System.Nullable(Of Integer),  _
                    ByVal Model As String,  _
                    ByVal StartMadeDate As String,  _
                    ByVal EndMadeDate As String,  _
                    ByVal StartUtiDate As String,  _
                    ByVal EndUtiDate As String,  _
                    ByVal DispatchingCode As String,  _
                    ByVal SerialCode As String) As Ds_Rp.Rp_BreakerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (JaryanNami Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(JaryanNami,String)
            End If
            If (VoltajName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(VoltajName,String)
            End If
            If (BSC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BSC,String)
            End If
            If (MaxJaryan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MaxJaryan,String)
            End If
            If (MaxVoltaje Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(MaxVoltaje,String)
            End If
            If (connecttime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(connecttime,String)
            End If
            If (DisconnectTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(DisconnectTime,String)
            End If
            If (Bill Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Bill,String)
            End If
            If (MekanismType Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(MekanismType,String)
            End If
            If (TurnOffSystem Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(TurnOffSystem,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(SerialCode,String)
            End If
            Dim dataTable As Ds_Rp.Rp_BreakerDataTable = New Ds_Rp.Rp_BreakerDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_TeranseTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Teranse"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("مدل", "مدل")
            tableMapping.ColumnMappings.Add("تاریخ ساخت", "تاریخ ساخت")
            tableMapping.ColumnMappings.Add("تاریخ بهره برداری", "تاریخ بهره برداری")
            tableMapping.ColumnMappings.Add("سازنده", "سازنده")
            tableMapping.ColumnMappings.Add("شماره سریال", "شماره سریال")
            tableMapping.ColumnMappings.Add("کد دیسپاچینگ", "کد دیسپاچینگ")
            tableMapping.ColumnMappings.Add("جریان نامی", "جریان نامی")
            tableMapping.ColumnMappings.Add("ولتاژ نامی", "ولتاژ نامی")
            tableMapping.ColumnMappings.Add("جریان اتصال کوتاه", "جریان اتصال کوتاه")
            tableMapping.ColumnMappings.Add("حداکثر جریان", "حداکثر جریان")
            tableMapping.ColumnMappings.Add("حداکثر ولتاژ", "حداکثر ولتاژ")
            tableMapping.ColumnMappings.Add("تعداد هسته", "تعداد هسته")
            tableMapping.ColumnMappings.Add("کلاس دقت", "کلاس دقت")
            tableMapping.ColumnMappings.Add("نسبت تبدیل", "نسبت تبدیل")
            tableMapping.ColumnMappings.Add("Bill", "Bill")
            tableMapping.ColumnMappings.Add("نوع ترانس", "نوع ترانس")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Hadese_KhesaratDevice.Srl,Pm_Hadese_KhesaratDevice .Name as نام,Pm_Pos"& _ 
                "t.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"model as مدل , madedate as [تاریخ ساخت], UtilizationDate a"& _ 
                "s [تاریخ بهره برداری],Pm_Device_Sazande .Text as سازنده,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SerialNumber as [شماره"& _ 
                " سریال],DispatchingCode as [کد دیسپاچینگ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" JaryanNami  as [جریان نامی],VoltajN"& _ 
                "ami  as [ولتاژ نامی],JaryanSC as[جریان اتصال کوتاه],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" MaxJaryan   as [حداکثر جر"& _ 
                "یان],MaxVoltaj  [حداکثر ولتاژ],CoreNumber as [تعداد هسته],CoreClass as [کلاس دقت"& _ 
                "], CoreConvert [نسبت تبدیل]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" , Bill ,Pm_DescriptableTajhiz .name as [نوع ترانس]"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from Pm_Hadese_KhesaratDevice JOIN Pm_Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.srl = Srl_Pm_Post Lef"& _ 
                "t JOIN Pm_Device_Sazande ON Srl_Pm_Device_Sazande = Pm_Device_Sazande .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEF"& _ 
                "T JOIN Pm_DescriptableTajhiz ON Pm_DescriptableTajhiz .Srl = Pm_DescriptableTajh"& _ 
                "iz "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_DescriptableTajhiz=@Tajhiz OR(@Tajhiz=0 AND(Pm_DescriptableTajhi"& _ 
                "z=6 OR Pm_DescriptableTajhiz=7)))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MaxJaryan =@MaxJaryan OR  @MaxJaryan=''"& _ 
                ")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MaxVoltaj  =@MaxVoltaje OR  @MaxVoltaje='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(CoreNumber   =@CoreNumbe"& _ 
                "r OR  @CoreNumber='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(CoreConvert    =@CoreConvert OR  @CoreConvert='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AN"& _ 
                "D(Bill   =@Bill OR  @Bill='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(CoreClass     =@CoreClass OR  @CoreClass='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Hadese_KhesaratDevice.name=@Name OR @Name='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Srl_Pm_Post  = "& _ 
                "@Post OR @Post = -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Device_Sazande =@Sazande  OR @Sazande=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND"& _ 
                "(Model = @Model OR @Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate>=@StartMadeDate OR @StartMadeDate=''"& _ 
                ")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate<=@EndMadeDate OR @EndMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate >= @Start"& _ 
                "UtiDate OR @StartUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate <=@EndUtiDate OR @EndUtiDate='"& _ 
                "')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(DispatchingCode = @DispatchingCode OR @DispatchingCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(SerialNu"& _ 
                "mber  = @SerialCode OR @SerialCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tajhiz", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Pm_DescriptableTajhiz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxJaryan", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "حداکثر جریان", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxVoltaje", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "حداکثر ولتاژ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreNumber", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "تعداد هسته", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreConvert", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "نسبت تبدیل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bill", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Bill", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreClass", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کلاس دقت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "نام", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sazande", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Device_Sazande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Model", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مدل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DispatchingCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد دیسپاچینگ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerialCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره سریال", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As Ds_Rp.Rp_TeranseDataTable,  _
                    ByVal Tajhiz As Global.System.Nullable(Of Integer),  _
                    ByVal MaxJaryan As String,  _
                    ByVal MaxVoltaje As String,  _
                    ByVal CoreNumber As String,  _
                    ByVal CoreConvert As String,  _
                    ByVal Bill As String,  _
                    ByVal CoreClass As String,  _
                    ByVal Name As String,  _
                    ByVal Post As Global.System.Nullable(Of Integer),  _
                    ByVal Sazande As Global.System.Nullable(Of Integer),  _
                    ByVal Model As String,  _
                    ByVal StartMadeDate As String,  _
                    ByVal EndMadeDate As String,  _
                    ByVal StartUtiDate As String,  _
                    ByVal EndUtiDate As String,  _
                    ByVal DispatchingCode As String,  _
                    ByVal SerialCode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Tajhiz.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Tajhiz.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (MaxJaryan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(MaxJaryan,String)
            End If
            If (MaxVoltaje Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(MaxVoltaje,String)
            End If
            If (CoreNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CoreNumber,String)
            End If
            If (CoreConvert Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(CoreConvert,String)
            End If
            If (Bill Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Bill,String)
            End If
            If (CoreClass Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(CoreClass,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(SerialCode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal Tajhiz As Global.System.Nullable(Of Integer),  _
                    ByVal MaxJaryan As String,  _
                    ByVal MaxVoltaje As String,  _
                    ByVal CoreNumber As String,  _
                    ByVal CoreConvert As String,  _
                    ByVal Bill As String,  _
                    ByVal CoreClass As String,  _
                    ByVal Name As String,  _
                    ByVal Post As Global.System.Nullable(Of Integer),  _
                    ByVal Sazande As Global.System.Nullable(Of Integer),  _
                    ByVal Model As String,  _
                    ByVal StartMadeDate As String,  _
                    ByVal EndMadeDate As String,  _
                    ByVal StartUtiDate As String,  _
                    ByVal EndUtiDate As String,  _
                    ByVal DispatchingCode As String,  _
                    ByVal SerialCode As String) As Ds_Rp.Rp_TeranseDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Tajhiz.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Tajhiz.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (MaxJaryan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(MaxJaryan,String)
            End If
            If (MaxVoltaje Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(MaxVoltaje,String)
            End If
            If (CoreNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CoreNumber,String)
            End If
            If (CoreConvert Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(CoreConvert,String)
            End If
            If (Bill Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Bill,String)
            End If
            If (CoreClass Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(CoreClass,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(SerialCode,String)
            End If
            Dim dataTable As Ds_Rp.Rp_TeranseDataTable = New Ds_Rp.Rp_TeranseDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_TajhizTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Tajhiz"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("مدل", "مدل")
            tableMapping.ColumnMappings.Add("تاریخ ساخت", "تاریخ ساخت")
            tableMapping.ColumnMappings.Add("تاریخ بهره برداری", "تاریخ بهره برداری")
            tableMapping.ColumnMappings.Add("سازنده", "سازنده")
            tableMapping.ColumnMappings.Add("شماره سریال", "شماره سریال")
            tableMapping.ColumnMappings.Add("کد دیسپاچینگ", "کد دیسپاچینگ")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("کد سفارش", "کد سفارش")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Hadese_KhesaratDevice.Srl,Pm_Post.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"model as مدل , m"& _ 
                "adedate as [تاریخ ساخت], UtilizationDate as [تاریخ بهره برداری],Pm_Device_Sazand"& _ 
                "e .Text as سازنده,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SerialNumber as [شماره سریال],DispatchingCode as [کد دیسپاچی"& _ 
                "نگ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Pm_TajhizName.Name as نام,OrderCode as [کد سفارش]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from Pm_Hadese_Khesa"& _ 
                "ratDevice JOIN Pm_Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.srl = Srl_Pm_Post Left JOIN Pm_Device_Sazande"& _ 
                " ON Srl_Pm_Device_Sazande = Pm_Device_Sazande .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN Pm_DescriptableTa"& _ 
                "jhiz ON Pm_DescriptableTajhiz .Srl = Pm_DescriptableTajhiz "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"JOIN Pm_TajhizName "& _ 
                "ON Pm_TajhizName.srl = Srl_Pm_TajhizName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where ((Pm_Hadese_KhesaratDevice .sr"& _ 
                "l_pm_tajhizName=@TajhizName OR @TajhizName=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(OrderCode= @Order OR @Order="& _ 
                "'')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Hadese_KhesaratDevice.name=@Name OR @Name='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Srl_Pm_Post  = @P"& _ 
                "ost OR @Post = -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Device_Sazande =@Sazande  OR @Sazande=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(M"& _ 
                "odel = @Model OR @Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate>=@StartMadeDate OR @StartMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate<=@EndMadeDate OR @EndMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate >= @StartUt"& _ 
                "iDate OR @StartUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate <=@EndUtiDate OR @EndUtiDate='')"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(DispatchingCode = @DispatchingCode OR @DispatchingCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(SerialNumb"& _ 
                "er  = @SerialCode OR @SerialCode='') and @sub=-1) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(@sub=1 and srl_Parent in("& _ 
                " select  Pm_Hadese_KhesaratDevice .srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from Pm_Hadese_KhesaratDevice JOIN Pm_"& _ 
                "Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.srl = Srl_Pm_Post Left JOIN Pm_Device_Sazande ON Srl_Pm_Device_"& _ 
                "Sazande = Pm_Device_Sazande .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN Pm_DescriptableTajhiz ON Pm_Descrip"& _ 
                "tableTajhiz .Srl = Pm_DescriptableTajhiz "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"JOIN Pm_TajhizName ON Pm_TajhizName.s"& _ 
                "rl = Srl_Pm_TajhizName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where ((Pm_Hadese_KhesaratDevice .srl_pm_tajhizName=@T"& _ 
                "ajhizName OR @TajhizName=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(OrderCode= @Order OR @Order='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Hadese"& _ 
                "_KhesaratDevice.name=@Name OR @Name='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Srl_Pm_Post  = @Post OR @Post = -1)"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Device_Sazande =@Sazande  OR @Sazande=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Model = @Model OR @"& _ 
                "Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate>=@StartMadeDate OR @StartMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate<=@En"& _ 
                "dMadeDate OR @EndMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate >= @StartUtiDate OR @StartUti"& _ 
                "Date='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate <=@EndUtiDate OR @EndUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(DispatchingC"& _ 
                "ode = @DispatchingCode OR @DispatchingCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(SerialNumber  = @SerialCode "& _ 
                "OR @SerialCode=''))))"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TajhizName", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_pm_TajhizName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Order", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد سفارش", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sazande", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Device_Sazande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Model", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مدل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DispatchingCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد دیسپاچینگ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerialCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره سریال", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sub", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_TajhizDataTable, ByVal TajhizName As Global.System.Nullable(Of Integer), ByVal Order As String, ByVal Name As String, ByVal Post As Global.System.Nullable(Of Integer), ByVal Sazande As Global.System.Nullable(Of Integer), ByVal Model As String, ByVal StartMadeDate As String, ByVal EndMadeDate As String, ByVal StartUtiDate As String, ByVal EndUtiDate As String, ByVal DispatchingCode As String, ByVal SerialCode As String, ByVal _sub As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (TajhizName.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TajhizName.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Order Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Order,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(SerialCode,String)
            End If
            If (_sub Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_sub")
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(_sub,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal TajhizName As Global.System.Nullable(Of Integer), ByVal Order As String, ByVal Name As String, ByVal Post As Global.System.Nullable(Of Integer), ByVal Sazande As Global.System.Nullable(Of Integer), ByVal Model As String, ByVal StartMadeDate As String, ByVal EndMadeDate As String, ByVal StartUtiDate As String, ByVal EndUtiDate As String, ByVal DispatchingCode As String, ByVal SerialCode As String, ByVal _sub As String) As Ds_Rp.Rp_TajhizDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (TajhizName.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TajhizName.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Order Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Order,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(SerialCode,String)
            End If
            If (_sub Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_sub")
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(_sub,String)
            End If
            Dim dataTable As Ds_Rp.Rp_TajhizDataTable = New Ds_Rp.Rp_TajhizDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_CableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Cable"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("مدل", "مدل")
            tableMapping.ColumnMappings.Add("تاریخ ساخت", "تاریخ ساخت")
            tableMapping.ColumnMappings.Add("تاریخ بهره برداری", "تاریخ بهره برداری")
            tableMapping.ColumnMappings.Add("سازنده", "سازنده")
            tableMapping.ColumnMappings.Add("کد دیسپاچینگ", "کد دیسپاچینگ")
            tableMapping.ColumnMappings.Add("سطح ولتاژ", "سطح ولتاژ")
            tableMapping.ColumnMappings.Add("جریان مجاز", "جریان مجاز")
            tableMapping.ColumnMappings.Add("مقطع کایل", "مقطع کایل")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select  Pm_Hadese_KhesaratDevice.Srl,Pm_Hadese_KhesaratDevice .Name as نام,Pm_Pos"& _ 
                "t.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"model as مدل , madedate as [تاریخ ساخت], UtilizationDate a"& _ 
                "s [تاریخ بهره برداری],Pm_Device_Sazande .Text as سازنده,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"DispatchingCode as [کد"& _ 
                " دیسپاچینگ],Voltaj as [سطح ولتاژ],ValidJaryan  as [جریان مجاز],CableMaghta as [م"& _ 
                "قطع کایل]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from Pm_Hadese_KhesaratDevice JOIN Pm_Post ON"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.srl = Srl_Pm_P"& _ 
                "ost Left JOIN Pm_Device_Sazande ON Srl_Pm_Device_Sazande = Pm_Device_Sazande .Sr"& _ 
                "l "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_DescriptableTajhiz=8"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(ValidJaryan = @validJaryan OR @valid"& _ 
                "Jaryan='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Voltaj = @Voltaj OR @Voltaj='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (CableMaghta=@Maghta OR @Ma"& _ 
                "ghta='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Hadese_KhesaratDevice.name=@Name OR @Name='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Srl_Pm_Pos"& _ 
                "t  = @Post OR @Post = -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Device_Sazande =@Sazande  OR @Sazande=-1)"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Model = @Model OR @Model='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate>=@StartMadeDate OR @StartMadeDa"& _ 
                "te='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(MadeDate<=@EndMadeDate OR @EndMadeDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate >= @"& _ 
                "StartUtiDate OR @StartUtiDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(UtilizationDate <=@EndUtiDate OR @EndUtiD"& _ 
                "ate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(DispatchingCode = @DispatchingCode OR @DispatchingCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Ser"& _ 
                "ialNumber  = @SerialCode OR @SerialCode='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@validJaryan", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "جریان مجاز", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Voltaj", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "سطح ولتاژ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maghta", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مقطع کایل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "نام", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sazande", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Device_Sazande", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Model", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "مدل", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndMadeDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ساخت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndUtiDate", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ بهره برداری", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DispatchingCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "کد دیسپاچینگ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerialCode", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SerialNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_CableDataTable, ByVal validJaryan As String, ByVal Voltaj As String, ByVal Maghta As String, ByVal Name As String, ByVal Post As Global.System.Nullable(Of Integer), ByVal Sazande As Global.System.Nullable(Of Integer), ByVal Model As String, ByVal StartMadeDate As String, ByVal EndMadeDate As String, ByVal StartUtiDate As String, ByVal EndUtiDate As String, ByVal DispatchingCode As String, ByVal SerialCode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (validJaryan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(validJaryan,String)
            End If
            If (Voltaj Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Voltaj,String)
            End If
            If (Maghta Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Maghta,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(SerialCode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal validJaryan As String, ByVal Voltaj As String, ByVal Maghta As String, ByVal Name As String, ByVal Post As Global.System.Nullable(Of Integer), ByVal Sazande As Global.System.Nullable(Of Integer), ByVal Model As String, ByVal StartMadeDate As String, ByVal EndMadeDate As String, ByVal StartUtiDate As String, ByVal EndUtiDate As String, ByVal DispatchingCode As String, ByVal SerialCode As String) As Ds_Rp.Rp_CableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (validJaryan Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(validJaryan,String)
            End If
            If (Voltaj Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Voltaj,String)
            End If
            If (Maghta Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Maghta,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Name,String)
            End If
            If (Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Sazande.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Sazande.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Model Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Model,String)
            End If
            If (StartMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(StartMadeDate,String)
            End If
            If (EndMadeDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EndMadeDate,String)
            End If
            If (StartUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(StartUtiDate,String)
            End If
            If (EndUtiDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EndUtiDate,String)
            End If
            If (DispatchingCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(DispatchingCode,String)
            End If
            If (SerialCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(SerialCode,String)
            End If
            Dim dataTable As Ds_Rp.Rp_CableDataTable = New Ds_Rp.Rp_CableDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_EibForm2TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_EibForm2"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("شماره فرم نقص", "شماره فرم نقص")
            tableMapping.ColumnMappings.Add("شماره اصلی", "شماره اصلی")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("نام واحد", "نام واحد")
            tableMapping.ColumnMappings.Add("تاریخ ارجاع", "تاریخ ارجاع")
            tableMapping.ColumnMappings.Add("تاریخ ثبت", "تاریخ ثبت")
            tableMapping.ColumnMappings.Add("نام گروه", "نام گروه")
            tableMapping.ColumnMappings.Add("رفع نقص", "رفع نقص")
            tableMapping.ColumnMappings.Add("فرم کار", "فرم کار")
            tableMapping.ColumnMappings.Add("شرح نقص", "شرح نقص")
            tableMapping.ColumnMappings.Add("نوع نقص", "نوع نقص")
            tableMapping.ColumnMappings.Add("توضیحات", "توضیحات")
            tableMapping.ColumnMappings.Add("نوع تیپ", "نوع تیپ")
            tableMapping.ColumnMappings.Add("تعداد فرم نقص", "تعداد فرم نقص")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select distinct  Pm_EibFormMaster.Srl ,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"EibFormNumber as [شماره فرم نقص],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Orgin"& _ 
                "alEibFormNumber as [شماره اصلی],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"OriginalEibFormDate as [تاریخ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post.Name "& _ 
                "as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Vahed.Name as [نام واحد],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_EibFormMaster.ReferenceDate as ["& _ 
                "تاریخ ارجاع],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_EibFormMaster.EibFormDate as [تاریخ ثبت],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Group.Name as [ن"& _ 
                "ام گروه]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&",EibFixDate as [رفع نقص]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&",WorkFormNumber as [فرم کار],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL((selec"& _ 
                "t dbo.CollectSharh(Pm_EibFormMaster.Srl ) ),'') as [شرح نقص] ,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL((select d"& _ 
                "bo.Collecteibtype(Pm_EibFormMaster.Srl ) ),'') as [نوع نقص] ,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WorkDis as [توضیح"& _ 
                "ات],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Posttip.Name as [نوع تیپ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select COUNT(*) from Pm_EibFormPeiro where"& _ 
                " Srl_Pm_EibFormMaster =Pm_EibFormMaster.Srl  ) as [تعداد فرم نقص]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from Pm_Eib"& _ 
                "FormMaster LEFT JOIN Pm_EibFormDetails ON Pm_EibFormDetails.Srl_Pm_EibFormMaster"& _ 
                " = Pm_EibFormMaster.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" LEFT OUTER JOin Pm_Post ON Pm_EibFormMaster.Srl_Pm_Po"& _ 
                "st = Pm_Post.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT OUTER JOin Pm_Vahed ON Pm_EibFormMaster.Srl_Pm_Vahed = P"& _ 
                "m_Vahed.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT OUTER JOin Pm_Group ON  Pm_EibFormMaster.Srl_Pm_Group = Pm_Gr"& _ 
                "oup.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT OUTER JOin Pm_PostDetails ON Pm_PostDetails .Srl_Pm_Post = Pm_Pos"& _ 
                "t.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT OUTER JOIN Pm_PostTip ON Pm_PostDetails .Srl_Pm_PostTip = Pm_PostTi"& _ 
                "p.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_EibFormMaster.Srl_Pm_Post in (select * from split(@Post"& _ 
                ",',')) OR @post='-1') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster.Srl not in (select Srl_Pm_EibForm"& _ 
                "MasterPeiro  from Pm_EibFormPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Group  = @G"& _ 
                "roup OR @Group=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_EibFormMaster.Srl_Pm_Vahed  = @Vahed OR @Vahed=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "AND (EibFormDate>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (EibFormDate<="& _ 
                "@EibFormToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate>=@OrginalEibFor"& _ 
                "mFromDate OR @OrginalEibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@OrginalEi"& _ 
                "bFormToDate OR @OrginalEibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (ReferenceDate>=@EibRefFromDate "& _ 
                "OR @EibRefFromDate ='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (ReferenceDate<=@EibRefToDate OR @EibRefToDate ='"& _ 
                "-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_EibType in (select * from Split(@EibType,',')) OR @EibType='-1"& _ 
                "')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (((EibFixDate =''  OR EibFixDate  IS NULL ) AND @Type=-1) OR (NOT EibFix"& _ 
                "Date ='' AND @Type=1) OR @Type=0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_EibFormMaster.EibFormNumber = @EibFor"& _ 
                "mN OR @EibFormN =-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_PostDetails.Srl_Pm_PostTip = @Tip OR @Tip = -1"&Global.Microsoft.VisualBasic.ChrW(9)&")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"order by EibFormNumber"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@post", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShowPeiro", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ثبت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ثبت", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrginalEibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrginalEibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibRefFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ارجاع", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibRefToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ ارجاع", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibType", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Type", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormN", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "شماره فرم نقص", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tip", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_PostTip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_EibForm2DataTable, ByVal post As String, ByVal ShowPeiro As String, ByVal Group As Global.System.Nullable(Of Integer), ByVal Vahed As Global.System.Nullable(Of Integer), ByVal EibFormFromDate As String, ByVal EibFormToDate As String, ByVal OrginalEibFormFromDate As String, ByVal OrginalEibFormToDate As String, ByVal EibRefFromDate As String, ByVal EibRefToDate As String, ByVal EibType As String, ByVal Type As String, ByVal EibFormN As Global.System.Nullable(Of Integer), ByVal Tip As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("post")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(post,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(EibFormFromDate,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(EibFormToDate,String)
            End If
            If (OrginalEibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(OrginalEibFormFromDate,String)
            End If
            If (OrginalEibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(OrginalEibFormToDate,String)
            End If
            If (EibRefFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EibRefFromDate,String)
            End If
            If (EibRefToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(EibRefToDate,String)
            End If
            If (EibType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EibType")
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EibType,String)
            End If
            If (Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Type")
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Type,String)
            End If
            If (EibFormN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EibFormN.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Tip.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Tip.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal post As String, ByVal ShowPeiro As String, ByVal Group As Global.System.Nullable(Of Integer), ByVal Vahed As Global.System.Nullable(Of Integer), ByVal EibFormFromDate As String, ByVal EibFormToDate As String, ByVal OrginalEibFormFromDate As String, ByVal OrginalEibFormToDate As String, ByVal EibRefFromDate As String, ByVal EibRefToDate As String, ByVal EibType As String, ByVal Type As String, ByVal EibFormN As Global.System.Nullable(Of Integer), ByVal Tip As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_EibForm2DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("post")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(post,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ShowPeiro,String)
            End If
            If (Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(EibFormFromDate,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(EibFormToDate,String)
            End If
            If (OrginalEibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(OrginalEibFormFromDate,String)
            End If
            If (OrginalEibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(OrginalEibFormToDate,String)
            End If
            If (EibRefFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(EibRefFromDate,String)
            End If
            If (EibRefToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(EibRefToDate,String)
            End If
            If (EibType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EibType")
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EibType,String)
            End If
            If (Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Type")
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(Type,String)
            End If
            If (EibFormN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EibFormN.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Tip.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Tip.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_EibForm2DataTable = New Ds_Rp.Rp_EibForm2DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Pm_PostPmTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Pm_PostPm"
            tableMapping.ColumnMappings.Add("انجام شده", "انجام شده")
            tableMapping.ColumnMappings.Add("کنسل شده", "کنسل شده")
            tableMapping.ColumnMappings.Add("انجام نشده", "انجام نشده")
            tableMapping.ColumnMappings.Add("کل", "کل")
            tableMapping.ColumnMappings.Add("نام تجهیز", "نام تجهیز")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select ISNULL(Perform .x ,0) as [انجام شده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(WithDelay .x ,0) as [کنسل شد"& _ 
                "ه],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(NoPerform .x ,0) as [انجام نشده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(Perform .x ,0)+ISNULL(With"& _ 
                "Delay .x ,0)+ISNULL(NoPerform .x ,0) as [کل],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"case when not Perform.[نام پست]"& _ 
                " IS null then Perform.[نام پست]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"when not WithDelay.[نام پست] IS null then WithD"& _ 
                "elay.[نام پست]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"when not NoPerform.[نام پست] IS null then NoPerform .[نام پست]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "end  as [نام تجهیز]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select COUNT(*) x,pm_post.Name as [نام پست],pm_pos"& _ 
                "t.Srl from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"pm_pmprogram JOIN Pm_Hadese_KhesaratDevice on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Srl_Pm_Hadese_Khesar"& _ 
                "atDevice =Pm_Hadese_KhesaratDevice.srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Left JOIN Pm_Post on Pm_Hadese_KhesaratD"& _ 
                "evice .Srl_Pm_Post = pm_post.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN Pm_TajhizName On Pm_TajhizName.Srl="& _ 
                "Srl_pm_TajhizName "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" left join Pm_ExecutePmProgram on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_PmProgram.Srl = Pm_Exe"& _ 
                "cutePmProgram .Srl_Pm_PmProgram"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where Pm_Date = ExecuteDate  and Pm_ExecutePmPr"& _ 
                "ogram.Srl  in (select MAX(srl)as srl from Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by Srl_Pm"& _ 
                "_PmProgram)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&" and Pm_Date >=@FromDate and Pm_Date<=@ToDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Group By Pm_post"& _ 
                ".Srl,pm_post.Name having (pm_post.Srl in (select * from Split(@Post,',')) or @Po"& _ 
                "st='')  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  )as Perform"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Full Join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select COUNT(*)x,pm_post.Name as [نام پست],"& _ 
                "pm_post.Srl from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"pm_pmprogram JOIN Pm_Hadese_KhesaratDevice on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Srl_Pm_Hadese_"& _ 
                "KhesaratDevice =Pm_Hadese_KhesaratDevice.srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Left JOIN Pm_Post on Pm_Hadese_Khe"& _ 
                "saratDevice .Srl_Pm_Post = pm_post.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN Pm_TajhizName On Pm_TajhizNam"& _ 
                "e.Srl=Srl_pm_TajhizName "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" left join Pm_ExecutePmProgram on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_PmProgram.Srl = "& _ 
                "Pm_ExecutePmProgram .Srl_Pm_PmProgram"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where ((Pm_Date <> ExecuteDate and not Ex"& _ 
                "ecuteDate is null"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"and  ExecuteDate<>'') or (Srl_Pm_CancelCause <>-1 and Pm_Dat"& _ 
                "e<>ExecuteDate ))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" and Pm_ExecutePmProgram.Srl  in (select MAX(srl)as srl fro"& _ 
                "m Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by Srl_Pm_PmProgram)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" and Pm_Date >=@FromDate an"& _ 
                "d Pm_Date<=@ToDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Group By Pm_post.Srl,pm_post.Name having (pm_post.Srl in "& _ 
                "(select * from Split(@Post,',')) or @Post='')  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&")as WithDelay"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on Perform .Srl "& _ 
                "= WithDelay.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"full join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select COUNT(*)x,pm_post.Name as [نام پست],pm_post"& _ 
                ".Srl  from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"pm_pmprogram JOIN Pm_Hadese_KhesaratDevice on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Srl_Pm_Hadese_Khesar"& _ 
                "atDevice =Pm_Hadese_KhesaratDevice.srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Left JOIN Pm_Post on Pm_Hadese_KhesaratD"& _ 
                "evice .Srl_Pm_Post = pm_post.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN Pm_TajhizName On Pm_TajhizName.Srl="& _ 
                "Srl_pm_TajhizName "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" left join Pm_ExecutePmProgram on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_PmProgram.Srl = Pm_Exe"& _ 
                "cutePmProgram .Srl_Pm_PmProgram"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where (ExecuteDate  is null or ExecuteDate ='')"& _ 
                " and  Srl_Pm_CancelCause  =-1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and"&Global.Microsoft.VisualBasic.ChrW(9)&"Pm_ExecutePmProgram.Srl  in (select MAX(srl)a"& _ 
                "s srl from Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by Srl_Pm_PmProgram)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" and Pm_Date >=@"& _ 
                "FromDate and Pm_Date<=@ToDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Group By Pm_post.Srl,pm_post.Name having (pm_p"& _ 
                "ost.Srl in (select * from Split(@Post,',')) or @Post='')  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&") as NoPerform"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on N"& _ 
                "oPerform  .Srl = WithDelay.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Post", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Pm_PostPmDataTable, ByVal FromDate As String, ByVal ToDate As String, ByVal Post As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ToDate,String)
            End If
            If (Post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Post")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Post,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FromDate As String, ByVal ToDate As String, ByVal Post As String) As Ds_Rp.Pm_PostPmDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ToDate,String)
            End If
            If (Post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Post")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Post,String)
            End If
            Dim dataTable As Ds_Rp.Pm_PostPmDataTable = New Ds_Rp.Pm_PostPmDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_TajhizPmTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_TajhizPm"
            tableMapping.ColumnMappings.Add("انجام شده", "انجام شده")
            tableMapping.ColumnMappings.Add("کنسل شده", "کنسل شده")
            tableMapping.ColumnMappings.Add("انجام نشده", "انجام نشده")
            tableMapping.ColumnMappings.Add("کل", "کل")
            tableMapping.ColumnMappings.Add("نام تجهیز", "نام تجهیز")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select t.[انجام شده] ,t.[کنسل شده],t.[انجام نشده] ,t.کل ,pm_post.name +'-'+ case "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"when srl_pm_tajhizname  is null then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Hadese_KhesaratDevice.Name"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"else "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"pm"& _ 
                "_tajhizname.name"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"end as [نام تجهیز] from"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select ISNULL(Perform .x ,0) as [انج"& _ 
                "ام شده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(WithDelay .x ,0) as [کنسل شده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(NoPerform .x ,0) as [ان"& _ 
                "جام نشده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ISNULL(Perform .x ,0)+ISNULL(WithDelay .x ,0)+ISNULL(NoPerform .x ,0"& _ 
                ") as [کل],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"case when not Perform.srl IS null then Perform.srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"when not WithD"& _ 
                "elay.srl IS null then WithDelay.srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"when not NoPerform.srl IS null then NoPerfo"& _ 
                "rm .srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"end  as srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select COUNT(*) x"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&",Srl_Pm_Hadese_KhesaratDevice "& _ 
                "as srl from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"pm_pmprogram  left join Pm_ExecutePmProgram on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_PmProgram.Srl ="& _ 
                " Pm_ExecutePmProgram .Srl_Pm_PmProgram"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where Pm_Date = ExecuteDate  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and Pm_Da"& _ 
                "te >@FromDate and Pm_Date<@ToDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Group By Srl_Pm_Hadese_KhesaratDevice having"& _ 
                " (Srl_Pm_Hadese_KhesaratDevice in (select * from Split(@tajhiz,',')) or @tajhiz="& _ 
                "'')  )as Perform"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Full Join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select COUNT(*) x,Srl_Pm_Hadese_KhesaratDevice as "& _ 
                "srl from  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"pm_pmprogram left join Pm_ExecutePmProgram on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_PmProgram.Srl = Pm"& _ 
                "_ExecutePmProgram .Srl_Pm_PmProgram"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where Pm_Date != ExecuteDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and not Exec"& _ 
                "uteDate  is null and ExecuteDate<>''"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and Pm_Date >@FromDate and Pm_Date<@ToDa"& _ 
                "te"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Group By Srl_Pm_Hadese_KhesaratDevice having (Srl_Pm_Hadese_KhesaratDevice i"& _ 
                "n (select * from Split(@tajhiz,',')) or @tajhiz=''))as WithDelay"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on Perform .Sr"& _ 
                "l = WithDelay.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"full join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select COUNT(*) x,Srl_Pm_Hadese_KhesaratDevice a"& _ 
                "s srl from  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"pm_pmprogram  left join Pm_ExecutePmProgram on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_PmProgram.Srl ="& _ 
                " Pm_ExecutePmProgram .Srl_Pm_PmProgram"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where ExecuteDate is null or ExecuteDate"& _ 
                "='' "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and Pm_Date >@FromDate and Pm_Date<@ToDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Group By Srl_Pm_Hadese_Kh"& _ 
                "esaratDevice having (Srl_Pm_Hadese_KhesaratDevice in (select * from Split(@tajhi"& _ 
                "z,',')) or @tajhiz='')) as NoPerform"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on NoPerform  .Srl = WithDelay.Srl )as t  "& _ 
                "JOIN Pm_Hadese_KhesaratDevice on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"t.srl =Pm_Hadese_KhesaratDevice.srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN"& _ 
                " Pm_TajhizName On Pm_TajhizName.Srl=Srl_pm_TajhizName "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN Pm_Post on Pm_"& _ 
                "post.srl = Srl_Pm_Post"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@tajhiz", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_TajhizPmDataTable, ByVal FromDate As String, ByVal ToDate As String, ByVal tajhiz As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ToDate,String)
            End If
            If (tajhiz Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tajhiz")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(tajhiz,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FromDate As String, ByVal ToDate As String, ByVal tajhiz As String) As Ds_Rp.Rp_TajhizPmDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ToDate,String)
            End If
            If (tajhiz Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tajhiz")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(tajhiz,String)
            End If
            Dim dataTable As Ds_Rp.Rp_TajhizPmDataTable = New Ds_Rp.Rp_TajhizPmDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_PmCancleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_PmCancle"
            tableMapping.ColumnMappings.Add("تجهیز", "تجهیز")
            tableMapping.ColumnMappings.Add("پست", "پست")
            tableMapping.ColumnMappings.Add("دلیل کنسلی", "دلیل کنسلی")
            tableMapping.ColumnMappings.Add("تاریخ pm", "تاریخ pm")
            tableMapping.ColumnMappings.Add("تاریخ انجام", "تاریخ انجام")
            tableMapping.ColumnMappings.Add("توضیحات", "توضیحات")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"case when Srl_pm_TajhizName IS null then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Hadese_KhesaratDevice .Name"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"else Pm_TajhizName .name end as  تجهیز,Pm_Post .Name as [پست] ,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_CancelCau"& _ 
                "se .Name as [دلیل کنسلی],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Date as [تاریخ pm],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_ExecutePmProgram .ExecuteD"& _ 
                "ate  as [تاریخ انجام],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_PmProgram.Description as [توضیحات] from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_PmProgra"& _ 
                "m LEFT JOIN Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"On Pm_PmProgram .Srl = Srl_Pm_PmProgram Left J"& _ 
                "Oin Pm_Hadese_KhesaratDevice "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ON Srl_Pm_Hadese_KhesaratDevice = Pm_Hadese_Khesa"& _ 
                "ratDevice .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Left JOIN Pm_TajhizName on Pm_TajhizName.Srl = Srl_pm_TajhizNam"& _ 
                "e "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left JOIN Pm_Post on pm_post.Srl = Pm_Hadese_KhesaratDevice .Srl_Pm_Post "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"L"& _ 
                "EFT JOIN Pm_CancelCause ON Pm_CancelCause .Srl = Srl_Pm_CancelCause "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where Pm_D"& _ 
                "ate >=@startDate and Pm_Date <=@EndDate "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Hadese_KhesaratDevice in ("& _ 
                "select * from Split(@Srl_Tajhiz,','))OR @Srl_Tajhiz='-1' )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and (Srl_Pm_Post in "& _ 
                "(select * from Split(@Srl_Post,','))OR @Srl_Post='-1' )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"And (Srl_Pm_CancelCause"& _ 
                " in (select * from Split(@Cancle,',')) Or @Cancle='-2')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@startDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ pm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDate", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ pm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Tajhiz", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Post", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cancle", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_PmCancleDataTable, ByVal startDate As String, ByVal EndDate As String, ByVal Srl_Tajhiz As String, ByVal Srl_Post As String, ByVal Cancle As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (startDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(startDate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(EndDate,String)
            End If
            If (Srl_Tajhiz Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Tajhiz")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Tajhiz,String)
            End If
            If (Srl_Post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Post")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Post,String)
            End If
            If (Cancle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Cancle")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Cancle,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal startDate As String, ByVal EndDate As String, ByVal Srl_Tajhiz As String, ByVal Srl_Post As String, ByVal Cancle As String) As Ds_Rp.Rp_PmCancleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (startDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(startDate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(EndDate,String)
            End If
            If (Srl_Tajhiz Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Tajhiz")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Tajhiz,String)
            End If
            If (Srl_Post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Post")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Post,String)
            End If
            If (Cancle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Cancle")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Cancle,String)
            End If
            Dim dataTable As Ds_Rp.Rp_PmCancleDataTable = New Ds_Rp.Rp_PmCancleDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Pm_SmsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Pm_Sms"
            tableMapping.ColumnMappings.Add("متن", "متن")
            tableMapping.ColumnMappings.Add("دریافت کننده", "دریافت کننده")
            tableMapping.ColumnMappings.Add("کاربر ارسال کننده", "کاربر ارسال کننده")
            tableMapping.ColumnMappings.Add("تاربخ", "تاربخ")
            tableMapping.ColumnMappings.Add("ساعت", "ساعت")
            tableMapping.ColumnMappings.Add("فرم نقص", "فرم نقص")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"select Matn as متن,'('+Pm_SMS.Mobile+')'+R.Name+' '+r.Family as [دریافت کننده],"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"S.Name+' '+s.Family as [کاربر ارسال کننده],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Tarikh as [تاربخ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"[Time] as ["& _ 
                "ساعت],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"case when not Pm_EibFormMaster .EibFormNumber IS null then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvar"& _ 
                "char(100),Pm_EibFormMaster .EibFormNumber)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"else"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'ندارد'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"end as [فرم نقص]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  f"& _ 
                "rom pm_sms Left Join Pm_Ashkhas  R on "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"R.Srl = Pm_Sms .Srl_Ashkhas_Reciever "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"L"& _ 
                "eft Join Pm_Ashkhas S on S .Srl = pm_sms.Srl_Ashkhas_Sender "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Left JOIN Pm_EibFo"& _ 
                "rmMaster on Srl_Pm_EibFormMaster =Pm_EibFormMaster .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Left JOIN pm_Post ON p"& _ 
                "m_Post.srl = Pm_EibFormMaster .Srl_Pm_Post"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where (Tarikh>= @Startdate or @Start"& _ 
                "date='' )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Tarikh<= @EndDate OR @EndDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"And (pm_sms.Srl_Ashkhas_Recie"& _ 
                "ver = @Reciever Or @Reciever=-1 )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_Post.srl = @Srl_Post Or  @Srl_Post =-"& _ 
                "1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (pm_sms.Srl_Ashkhas_Sender  = @Sender Or @Sender=-1 )"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Startdate", Global.System.Data.SqlDbType.NChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاربخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDate", Global.System.Data.SqlDbType.NChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاربخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Reciever", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Ashkhas_Reciever", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sender", Global.System.Data.SqlDbType.NChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Ashkhas_Sender", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Pm_SmsDataTable, ByVal Startdate As String, ByVal EndDate As String, ByVal Reciever As Global.System.Nullable(Of Integer), ByVal Srl_Post As Integer, ByVal Sender As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Startdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Startdate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(EndDate,String)
            End If
            If (Reciever.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Reciever.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Post,Integer)
            If (Sender Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Sender,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Startdate As String, ByVal EndDate As String, ByVal Reciever As Global.System.Nullable(Of Integer), ByVal Srl_Post As Integer, ByVal Sender As String) As Ds_Rp.Pm_SmsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Startdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Startdate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(EndDate,String)
            End If
            If (Reciever.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Reciever.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(Srl_Post,Integer)
            If (Sender Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Sender,String)
            End If
            Dim dataTable As Ds_Rp.Pm_SmsDataTable = New Ds_Rp.Pm_SmsDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class rp_eibformTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "rp_eibform"
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("شماره فرم نقص", "شماره فرم نقص")
            tableMapping.ColumnMappings.Add("شماره اصلی", "شماره اصلی")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("نام پست", "نام پست")
            tableMapping.ColumnMappings.Add("نام واحد", "نام واحد")
            tableMapping.ColumnMappings.Add("تاریخ ارجاع", "تاریخ ارجاع")
            tableMapping.ColumnMappings.Add("تاریخ ثبت", "تاریخ ثبت")
            tableMapping.ColumnMappings.Add("نام گروه", "نام گروه")
            tableMapping.ColumnMappings.Add("رفع نقص", "رفع نقص")
            tableMapping.ColumnMappings.Add("فرم کار", "فرم کار")
            tableMapping.ColumnMappings.Add("شرح نقص", "شرح نقص")
            tableMapping.ColumnMappings.Add("نوع نقص", "نوع نقص")
            tableMapping.ColumnMappings.Add("توضیحات", "توضیحات")
            tableMapping.ColumnMappings.Add("نوع تیپ", "نوع تیپ")
            tableMapping.ColumnMappings.Add("تعداد فرم نقص", "تعداد فرم نقص")
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("red", "red")
            tableMapping.ColumnMappings.Add("blue", "blue")
            tableMapping.ColumnMappings.Add("green", "green")
            tableMapping.ColumnMappings.Add("expireday", "expireday")
            tableMapping.ColumnMappings.Add("IsUnDecided", "IsUnDecided")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select t.* from ( select Pm_EibFormMaster.Srl ,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"EibFormNumber as [شماره فرم نقص]"& _ 
                ","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"OrginalEibFormNumber as [شماره اصلی],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"OriginalEibFormDate as [تاریخ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Po"& _ 
                "st.Name as [نام پست],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Vahed.Name as [نام واحد],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_EibFormMaster.ReferenceD"& _ 
                "ate as [تاریخ ارجاع],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_EibFormMaster.EibFormDate as [تاریخ ثبت],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Group.Na"& _ 
                "me as [نام گروه]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&",EibFixDate as [رفع نقص]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&",WorkFormNumber as [فرم کار],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Eibdi"& _ 
                "s  as [شرح نقص] ,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"pm_eibtype.name  as [نوع نقص] ,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WorkDis as [توضیحات],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Po"& _ 
                "sttip.Name as [نوع تیپ],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select COUNT(*) from Pm_EibFormPeiro where Srl_Pm_Eib"& _ 
                "FormMaster =Pm_EibFormMaster.Srl  ) as [تعداد فرم نقص]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&",pm_ImportantPercent .na"& _ 
                "me"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"red,blue,green,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"expireday,IsUnDecided"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from Pm_EibFormMaster LEFT JOIN"& _ 
                " Pm_EibFormDetails ON Pm_EibFormDetails.Srl_Pm_EibFormMaster = Pm_EibFormMaster."& _ 
                "Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN pm_ImportantPercent ON pm_ImportantPercent .srl=Pm_EibFormDetail"& _ 
                "s .srl_pm_Importantpercent"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN Pm_eibtype on Pm_EibFormDetails.srl_Pm_eib"& _ 
                "type=Pm_eibtype .srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" LEFT OUTER JOin Pm_Post ON Pm_EibFormMaster.Srl_Pm_Post ="& _ 
                " Pm_Post.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT OUTER JOin Pm_Vahed ON Pm_EibFormMaster.Srl_Pm_Vahed = Pm_Va"& _ 
                "hed.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT OUTER JOin Pm_Group ON  Pm_EibFormMaster.Srl_Pm_Group = Pm_Group."& _ 
                "Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT OUTER JOin Pm_PostDetails ON Pm_PostDetails .Srl_Pm_Post = Pm_Post.Sr"& _ 
                "l "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT OUTER JOIN Pm_PostTip ON Pm_PostDetails .Srl_Pm_PostTip = Pm_PostTip.Sr"& _ 
                "l"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_EibFormMaster.Srl_Pm_Post in (select * from split(@Post,','"& _ 
                ")) OR @post='-1') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( (Pm_EibFormMaster.Srl not in (select Srl_Pm_EibFormMast"& _ 
                "erPeiro  from Pm_EibFormPeiro)) OR (@ShowPeiro=-1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Group  = @Group"& _ 
                " OR @Group=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_EibFormMaster.Srl_Pm_Vahed  = @Vahed OR @Vahed=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND "& _ 
                "(EibFormDate>=@EibFormFromDate OR @EibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (EibFormDate<=@Eib"& _ 
                "FormToDate OR @EibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate>=@OrginalEibFormFro"& _ 
                "mDate OR @OrginalEibFormFromDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (OriginalEibFormDate<=@OrginalEibFor"& _ 
                "mToDate OR @OrginalEibFormToDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (srl_pm_posttype=@PostType OR @PostT"& _ 
                "ype=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (ReferenceDate>=@EibRefFromDate OR @EibRefFromDate ='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Ref"& _ 
                "erenceDate<=@EibRefToDate OR @EibRefToDate ='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_EibType in (selec"& _ 
                "t * from Split(@EibType,',')) OR @EibType='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_EibFormDetails .srl_pm_"& _ 
                "hadese_khesaratdevice in (select * from Split(@Tjahiz,',')) OR @Tjahiz='-2')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AN"& _ 
                "D "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"((EibFixDate =''  OR EibFixDate  IS NULL ) AND @Type=-1 AND( IsUnDecided<"& _ 
                ">1  OR IsUnDecided is null) )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" OR ((NOT EibFixDate ='' Or IsUnDecided=1 )AND( "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" (IsUnDecided=@IsUnDecided OR ( @IsUnDecided=0 and IsUnDecided is null) OR @IsU"& _ 
                "nDecided=-1) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    AND @Type=1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  OR @Type=0"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_EibFormMaster.EibF"& _ 
                "ormNumber = @EibFormN OR @EibFormN =-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_PostDetails.Srl_Pm_PostTip = @Ti"& _ 
                "p OR @Tip = -1"&Global.Microsoft.VisualBasic.ChrW(9)&")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_EibFormDetails.srl_pm_importantpercent=@Important OR @"& _ 
                "Important=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&") as t join (select * from Split(@WorkDis,','))as t2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on t.توضیحا"& _ 
                "ت like '%'+t2.Value+ '%'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Or @WorkDis=''"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"order by t.[شماره فرم نقص] "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WorkDis", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@post", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShowPeiro", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrginalEibFormFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrginalEibFormToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PostType", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibRefFromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibRefToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibType", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tjahiz", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Type", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsUnDecided", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EibFormN", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tip", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Important", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As Ds_Rp.rp_eibformDataTable,  _
                    ByVal WorkDis As String,  _
                    ByVal post As String,  _
                    ByVal ShowPeiro As String,  _
                    ByVal Group As Global.System.Nullable(Of Integer),  _
                    ByVal Vahed As Global.System.Nullable(Of Integer),  _
                    ByVal EibFormFromDate As String,  _
                    ByVal EibFormToDate As String,  _
                    ByVal OrginalEibFormFromDate As String,  _
                    ByVal OrginalEibFormToDate As String,  _
                    ByVal PostType As Global.System.Nullable(Of Integer),  _
                    ByVal EibRefFromDate As String,  _
                    ByVal EibRefToDate As String,  _
                    ByVal EibType As String,  _
                    ByVal Tjahiz As String,  _
                    ByVal Type As String,  _
                    ByVal IsUnDecided As Global.System.Nullable(Of Integer),  _
                    ByVal EibFormN As Global.System.Nullable(Of Integer),  _
                    ByVal Tip As Global.System.Nullable(Of Integer),  _
                    ByVal Important As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (WorkDis Is Nothing) Then
                Throw New Global.System.ArgumentNullException("WorkDis")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(WorkDis,String)
            End If
            If (post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("post")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(post,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ShowPeiro,String)
            End If
            If (Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(EibFormFromDate,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(EibFormToDate,String)
            End If
            If (OrginalEibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(OrginalEibFormFromDate,String)
            End If
            If (OrginalEibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(OrginalEibFormToDate,String)
            End If
            If (PostType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(PostType.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (EibRefFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EibRefFromDate,String)
            End If
            If (EibRefToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(EibRefToDate,String)
            End If
            If (EibType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EibType")
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EibType,String)
            End If
            If (Tjahiz Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tjahiz")
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Tjahiz,String)
            End If
            If (Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Type")
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(Type,String)
            End If
            If (IsUnDecided.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(IsUnDecided.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (EibFormN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(EibFormN.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Tip.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(Tip.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Important.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(Important.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal WorkDis As String,  _
                    ByVal post As String,  _
                    ByVal ShowPeiro As String,  _
                    ByVal Group As Global.System.Nullable(Of Integer),  _
                    ByVal Vahed As Global.System.Nullable(Of Integer),  _
                    ByVal EibFormFromDate As String,  _
                    ByVal EibFormToDate As String,  _
                    ByVal OrginalEibFormFromDate As String,  _
                    ByVal OrginalEibFormToDate As String,  _
                    ByVal PostType As Global.System.Nullable(Of Integer),  _
                    ByVal EibRefFromDate As String,  _
                    ByVal EibRefToDate As String,  _
                    ByVal EibType As String,  _
                    ByVal Tjahiz As String,  _
                    ByVal Type As String,  _
                    ByVal IsUnDecided As Global.System.Nullable(Of Integer),  _
                    ByVal EibFormN As Global.System.Nullable(Of Integer),  _
                    ByVal Tip As Global.System.Nullable(Of Integer),  _
                    ByVal Important As Global.System.Nullable(Of Integer)) As Ds_Rp.rp_eibformDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (WorkDis Is Nothing) Then
                Throw New Global.System.ArgumentNullException("WorkDis")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(WorkDis,String)
            End If
            If (post Is Nothing) Then
                Throw New Global.System.ArgumentNullException("post")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(post,String)
            End If
            If (ShowPeiro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ShowPeiro")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ShowPeiro,String)
            End If
            If (Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (EibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(EibFormFromDate,String)
            End If
            If (EibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(EibFormToDate,String)
            End If
            If (OrginalEibFormFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(OrginalEibFormFromDate,String)
            End If
            If (OrginalEibFormToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(OrginalEibFormToDate,String)
            End If
            If (PostType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(PostType.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (EibRefFromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(EibRefFromDate,String)
            End If
            If (EibRefToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(EibRefToDate,String)
            End If
            If (EibType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EibType")
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(EibType,String)
            End If
            If (Tjahiz Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tjahiz")
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Tjahiz,String)
            End If
            If (Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Type")
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(Type,String)
            End If
            If (IsUnDecided.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(IsUnDecided.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (EibFormN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(EibFormN.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Tip.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(Tip.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Important.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(Important.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.rp_eibformDataTable = New Ds_Rp.rp_eibformDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_MonthPmTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_MonthPm"
            tableMapping.ColumnMappings.Add("M", "M")
            tableMapping.ColumnMappings.Add("ماه", "ماه")
            tableMapping.ColumnMappings.Add("کنسل شده", "کنسل شده")
            tableMapping.ColumnMappings.Add("انجام شده", "انجام شده")
            tableMapping.ColumnMappings.Add("انجام نشده", "انجام نشده")
            tableMapping.ColumnMappings.Add("کل", "کل")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [pm_month] ([M], [Name]) VALUES (@M, @ماه)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@M", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "M", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ماه", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ماه", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = ""&Global.Microsoft.VisualBasic.ChrW(9)&"select "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"x.M  as M ,x.Name ماه,isnull(cancle,0)as [کنسل شده]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&" ,isnull(Exe,0) "& _ 
                "as [انجام شده],isnull(Noexe,0) as [انجام نشده],isnull(Alpm,0) [کل]   from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(se"& _ 
                "lect COUNT(distinct  isnull(Pm_PmProgram .srl,0) )as Exe  ,SUBSTRING(pm_date,6,2"& _ 
                ")as M from Pm_PmProgram left join Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"on Pm_PmProgram .Srl = "& _ 
                "Srl_Pm_PmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"where Pm_Date = ExecuteDate and Pm_ExecutePmProgram.Srl  in "& _ 
                "((select MAX(srl)as srl from Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by Srl_Pm_PmProgram)) "& _ 
                "and SUBSTRING(pm_date,0,5)=@year"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by SUBSTRING(pm_date,6,2))as ExecutePm "& _ 
                "Full JOIN "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(select COUNT(distinct ISNULL( Pm_PmProgram .srl ,0))as cancle  ,"& _ 
                "SUBSTRING(pm_date,6,2)as M from Pm_PmProgram left join Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"on"& _ 
                " Pm_PmProgram .Srl = Srl_Pm_PmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"where  Pm_ExecutePmProgram.Srl  in (sel"& _ 
                "ect MAX(srl)as srl from Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by Srl_Pm_PmProgram) and (("& _ 
                "Pm_Date <> ExecuteDate and not ExecuteDate is null"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"and  ExecuteDate<>'') or (S"& _ 
                "rl_Pm_CancelCause <>-1 and Pm_Date<>ExecuteDate ))and SUBSTRING(pm_date,0,5)=@ye"& _ 
                "ar"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by SUBSTRING(pm_date,6,2))as CanclePm  on ExecutePm .M = CanclePm .m"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"full join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(select COUNT(distinct isnull(Pm_PmProgram .srl ,0))as Noexe  ,SUB"& _ 
                "STRING(pm_date,6,2)as M from Pm_PmProgram left join Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"on Pm"& _ 
                "_PmProgram .Srl = Srl_Pm_PmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"where (ExecuteDate  is null or ExecuteDate"& _ 
                " ='') and  Srl_Pm_CancelCause  =-1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"and Pm_ExecutePmProgram.Srl  in ((select MA"& _ 
                "X(srl)as srl from Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by Srl_Pm_PmProgram))and SUBSTRIN"& _ 
                "G(pm_date,0,5)=@year"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by SUBSTRING(pm_date,6,2))as NoexecutePm on CancleP"& _ 
                "m.M =NoexecutePm .m or NoexecutePm .M = ExecutePm .m"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Full JOIN "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(select COUN"& _ 
                "T(distinct isnull(Pm_PmProgram .srl,0) )as Alpm  ,SUBSTRING(pm_date,6,2)as M fro"& _ 
                "m Pm_PmProgram left join Pm_ExecutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"on Pm_PmProgram .Srl = Srl_Pm_Pm"& _ 
                "Program "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"where Pm_ExecutePmProgram.Srl  in ((select MAX(srl)as srl from Pm_Exe"& _ 
                "cutePmProgram "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by Srl_Pm_PmProgram))and SUBSTRING(pm_date,0,5)=@year"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"g"& _ 
                "roup by SUBSTRING(pm_date,6,2))as AllPm on CanclePm.M =AllPm  .m or NoexecutePm "& _ 
                ".M = AllPm .m OR AllPm .M =CanclePm .m"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"right join pm_month as x  on CanclePm.M"& _ 
                " =x.m or NoexecutePm .M = x .m OR x .M =CanclePm .m"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"order by m"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@year", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_MonthPmDataTable, ByVal year As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("year")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(year,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal year As String) As Ds_Rp.Rp_MonthPmDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("year")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(year,String)
            End If
            Dim dataTable As Ds_Rp.Rp_MonthPmDataTable = New Ds_Rp.Rp_MonthPmDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Ds_Rp.Rp_MonthPmDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Ds_Rp) As Integer
            Return Me.Adapter.Update(dataSet, "Rp_MonthPm")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_WorkForm_KargoziniTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_WorkForm_Kargozini"
            tableMapping.ColumnMappings.Add("نام و نام خانوادگی", "نام و نام خانوادگی")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("ساعت شروع", "ساعت شروع")
            tableMapping.ColumnMappings.Add("ساعت پایان", "ساعت پایان")
            tableMapping.ColumnMappings.Add("مسافت", "مسافت")
            tableMapping.ColumnMappings.Add("پرسنلی کد", "پرسنلی کد")
            tableMapping.ColumnMappings.Add("مبدا حرکت", "مبدا حرکت")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Ashkhas .PersonalCode as [پرسنلی کد],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Ashkhas .Name+' '+Pm_Ashkha"& _ 
                "s .Family as [نام و نام خانوادگی],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_WorkFrom_Detail .WorkFormTarikh  as تاریخ"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Post .Name as [محل فعالیت],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"p2.name as [مبدا حرکت],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_WorkFrom_Detail."& _ 
                "BeginWorkSat as [ساعت شروع],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_WorkFrom_Detail.EndWorkSat as [ساعت پایان],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IS"& _ 
                "NULL(Pm_Distance.Distance,0) as مسافت"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from Pm_WorkFrom_Detail join Pm_Ashkha"& _ 
                "s on Srl_Pm_Ashkhas =Pm_Ashkhas.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" join Pm_Post on Pm_Post .Srl = Srl_Pm_Pos"& _ 
                "t_From "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join Pm_Distance on(Srl_Post1 =Pm_WorkFrom_Detail . Srl_Pm_Post_Fr"& _ 
                "om and Srl_Post2 =Pm_WorkFrom_Detail . Srl_Pm_Post_To )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Join Pm_Post as p2 on p"& _ 
                "2.srl = Pm_WorkFrom_Detail .srl_pm_post_to"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkFrom_Detail.Srl_Pm_"& _ 
                "Post_From = @Srl_Pm_Post_From or @Srl_Pm_Post_From=-1)  AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkFrom_Deta"& _ 
                "il.Srl_Pm_Group = @Srl_Pm_Group or @Srl_Pm_Group=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkFrom_Detail.S"& _ 
                "rl_Pm_Vahed = @Srl_Pm_Vahed or @Srl_Pm_Vahed=-1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkFrom_Detail .Wo"& _ 
                "rkFormTarikh>= @BeginDate or @BeginDate='-1') AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(Pm_WorkFrom_Detail .WorkFor"& _ 
                "mTarikh<= @EbdDate or @EbdDate='-1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Srl_Pm_Ashkhas= @Ashkhas Or @Ashkhas "& _ 
                "= -1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"order by family,pm_ashkhas.name,Pm_WorkFrom_Detail.WorkFormTarikh"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Post_From", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Post_From", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Group", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeginDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EbdDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ashkhas", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_WorkForm_KargoziniDataTable, ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Ashkhas As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(EbdDate,String)
            End If
            If (Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Pm_Post_From As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Group As Global.System.Nullable(Of Integer), ByVal Srl_Pm_Vahed As Global.System.Nullable(Of Integer), ByVal BeginDate As String, ByVal EbdDate As String, ByVal Ashkhas As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_WorkForm_KargoziniDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Pm_Post_From.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Pm_Post_From.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Group.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Pm_Group.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Srl_Pm_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Pm_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (BeginDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(BeginDate,String)
            End If
            If (EbdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(EbdDate,String)
            End If
            If (Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_WorkForm_KargoziniDataTable = New Ds_Rp.Rp_WorkForm_KargoziniDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TimeCard_WorkFormTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TimeCard_WorkForm"
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("ساعت شروع", "ساعت شروع")
            tableMapping.ColumnMappings.Add("ساعت پایان", "ساعت پایان")
            tableMapping.ColumnMappings.Add("مجموع اضافه کار", "مجموع اضافه کار")
            tableMapping.ColumnMappings.Add("فاصله", "فاصله")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select Pm_WorkForm_Master.No as [شماره] ,Pm_Distance.Distance as [فاصله], Pm_Hazi"& _ 
                "neCode.Code as [کد هزینه] ,Pm_Post .Name[محل فعالیت],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_WorkFrom_Detail . Begi"& _ 
                "nWorkSat [ساعت شروع], Pm_WorkFrom_Detail .EndWorkSat [ساعت پایان],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvar"& _ 
                "char,("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(convert(int,SUBSTRING(EzafeKAr ,0,CHARINDEX (':',EzafeKAr ,0)))+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"((con"& _ 
                "vert(int,SUBSTRING(EzafeKarTaradod  ,0,CHARINDEX (':',EzafeKarTaradod ,0)))))-"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "((convert(int,SUBSTRING(MazadEzafeKar  ,0,CHARINDEX (':',MazadEzafeKar  ,0))))))"& _ 
                "*60+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(int,SUBSTRING(EzafeKAr ,CHARINDEX (':',EzafeKAr ,0)+1,LEN(EzafeKAr"& _ 
                " )))+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(int,SUBSTRING(EzafeKarTaradod ,CHARINDEX (':',EzafeKarTaradod ,0)"& _ 
                "+1,LEN(EzafeKarTaradod )))-"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(int,SUBSTRING(MazadEzafeKar ,CHARINDEX (':'"& _ 
                ",MazadEzafeKar ,0)+1,LEN(MazadEzafeKar ))))/60)+':'+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(nvarchar,("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(conve"& _ 
                "rt(int,SUBSTRING(EzafeKAr ,0,CHARINDEX (':',EzafeKAr ,0)))+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"((convert(int,SUBST"& _ 
                "RING(EzafeKarTaradod  ,0,CHARINDEX (':',EzafeKarTaradod ,0)))))-"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"((convert(int,"& _ 
                "SUBSTRING(MazadEzafeKar  ,0,CHARINDEX (':',MazadEzafeKar  ,0))))))*60+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert("& _ 
                "int,SUBSTRING(EzafeKAr ,CHARINDEX (':',EzafeKAr ,0)+1,LEN(EzafeKAr )))+"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert"& _ 
                "(int,SUBSTRING(EzafeKarTaradod ,CHARINDEX (':',EzafeKarTaradod ,0)+1,LEN(EzafeKa"& _ 
                "rTaradod )))-"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"convert(int,SUBSTRING(MazadEzafeKar ,CHARINDEX (':',MazadEzafeKar"& _ 
                " ,0)+1,LEN(MazadEzafeKar ))))%60)as [مجموع اضافه کار]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_HazineCode  joi"& _ 
                "n Pm_WorkFrom_Detail on Srl_HazineCode = Pm_HazineCode .Srl join Pm_Distance on "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Srl_Pm_Post_From= Pm_Distance.Srl_Post1 and"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  Srl_Pm_Post_To=Pm_Distance.Srl"& _ 
                "_Post2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"join Pm_Post on Pm_Post .Srl = Srl_Pm_Post_From join Pm_WorkForm_Master "& _ 
                "on Pm_WorkForm_Master.srl="&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Srl_Pm_WorkForm_Master  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where Srl_Pm_Ashkhas"& _ 
                " = @Ashkhas and Pm_WorkFrom_Detail .WorkFormTarikh =@Tarikh"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ashkhas", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Ashkhas", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "WorkFormTarikh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.TimeCard_WorkFormDataTable, ByVal Ashkhas As Global.System.Nullable(Of Integer), ByVal Tarikh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Tarikh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Tarikh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Ashkhas As Global.System.Nullable(Of Integer), ByVal Tarikh As String) As Ds_Rp.TimeCard_WorkFormDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Ashkhas.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Ashkhas.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Tarikh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Tarikh,String)
            End If
            Dim dataTable As Ds_Rp.TimeCard_WorkFormDataTable = New Ds_Rp.TimeCard_WorkFormDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_HazineCodeEzafeKarTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_HazineCodeEzafeKar"
            tableMapping.ColumnMappings.Add("srl", "srl")
            tableMapping.ColumnMappings.Add("تعداد روز", "تعداد روز")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("مجموع اضافه کار", "مجموع اضافه کار")
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("PersonalCode", "PersonalCode")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Rp_HazineCodeEzafeKar"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Ashkhas", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fromdate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_HazineCodeEzafeKarDataTable, ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Ds_Rp.Rp_HazineCodeEzafeKarDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_HazineCodeEzafeKarDataTable = New Ds_Rp.Rp_HazineCodeEzafeKarDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_SummaryExtraWorkFanavaranTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_SummaryExtraWorkFanavaran"
            tableMapping.ColumnMappings.Add("کد شناسایی", "کد شناسایی")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("Srl_Pm_Company", "Srl_Pm_Company")
            tableMapping.ColumnMappings.Add("جمع اضافه کار تردد", "جمع اضافه کار تردد")
            tableMapping.ColumnMappings.Add("اضافه کار ستاد", "اضافه کار ستاد")
            tableMapping.ColumnMappings.Add("اضافه کار فرم کار", "اضافه کار فرم کار")
            tableMapping.ColumnMappings.Add("جمع مازاد اضافه کار", "جمع مازاد اضافه کار")
            tableMapping.ColumnMappings.Add("Srl_Ashkhas", "Srl_Ashkhas")
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Pm_Ashkhas] WHERE (((@IsNull_کد_شناسایی = 1 AND [PersonalCode] IS NU"& _ 
                "LL) OR ([PersonalCode] = @Original_کد_شناسایی)) AND ((@IsNull_Srl_Pm_Company = 1"& _ 
                " AND [Srl_Pm_Company] IS NULL) OR ([Srl_Pm_Company] = @Original_Srl_Pm_Company))"& _ 
                " AND ([Srl] = @Original_Srl))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_کد_شناسایی", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_کد_شناسایی", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Srl", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Pm_Ashkhas] ([PersonalCode], [Srl_Pm_Company]) VALUES (@کد_شناسایی, "& _ 
                "@Srl_Pm_Company)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@کد_شناسایی", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Pm_Ashkhas] SET [PersonalCode] = @کد_شناسایی, [Srl_Pm_Company] = @Srl_Pm_"& _ 
                "Company WHERE (((@IsNull_کد_شناسایی = 1 AND [PersonalCode] IS NULL) OR ([Persona"& _ 
                "lCode] = @Original_کد_شناسایی)) AND ((@IsNull_Srl_Pm_Company = 1 AND [Srl_Pm_Com"& _ 
                "pany] IS NULL) OR ([Srl_Pm_Company] = @Original_Srl_Pm_Company)) AND ([Srl] = @O"& _ 
                "riginal_Srl))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@کد_شناسایی", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_کد_شناسایی", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_کد_شناسایی", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Srl", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Pm_Ashkhas.PersonalCode AS [کد شناسایی], Pm_Ashkhas.Family + ' - ' + Pm_As"& _ 
                "hkhas.Name AS نام, Pm_Ashkhas.Srl_Pm_Company, ISNULL(t1.[جمع اضافه کار تردد], '0"& _ 
                "0:00') AS [جمع اضافه کار تردد], ISNULL(t.[اضافه کار ستاد], '00:00') AS [اضافه کا"& _ 
                "ر ستاد], ISNULL(t1.[اضافه کار فرم کار], '00:00') AS [اضافه کار فرم کار], ISNULL("& _ 
                "t1.[جمع مازاد اضافه کار], '00:00') AS [جمع مازاد اضافه کار], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(CASE WHEN t.Srl_"& _ 
                "Pm_ashkhas IS NULL THEN t1.Srl_Pm_Ashkhas ELSE t.Srl_Pm_ashkhas END) AS Srl_Ashk"& _ 
                "has, Pm_Ashkhas.Srl FROM (SELECT CONVERT (nvarchar(8), SUM(DATEDIFF(Minute, '0:0"& _ 
                "0:00', CONVERT (time(0), ISNULL(EzafeKAr, '00:00:00')))) / 60) + ':' + CONVERT ("& _ 
                "nvarchar(8), SUM(DATEDIFF(Minute, '0:00:00', CONVERT (time(0), ISNULL(EzafeKAr, "& _ 
                "'00:00:00')))) % 60) AS [اضافه کار فرم کار], CONVERT (nvarchar(8), SUM(DATEDIFF("& _ 
                "Minute, '0:00:00', CONVERT (time(0), ISNULL(EzafeKarTaradod, '00:00:00')))) / 60"& _ 
                ") + ':' + CONVERT (nvarchar(8), SUM(DATEDIFF(Minute, '0:00:00', CONVERT (time(0)"& _ 
                ", ISNULL(EzafeKarTaradod, '00:00:00')))) % 60) AS [جمع اضافه کار تردد], CONVERT "& _ 
                "(nvarchar(8), SUM(DATEDIFF(Minute, '0:00:00', CONVERT (time(0), ISNULL(MazadEzaf"& _ 
                "eKar, '00:00:00')))) / 60) + ':' + CONVERT (nvarchar(8), SUM(DATEDIFF(Minute, '0"& _ 
                ":00:00', CONVERT (time(0), ISNULL(MazadEzafeKar, '00:00:00')))) % 60) AS [جمع ما"& _ 
                "زاد اضافه کار], Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" FROM Pm_WorkFrom_Detail WHERE (WorkFormTarikh"& _ 
                " >= @FromDate) AND (WorkFormTarikh <= @ToDate) GROUP BY Srl_Pm_Ashkhas) AS t1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                " FULL OUTER JOIN "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  (SELECT CONVERT (nvarchar, SUM(DATEDIFF(Minute, '0:00:00', "& _ 
                "CONVERT (time(0), ISNULL(BeginTimeExtraWork, '00:00:00'))) + DATEDIFF(Minute, '0"& _ 
                ":00:00', CONVERT (time(0), ISNULL(EndTimeExtraWork, '00:00:00'))) + DATEDIFF(Min"& _ 
                "ute, '0:00:00', CONVERT (time(0), ISNULL(HolidayExtraWork, '00:00:00')))) / 60) "& _ 
                "+ ':' + CONVERT (nvarchar, SUM(DATEDIFF(Minute, '0:00:00', CONVERT (time(0), ISN"& _ 
                "ULL(BeginTimeExtraWork, '00:00:00'))) + DATEDIFF(Minute, '0:00:00', CONVERT (tim"& _ 
                "e(0), ISNULL(EndTimeExtraWork, '00:00:00'))) + DATEDIFF(Minute, '0:00:00', CONVE"& _ 
                "RT (time(0), ISNULL(HolidayExtraWork, '00:00:00')))) % 60) AS [اضافه کار ستاد], "& _ 
                "Srl_Pm_ashkhas FROM Pm_TimeCard"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" WHERE (Tarikh >= @FromDate) AND (Tarikh <= @To"& _ 
                "Date) GROUP BY Srl_Pm_ashkhas) AS t ON t.Srl_Pm_ashkhas = t1.Srl_Pm_Ashkhas INNE"& _ 
                "R JOIN Pm_Ashkhas ON t.Srl_Pm_ashkhas = Pm_Ashkhas.Srl OR t1.Srl_Pm_Ashkhas = Pm"& _ 
                "_Ashkhas.Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (Pm_Ashkhas.Srl_Pm_Company = '1')and (Pm_Ashkhas.srl_pm_vah"& _ 
                "ed=@Srl_vahed or @Srl_vahed=-1) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and (pm_ashkhas.srl in (select srl_acc_ashkhas"& _ 
                " from Pm_GroupMember  where srl_pm_group=@Srl_Group) or @Srl_Group=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY"& _ 
                " نام"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Group", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_SummaryExtraWorkFanavaranDataTable, ByVal Srl_vahed As Global.System.Nullable(Of Integer), ByVal Srl_Group As String, ByVal FromDate As String, ByVal ToDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Group")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Group,String)
            End If
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_vahed As Global.System.Nullable(Of Integer), ByVal Srl_Group As String, ByVal FromDate As String, ByVal ToDate As String) As Ds_Rp.Rp_SummaryExtraWorkFanavaranDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Group")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Group,String)
            End If
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_SummaryExtraWorkFanavaranDataTable = New Ds_Rp.Rp_SummaryExtraWorkFanavaranDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Ds_Rp.Rp_SummaryExtraWorkFanavaranDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Ds_Rp) As Integer
            Return Me.Adapter.Update(dataSet, "Rp_SummaryExtraWorkFanavaran")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_کد_شناسایی As Long, ByVal Original_Srl_Pm_Company As Global.System.Nullable(Of Integer), ByVal Original_Srl As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_کد_شناسایی,Long)
            If (Original_Srl_Pm_Company.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Srl_Pm_Company.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Srl,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal کد_شناسایی As Long, ByVal Srl_Pm_Company As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(کد_شناسایی,Long)
            If (Srl_Pm_Company.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Srl_Pm_Company.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal کد_شناسایی As Long, ByVal Srl_Pm_Company As Global.System.Nullable(Of Integer), ByVal Original_کد_شناسایی As Long, ByVal Original_Srl_Pm_Company As Global.System.Nullable(Of Integer), ByVal Original_Srl As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(کد_شناسایی,Long)
            If (Srl_Pm_Company.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Srl_Pm_Company.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_کد_شناسایی,Long)
            If (Original_Srl_Pm_Company.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Srl_Pm_Company.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_Srl,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_ExtraWorkAzarakhshTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_ExtraWorkAzarakhsh"
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("Srl_Pm_Company", "Srl_Pm_Company")
            tableMapping.ColumnMappings.Add("نام فرد", "نام فرد")
            tableMapping.ColumnMappings.Add("کد شناسایی", "کد شناسایی")
            tableMapping.ColumnMappings.Add("فرم کار", "فرم کار")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("اضافه کار", "اضافه کار")
            tableMapping.ColumnMappings.Add("اضافه کار تردد", "اضافه کار تردد")
            tableMapping.ColumnMappings.Add("کسر کار", "کسر کار")
            tableMapping.ColumnMappings.Add("جمع اضافه کار", "جمع اضافه کار")
            tableMapping.ColumnMappings.Add("ماموریت", "ماموریت")
            tableMapping.ColumnMappings.Add("تعطیل", "تعطیل")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Rp_MultiEzafeKarAzarakhsh"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Ashkhas", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fromdate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_ExtraWorkAzarakhshDataTable, ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Ds_Rp.Rp_ExtraWorkAzarakhshDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_ExtraWorkAzarakhshDataTable = New Ds_Rp.Rp_ExtraWorkAzarakhshDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_ExtraWorkFanavaranTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_ExtraWorkFanavaran"
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            tableMapping.ColumnMappings.Add("Srl_Pm_Company", "Srl_Pm_Company")
            tableMapping.ColumnMappings.Add("نام فرد", "نام فرد")
            tableMapping.ColumnMappings.Add("کد شناسایی", "کد شناسایی")
            tableMapping.ColumnMappings.Add("فرم کار", "فرم کار")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("کد هزینه", "کد هزینه")
            tableMapping.ColumnMappings.Add("محل فعالیت", "محل فعالیت")
            tableMapping.ColumnMappings.Add("اضافه کار", "اضافه کار")
            tableMapping.ColumnMappings.Add("اضافه کار تردد", "اضافه کار تردد")
            tableMapping.ColumnMappings.Add("کسر کار", "کسر کار")
            tableMapping.ColumnMappings.Add("جمع اضافه کار", "جمع اضافه کار")
            tableMapping.ColumnMappings.Add("ماموریت", "ماموریت")
            tableMapping.ColumnMappings.Add("تعطیل", "تعطیل")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.Nama_PMConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Rp_MultiEzafeKarf"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Ashkhas", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fromdate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_ExtraWorkFanavaranDataTable, ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Ashkhas As String, ByVal Fromdate As String, ByVal ToDate As String) As Ds_Rp.Rp_ExtraWorkFanavaranDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Fromdate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_ExtraWorkFanavaranDataTable = New Ds_Rp.Rp_ExtraWorkFanavaranDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_SummaryStatusstatementExtraWorkTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_SummaryStatusstatementExtraWork"
            tableMapping.ColumnMappings.Add("کد شناسایی", "کد شناسایی")
            tableMapping.ColumnMappings.Add("نام", "نام")
            tableMapping.ColumnMappings.Add("نوع کاری", "نوع کاری")
            tableMapping.ColumnMappings.Add("Srl_Pm_Company", "Srl_Pm_Company")
            tableMapping.ColumnMappings.Add("اضافه کار ستاد", "اضافه کار ستاد")
            tableMapping.ColumnMappings.Add("اضافه کار کارمزدی", "اضافه کار کارمزدی")
            tableMapping.ColumnMappings.Add("Srl_Ashkhas", "Srl_Ashkhas")
            tableMapping.ColumnMappings.Add("Srl", "Srl")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Pm_Ashkhas] WHERE (((@IsNull_کد_شناسایی = 1 AND [PersonalCode] IS NU"& _ 
                "LL) OR ([PersonalCode] = @Original_کد_شناسایی)) AND ((@IsNull_Srl_Pm_Company = 1"& _ 
                " AND [Srl_Pm_Company] IS NULL) OR ([Srl_Pm_Company] = @Original_Srl_Pm_Company))"& _ 
                " AND ([Srl] = @Original_Srl))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_کد_شناسایی", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_کد_شناسایی", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Srl", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Pm_Ashkhas] ([PersonalCode], [Srl_Pm_Company]) VALUES (@کد_شناسایی, "& _ 
                "@Srl_Pm_Company);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Pm_Ashkhas_1.PersonalCode AS [کد شناسایی], Pm_Ashkhas_"& _ 
                "1.Family + ' - ' + Pm_Ashkhas_1.Name AS نام, (SELECT Name FROM Pm_AshkhasType WH"& _ 
                "ERE (Srl = Pm_Ashkhas_1.srl_ashkhasType)) AS [نوع کاری], Pm_Ashkhas_1.Srl_Pm_Com"& _ 
                "pany, ISNULL(t.[اضافه کار ستاد], '00:00') AS [اضافه کار ستاد], ISNULL(t1.[اضافه "& _ 
                "کار کارمزدی], '00:00') AS [اضافه کار کارمزدی], (CASE WHEN t.Srl_Pm_ashkhas IS NU"& _ 
                "LL THEN t1.Srl_Pm_Ashkhas ELSE t.Srl_Pm_ashkhas END) AS Srl_Ashkhas, Pm_Ashkhas_"& _ 
                "1.Srl FROM (SELECT CONVERT (nvarchar, FLOOR(SUM(ezafekar / 60))) + ':' + CONVERT"& _ 
                " (nvarchar, ROUND(CONVERT (decimal, FLOOR(SUM(ezafekar))) % 60, 0)) AS [اضافه کا"& _ 
                "ر کارمزدی], srl_pm_ashkhas FROM (SELECT Pm_Ashkhas.Srl AS srl_pm_ashkhas, Pm_Ash"& _ 
                "khas.Name + ' ' + Pm_Ashkhas.Family AS [نام فرد], Pm_Ashkhas.PersonalCode AS [کد"& _ 
                " شناسایی], CASE WHEN W_Srl IS NULL THEN round(Price * Pm_con_StatusStatementDeta"& _ 
                "il.Weight / (SELECT SUM([weight]) FROM Pm_con_StatusStatementDetail WHERE srl_St"& _ 
                "atusStatement = S_Srl) , 0) ELSE ROUND(Price * Pm_WorkFrom_Detail.Weight / (SELE"& _ 
                "CT SUM([weight]) FROM Pm_WorkFrom_Detail WHERE Srl_Pm_WorkForm_Master = W_Srl) ,"& _ 
                " 0) END AS ezafekar FROM (SELECT NULL AS W_Srl, ss.Srl AS S_Srl, ss.Tarikh, ss.N"& _ 
                "umber, ROUND((SUM(Pm_Con_StatusStatementitem.CalcPrice * Pm_Con_StatusStatementi"& _ 
                "tem.Amount) - SUM(ISNULL(Pm_Con_StatusStatementitem.FactorPercentage / 100, 0) *"& _ 
                " Pm_Con_StatusStatementitem.CalcPrice * Pm_Con_StatusStatementitem.Amount) - SUM"& _ 
                "(ISNULL(ISNULL(Pm_con_SaveEzafeKar.Percentage, 0) / 100, 0) * Pm_Con_StatusState"& _ 
                "mentitem.CalcPrice * Pm_Con_StatusStatementitem.Amount)) * (SELECT PropValue FRO"& _ 
                "M Sec_Setting WHERE (ObjectName = 'DarsadEzafeKarAlalhesab')) * ISNULL(Pm_Con_Va"& _ 
                "hedWeight.Weight, 1) * ISNULL(Pm_Con_GroupWeight.Weight, 1) / Pm_Con_Contract.We"& _ 
                "ight, 0) AS Price FROM Pm_Con_StatusStatementitem INNER JOIN (SELECT Srl, Number"& _ 
                ", Tarikh, Srl_vahed, Srl_group, Srl_post, Srl_Line, Srl_SubmitUser, SubmitDate, "& _ 
                "Description, Srl_hazineCode, Srl_device, Ssnumber, FactorPrice FROM Pm_Con_Statu"& _ 
                "sStatement WHERE (Tarikh <= @ToDate) AND (Tarikh >= @Fromdate)) AS ss ON ss.Srl "& _ 
                "= Pm_Con_StatusStatementitem.srl_StatusStatement INNER JOIN Pm_Con_ContractItems"& _ 
                " ON Pm_Con_ContractItems.Srl = Pm_Con_StatusStatementitem.srl_contractItem INNER"& _ 
                " JOIN Pm_Con_Contract ON Pm_Con_Contract.Srl = Pm_Con_ContractItems.Srl_Contract"& _ 
                " LEFT OUTER JOIN Pm_con_SaveEzafeKar ON Pm_con_SaveEzafeKar.Srl_vahed = ss.Srl_v"& _ 
                "ahed AND Pm_con_SaveEzafeKar.Srl_Contract = Pm_Con_ContractItems.Srl_Contract LE"& _ 
                "FT OUTER JOIN Pm_Con_VahedWeight ON Pm_Con_VahedWeight.Srl_Contract = Pm_Con_Con"& _ 
                "tract.Srl AND Pm_Con_VahedWeight.srl_Vahed = ss.Srl_vahed LEFT OUTER JOIN Pm_Con"& _ 
                "_GroupWeight ON Pm_Con_GroupWeight.Srl_Contract = Pm_Con_Contract.Srl AND Pm_Con"& _ 
                "_GroupWeight.Srl_Group = ss.Srl_group WHERE (NOT (ss.Srl IS NULL)) GROUP BY ss.S"& _ 
                "rl, ss.Tarikh, Pm_Con_Contract.Weight, Pm_Con_VahedWeight.Weight, Pm_Con_GroupWe"& _ 
                "ight.Weight, ss.Number UNION ALL SELECT ss_1.Srl AS W_Srl, NULL AS S_Srl, ss_1.W"& _ 
                "orkFormTarikh AS tarikh, ss_1.No AS Number, ROUND((SUM(Pm_Con_StatusStatementite"& _ 
                "m_1.CalcPrice * Pm_Con_StatusStatementitem_1.Amount) - SUM(ISNULL(Pm_Con_StatusS"& _ 
                "tatementitem_1.FactorPercentage / 100, 0) * Pm_Con_StatusStatementitem_1.CalcPri"& _ 
                "ce * Pm_Con_StatusStatementitem_1.Amount) - SUM(ISNULL(Pm_con_SaveEzafeKar_1.Per"& _ 
                "centage, 0) / 100 * Pm_Con_StatusStatementitem_1.CalcPrice * Pm_Con_StatusStatem"& _ 
                "entitem_1.Amount)) * (SELECT PropValue FROM Sec_Setting AS Sec_Setting_1 WHERE ("& _ 
                "ObjectName = 'DarsadEzafeKarAlalhesab')) * ISNULL(Pm_Con_VahedWeight_1.Weight, 1"& _ 
                ") * ISNULL(Pm_Con_GroupWeight_1.Weight, 1) / Pm_Con_Contract_1.Weight, 0) AS Pri"& _ 
                "ce FROM Pm_Con_StatusStatementitem AS Pm_Con_StatusStatementitem_1 INNER JOIN (S"& _ 
                "ELECT Srl, Srl_Pm_Post_From, Srl_Pm_Post_To, Srl_Pm_Group, Srl_Pm_Vahed, Srl_Pm_"& _ 
                "WorkDis, Srl_HazineCode, No, Tarikh, WorkFormNo, WorkFormDis, Dis, WorkFormTarik"& _ 
                "h, BeginWorkSat, EndWorkSat, KhorojSat, TardodeDotarfe, HarkatHamanRoz, Srl_Pm_A"& _ 
                "shkhas_Sarparast, Srl_SubmitUser, SubmitDate, srl_dayofweek, IsMission, FactorPr"& _ 
                "ice FROM Pm_WorkForm_Master WHERE (WorkFormTarikh <= @ToDate) AND (WorkFormTarik"& _ 
                "h >= @Fromdate)) AS ss_1 ON ss_1.Srl = Pm_Con_StatusStatementitem_1.Srl_workform"& _ 
                "_master INNER JOIN Pm_Con_ContractItems AS Pm_Con_ContractItems_1 ON Pm_Con_Cont"& _ 
                "ractItems_1.Srl = Pm_Con_StatusStatementitem_1.srl_contractItem INNER JOIN Pm_Co"& _ 
                "n_Contract AS Pm_Con_Contract_1 ON Pm_Con_Contract_1.Srl = Pm_Con_ContractItems_"& _ 
                "1.Srl_Contract LEFT OUTER JOIN Pm_con_SaveEzafeKar AS Pm_con_SaveEzafeKar_1 ON P"& _ 
                "m_con_SaveEzafeKar_1.Srl_vahed = ss_1.Srl_Pm_Vahed AND Pm_con_SaveEzafeKar_1.Srl"& _ 
                "_Contract = Pm_Con_ContractItems_1.Srl_Contract LEFT OUTER JOIN Pm_Con_VahedWeig"& _ 
                "ht AS Pm_Con_VahedWeight_1 ON Pm_Con_VahedWeight_1.Srl_Contract = Pm_Con_Contrac"& _ 
                "t_1.Srl AND Pm_Con_VahedWeight_1.srl_Vahed = ss_1.Srl_Pm_Vahed LEFT OUTER JOIN P"& _ 
                "m_Con_GroupWeight AS Pm_Con_GroupWeight_1 ON Pm_Con_GroupWeight_1.Srl_Contract ="& _ 
                " Pm_Con_Contract_1.Srl AND Pm_Con_GroupWeight_1.Srl_Group = ss_1.Srl_Pm_Group WH"& _ 
                "ERE (NOT (Pm_Con_StatusStatementitem_1.Srl_workform_master IS NULL)) GROUP BY ss"& _ 
                "_1.Srl, ss_1.WorkFormTarikh, Pm_Con_Contract_1.Weight, Pm_Con_VahedWeight_1.Weig"& _ 
                "ht, Pm_Con_GroupWeight_1.Weight, ss_1.No) AS SSPrice LEFT OUTER JOIN Pm_con_Stat"& _ 
                "usStatementDetail ON SSPrice.S_Srl = Pm_con_StatusStatementDetail.srl_StatusStat"& _ 
                "ement LEFT OUTER JOIN Pm_WorkFrom_Detail ON SSPrice.W_Srl = Pm_WorkFrom_Detail.S"& _ 
                "rl_Pm_WorkForm_Master INNER JOIN Pm_Ashkhas ON Pm_WorkFrom_Detail.Srl_Pm_Ashkhas"& _ 
                " = Pm_Ashkhas.Srl OR Pm_con_StatusStatementDetail.Srl_Ashkhas = Pm_Ashkhas.Srl L"& _ 
                "EFT OUTER JOIN Pm_Post ON Pm_Post.Srl = Pm_WorkFrom_Detail.Srl_Pm_Post_From OR P"& _ 
                "m_Post.Srl = (SELECT Srl_post FROM Pm_Con_StatusStatement WHERE (Srl = SSPrice.S"& _ 
                "_Srl)) LEFT OUTER JOIN Pm_Line ON Pm_Line.Srl = (SELECT Srl_Line FROM Pm_Con_Sta"& _ 
                "tusStatement WHERE (Srl = SSPrice.S_Srl)) LEFT OUTER JOIN Pm_HazineCode ON Pm_Ha"& _ 
                "zineCode.Srl = (SELECT Srl_hazineCode FROM Pm_Con_StatusStatement WHERE (Srl = S"& _ 
                "SPrice.S_Srl)) OR Pm_HazineCode.Srl = (SELECT Srl_HazineCode FROM Pm_WorkForm_Ma"& _ 
                "ster WHERE (Srl = SSPrice.W_Srl))) AS m GROUP BY srl_pm_ashkhas) AS t1 FULL OUTE"& _ 
                "R JOIN (SELECT CONVERT (nvarchar, SUM(DATEDIFF(Minute, '0:00:00', CONVERT (time("& _ 
                "0), ISNULL(Pm_TimeCard.BeginTimeExtraWork, '00:00:00'))) + DATEDIFF(Minute, '0:0"& _ 
                "0:00', CONVERT (time(0), ISNULL(Pm_TimeCard.EndTimeExtraWork, '00:00:00'))) + DA"& _ 
                "TEDIFF(Minute, '0:00:00', CONVERT (time(0), ISNULL(Pm_TimeCard.HolidayExtraWork,"& _ 
                " '00:00:00')))) / 60) + ':' + CONVERT (nvarchar, SUM(DATEDIFF(Minute, '0:00:00',"& _ 
                " CONVERT (time(0), ISNULL(Pm_TimeCard.BeginTimeExtraWork, '00:00:00'))) + DATEDI"& _ 
                "FF(Minute, '0:00:00', CONVERT (time(0), ISNULL(Pm_TimeCard.EndTimeExtraWork, '00"& _ 
                ":00:00'))) + DATEDIFF(Minute, '0:00:00', CONVERT (time(0), ISNULL(Pm_TimeCard.Ho"& _ 
                "lidayExtraWork, '00:00:00')))) % 60) AS [اضافه کار ستاد], Pm_TimeCard.Srl_Pm_ash"& _ 
                "khas FROM Pm_TimeCard INNER JOIN Pm_Ashkhas AS Pm_Ashkhas_2 ON Pm_Ashkhas_2.Srl "& _ 
                "= Pm_TimeCard.Srl_Pm_ashkhas AND Pm_Ashkhas_2.srl_ashkhasType IN (2, 3) WHERE (P"& _ 
                "m_TimeCard.Tarikh >= @FromDate) AND (Pm_TimeCard.Tarikh <= @ToDate) GROUP BY Pm_"& _ 
                "TimeCard.Srl_Pm_ashkhas) AS t ON t.Srl_Pm_ashkhas = t1.srl_pm_ashkhas RIGHT OUTE"& _ 
                "R JOIN Pm_Ashkhas AS Pm_Ashkhas_1 ON t.Srl_Pm_ashkhas = Pm_Ashkhas_1.Srl OR t1.s"& _ 
                "rl_pm_ashkhas = Pm_Ashkhas_1.Srl WHERE (Pm_Ashkhas_1.Srl = SCOPE_IDENTITY()) ORD"& _ 
                "ER BY [کد شناسایی]"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@کد_شناسایی", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fromdate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Pm_Ashkhas] SET [PersonalCode] = @کد_شناسایی, [Srl_Pm_Company] = @Srl_Pm_"& _ 
                "Company WHERE (((@IsNull_کد_شناسایی = 1 AND [PersonalCode] IS NULL) OR ([Persona"& _ 
                "lCode] = @Original_کد_شناسایی)) AND ((@IsNull_Srl_Pm_Company = 1 AND [Srl_Pm_Com"& _ 
                "pany] IS NULL) OR ([Srl_Pm_Company] = @Original_Srl_Pm_Company)) AND ([Srl] = @O"& _ 
                "riginal_Srl));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Pm_Ashkhas_1.PersonalCode AS [کد شناسایی], Pm_Ashkhas_1.F"& _ 
                "amily + ' - ' + Pm_Ashkhas_1.Name AS نام, (SELECT Name FROM Pm_AshkhasType WHERE"& _ 
                " (Srl = Pm_Ashkhas_1.srl_ashkhasType)) AS [نوع کاری], Pm_Ashkhas_1.Srl_Pm_Compan"& _ 
                "y, ISNULL(t.[اضافه کار ستاد], '00:00') AS [اضافه کار ستاد], ISNULL(t1.[اضافه کار"& _ 
                " کارمزدی], '00:00') AS [اضافه کار کارمزدی], (CASE WHEN t.Srl_Pm_ashkhas IS NULL "& _ 
                "THEN t1.Srl_Pm_Ashkhas ELSE t.Srl_Pm_ashkhas END) AS Srl_Ashkhas, Pm_Ashkhas_1.S"& _ 
                "rl FROM (SELECT CONVERT (nvarchar, FLOOR(SUM(ezafekar / 60))) + ':' + CONVERT (n"& _ 
                "varchar, ROUND(CONVERT (decimal, FLOOR(SUM(ezafekar))) % 60, 0)) AS [اضافه کار ک"& _ 
                "ارمزدی], srl_pm_ashkhas FROM (SELECT Pm_Ashkhas.Srl AS srl_pm_ashkhas, Pm_Ashkha"& _ 
                "s.Name + ' ' + Pm_Ashkhas.Family AS [نام فرد], Pm_Ashkhas.PersonalCode AS [کد شن"& _ 
                "اسایی], CASE WHEN W_Srl IS NULL THEN round(Price * Pm_con_StatusStatementDetail."& _ 
                "Weight / (SELECT SUM([weight]) FROM Pm_con_StatusStatementDetail WHERE srl_Statu"& _ 
                "sStatement = S_Srl) , 0) ELSE ROUND(Price * Pm_WorkFrom_Detail.Weight / (SELECT "& _ 
                "SUM([weight]) FROM Pm_WorkFrom_Detail WHERE Srl_Pm_WorkForm_Master = W_Srl) , 0)"& _ 
                " END AS ezafekar FROM (SELECT NULL AS W_Srl, ss.Srl AS S_Srl, ss.Tarikh, ss.Numb"& _ 
                "er, ROUND((SUM(Pm_Con_StatusStatementitem.CalcPrice * Pm_Con_StatusStatementitem"& _ 
                ".Amount) - SUM(ISNULL(Pm_Con_StatusStatementitem.FactorPercentage / 100, 0) * Pm"& _ 
                "_Con_StatusStatementitem.CalcPrice * Pm_Con_StatusStatementitem.Amount) - SUM(IS"& _ 
                "NULL(ISNULL(Pm_con_SaveEzafeKar.Percentage, 0) / 100, 0) * Pm_Con_StatusStatemen"& _ 
                "titem.CalcPrice * Pm_Con_StatusStatementitem.Amount)) * (SELECT PropValue FROM S"& _ 
                "ec_Setting WHERE (ObjectName = 'DarsadEzafeKarAlalhesab')) * ISNULL(Pm_Con_Vahed"& _ 
                "Weight.Weight, 1) * ISNULL(Pm_Con_GroupWeight.Weight, 1) / Pm_Con_Contract.Weigh"& _ 
                "t, 0) AS Price FROM Pm_Con_StatusStatementitem INNER JOIN (SELECT Srl, Number, T"& _ 
                "arikh, Srl_vahed, Srl_group, Srl_post, Srl_Line, Srl_SubmitUser, SubmitDate, Des"& _ 
                "cription, Srl_hazineCode, Srl_device, Ssnumber, FactorPrice FROM Pm_Con_StatusSt"& _ 
                "atement WHERE (Tarikh <= @ToDate) AND (Tarikh >= @Fromdate)) AS ss ON ss.Srl = P"& _ 
                "m_Con_StatusStatementitem.srl_StatusStatement INNER JOIN Pm_Con_ContractItems ON"& _ 
                " Pm_Con_ContractItems.Srl = Pm_Con_StatusStatementitem.srl_contractItem INNER JO"& _ 
                "IN Pm_Con_Contract ON Pm_Con_Contract.Srl = Pm_Con_ContractItems.Srl_Contract LE"& _ 
                "FT OUTER JOIN Pm_con_SaveEzafeKar ON Pm_con_SaveEzafeKar.Srl_vahed = ss.Srl_vahe"& _ 
                "d AND Pm_con_SaveEzafeKar.Srl_Contract = Pm_Con_ContractItems.Srl_Contract LEFT "& _ 
                "OUTER JOIN Pm_Con_VahedWeight ON Pm_Con_VahedWeight.Srl_Contract = Pm_Con_Contra"& _ 
                "ct.Srl AND Pm_Con_VahedWeight.srl_Vahed = ss.Srl_vahed LEFT OUTER JOIN Pm_Con_Gr"& _ 
                "oupWeight ON Pm_Con_GroupWeight.Srl_Contract = Pm_Con_Contract.Srl AND Pm_Con_Gr"& _ 
                "oupWeight.Srl_Group = ss.Srl_group WHERE (NOT (ss.Srl IS NULL)) GROUP BY ss.Srl,"& _ 
                " ss.Tarikh, Pm_Con_Contract.Weight, Pm_Con_VahedWeight.Weight, Pm_Con_GroupWeigh"& _ 
                "t.Weight, ss.Number UNION ALL SELECT ss_1.Srl AS W_Srl, NULL AS S_Srl, ss_1.Work"& _ 
                "FormTarikh AS tarikh, ss_1.No AS Number, ROUND((SUM(Pm_Con_StatusStatementitem_1"& _ 
                ".CalcPrice * Pm_Con_StatusStatementitem_1.Amount) - SUM(ISNULL(Pm_Con_StatusStat"& _ 
                "ementitem_1.FactorPercentage / 100, 0) * Pm_Con_StatusStatementitem_1.CalcPrice "& _ 
                "* Pm_Con_StatusStatementitem_1.Amount) - SUM(ISNULL(Pm_con_SaveEzafeKar_1.Percen"& _ 
                "tage, 0) / 100 * Pm_Con_StatusStatementitem_1.CalcPrice * Pm_Con_StatusStatement"& _ 
                "item_1.Amount)) * (SELECT PropValue FROM Sec_Setting AS Sec_Setting_1 WHERE (Obj"& _ 
                "ectName = 'DarsadEzafeKarAlalhesab')) * ISNULL(Pm_Con_VahedWeight_1.Weight, 1) *"& _ 
                " ISNULL(Pm_Con_GroupWeight_1.Weight, 1) / Pm_Con_Contract_1.Weight, 0) AS Price "& _ 
                "FROM Pm_Con_StatusStatementitem AS Pm_Con_StatusStatementitem_1 INNER JOIN (SELE"& _ 
                "CT Srl, Srl_Pm_Post_From, Srl_Pm_Post_To, Srl_Pm_Group, Srl_Pm_Vahed, Srl_Pm_Wor"& _ 
                "kDis, Srl_HazineCode, No, Tarikh, WorkFormNo, WorkFormDis, Dis, WorkFormTarikh, "& _ 
                "BeginWorkSat, EndWorkSat, KhorojSat, TardodeDotarfe, HarkatHamanRoz, Srl_Pm_Ashk"& _ 
                "has_Sarparast, Srl_SubmitUser, SubmitDate, srl_dayofweek, IsMission, FactorPrice"& _ 
                " FROM Pm_WorkForm_Master WHERE (WorkFormTarikh <= @ToDate) AND (WorkFormTarikh >"& _ 
                "= @Fromdate)) AS ss_1 ON ss_1.Srl = Pm_Con_StatusStatementitem_1.Srl_workform_ma"& _ 
                "ster INNER JOIN Pm_Con_ContractItems AS Pm_Con_ContractItems_1 ON Pm_Con_Contrac"& _ 
                "tItems_1.Srl = Pm_Con_StatusStatementitem_1.srl_contractItem INNER JOIN Pm_Con_C"& _ 
                "ontract AS Pm_Con_Contract_1 ON Pm_Con_Contract_1.Srl = Pm_Con_ContractItems_1.S"& _ 
                "rl_Contract LEFT OUTER JOIN Pm_con_SaveEzafeKar AS Pm_con_SaveEzafeKar_1 ON Pm_c"& _ 
                "on_SaveEzafeKar_1.Srl_vahed = ss_1.Srl_Pm_Vahed AND Pm_con_SaveEzafeKar_1.Srl_Co"& _ 
                "ntract = Pm_Con_ContractItems_1.Srl_Contract LEFT OUTER JOIN Pm_Con_VahedWeight "& _ 
                "AS Pm_Con_VahedWeight_1 ON Pm_Con_VahedWeight_1.Srl_Contract = Pm_Con_Contract_1"& _ 
                ".Srl AND Pm_Con_VahedWeight_1.srl_Vahed = ss_1.Srl_Pm_Vahed LEFT OUTER JOIN Pm_C"& _ 
                "on_GroupWeight AS Pm_Con_GroupWeight_1 ON Pm_Con_GroupWeight_1.Srl_Contract = Pm"& _ 
                "_Con_Contract_1.Srl AND Pm_Con_GroupWeight_1.Srl_Group = ss_1.Srl_Pm_Group WHERE"& _ 
                " (NOT (Pm_Con_StatusStatementitem_1.Srl_workform_master IS NULL)) GROUP BY ss_1."& _ 
                "Srl, ss_1.WorkFormTarikh, Pm_Con_Contract_1.Weight, Pm_Con_VahedWeight_1.Weight,"& _ 
                " Pm_Con_GroupWeight_1.Weight, ss_1.No) AS SSPrice LEFT OUTER JOIN Pm_con_StatusS"& _ 
                "tatementDetail ON SSPrice.S_Srl = Pm_con_StatusStatementDetail.srl_StatusStateme"& _ 
                "nt LEFT OUTER JOIN Pm_WorkFrom_Detail ON SSPrice.W_Srl = Pm_WorkFrom_Detail.Srl_"& _ 
                "Pm_WorkForm_Master INNER JOIN Pm_Ashkhas ON Pm_WorkFrom_Detail.Srl_Pm_Ashkhas = "& _ 
                "Pm_Ashkhas.Srl OR Pm_con_StatusStatementDetail.Srl_Ashkhas = Pm_Ashkhas.Srl LEFT"& _ 
                " OUTER JOIN Pm_Post ON Pm_Post.Srl = Pm_WorkFrom_Detail.Srl_Pm_Post_From OR Pm_P"& _ 
                "ost.Srl = (SELECT Srl_post FROM Pm_Con_StatusStatement WHERE (Srl = SSPrice.S_Sr"& _ 
                "l)) LEFT OUTER JOIN Pm_Line ON Pm_Line.Srl = (SELECT Srl_Line FROM Pm_Con_Status"& _ 
                "Statement WHERE (Srl = SSPrice.S_Srl)) LEFT OUTER JOIN Pm_HazineCode ON Pm_Hazin"& _ 
                "eCode.Srl = (SELECT Srl_hazineCode FROM Pm_Con_StatusStatement WHERE (Srl = SSPr"& _ 
                "ice.S_Srl)) OR Pm_HazineCode.Srl = (SELECT Srl_HazineCode FROM Pm_WorkForm_Maste"& _ 
                "r WHERE (Srl = SSPrice.W_Srl))) AS m GROUP BY srl_pm_ashkhas) AS t1 FULL OUTER J"& _ 
                "OIN (SELECT CONVERT (nvarchar, SUM(DATEDIFF(Minute, '0:00:00', CONVERT (time(0),"& _ 
                " ISNULL(Pm_TimeCard.BeginTimeExtraWork, '00:00:00'))) + DATEDIFF(Minute, '0:00:0"& _ 
                "0', CONVERT (time(0), ISNULL(Pm_TimeCard.EndTimeExtraWork, '00:00:00'))) + DATED"& _ 
                "IFF(Minute, '0:00:00', CONVERT (time(0), ISNULL(Pm_TimeCard.HolidayExtraWork, '0"& _ 
                "0:00:00')))) / 60) + ':' + CONVERT (nvarchar, SUM(DATEDIFF(Minute, '0:00:00', CO"& _ 
                "NVERT (time(0), ISNULL(Pm_TimeCard.BeginTimeExtraWork, '00:00:00'))) + DATEDIFF("& _ 
                "Minute, '0:00:00', CONVERT (time(0), ISNULL(Pm_TimeCard.EndTimeExtraWork, '00:00"& _ 
                ":00'))) + DATEDIFF(Minute, '0:00:00', CONVERT (time(0), ISNULL(Pm_TimeCard.Holid"& _ 
                "ayExtraWork, '00:00:00')))) % 60) AS [اضافه کار ستاد], Pm_TimeCard.Srl_Pm_ashkha"& _ 
                "s FROM Pm_TimeCard INNER JOIN Pm_Ashkhas AS Pm_Ashkhas_2 ON Pm_Ashkhas_2.Srl = P"& _ 
                "m_TimeCard.Srl_Pm_ashkhas AND Pm_Ashkhas_2.srl_ashkhasType IN (2, 3) WHERE (Pm_T"& _ 
                "imeCard.Tarikh >= @FromDate) AND (Pm_TimeCard.Tarikh <= @ToDate) GROUP BY Pm_Tim"& _ 
                "eCard.Srl_Pm_ashkhas) AS t ON t.Srl_Pm_ashkhas = t1.srl_pm_ashkhas RIGHT OUTER J"& _ 
                "OIN Pm_Ashkhas AS Pm_Ashkhas_1 ON t.Srl_Pm_ashkhas = Pm_Ashkhas_1.Srl OR t1.srl_"& _ 
                "pm_ashkhas = Pm_Ashkhas_1.Srl WHERE (Pm_Ashkhas_1.Srl = @Srl) ORDER BY [کد شناسا"& _ 
                "یی]"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@کد_شناسایی", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_کد_شناسایی", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_کد_شناسایی", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "کد شناسایی", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Srl_Pm_Company", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Pm_Company", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Srl", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fromdate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Pm_Ashkhas.PersonalCode AS [کد شناسایی], Pm_Ashkhas.Family + ' - ' + Pm_As"& _ 
                "hkhas.Name AS نام,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(select Name from Pm_AshkhasType where Pm_AshkhasType.srl = "& _ 
                "Pm_Ashkhas .srl_ashkhastype) as [نوع کاری]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Pm_Ashkhas.Srl_Pm_Company,  ISNU"& _ 
                "LL(t.[اضافه کار ستاد], '00:00') AS [اضافه کار ستاد],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  ISNULL(t1.[اضافه کار کار"& _ 
                "مزدی], '00:00') AS [اضافه کار کارمزدی],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(CASE WHEN t.Srl_Pm_ashkhas IS NULL THE"& _ 
                "N t1.Srl_Pm_Ashkhas ELSE t.Srl_Pm_ashkhas END) AS Srl_Ashkhas, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Ashkhas.Srl "& _ 
                "FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(SELECT CONVERT (nvarchar,FLOOR(SUM(ezafekar/ 60))) + ':' +"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  CONVERT"& _ 
                " (nvarchar,ROUND( convert(decimal,floor(SUM(ezafekar ))) % 60,0)) AS [اضافه کار "& _ 
                "کارمزدی],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   Srl_Pm_Ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"select Pm_Ashkhas .Srl as srl_pm_ashkhas "& _ 
                ",Pm_Ashkhas.Name+' '+Pm_Ashkhas .Family as [نام فرد],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Pm_Ashkhas.PersonalCode a"& _ 
                "s [کد شناسایی],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"case when W_Srl IS null then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"round(Price*Pm_con_StatusStatemen"& _ 
                "tDetail.Weight/(select SUM([weight]) from Pm_con_StatusStatementDetail   where s"& _ 
                "rl_StatusStatement  =S_Srl) ,0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" else "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ROUND( Price*Pm_WorkFrom_Detail.Weight "& _ 
                "/(select SUM([weight]) from Pm_WorkFrom_Detail where Srl_Pm_WorkForm_Master =W_S"& _ 
                "rl) ,0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" end as ezafekar"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  from ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(select null as W_Srl , ss .Srl  as S"& _ 
                "_Srl ,ss.Tarikh ,ss.Number as Number,ROUND((SUM (CalcPrice *Pm_Con_StatusStateme"& _ 
                "ntitem.Amount)-SUM(isnull(FactorPercentage/100,0)*CalcPrice*Pm_Con_StatusStateme"& _ 
                "ntitem.Amount)-SUM(isnull(isnull(percentage,0)/100,0)*CalcPrice*Pm_Con_StatusSta"& _ 
                "tementitem.Amount))*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(select PropValue  from Sec_Setting where objectname ='Da"& _ 
                "rsadEzafeKarAlalhesab')*isnull(Pm_Con_VahedWeight.Weight,1)*isnull(Pm_Con_GroupW"& _ 
                "eight .Weight,1)/Pm_Con_Contract.Weight ,0) as Price"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"from Pm_Con_StatusStateme"& _ 
                "ntitem join "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(select * from Pm_Con_StatusStatement where Tarikh <=@ToDate and "& _ 
                "Tarikh>=@Fromdate  )as ss on ss.Srl = srl_StatusStatement "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"join Pm_Con_Contrac"& _ 
                "tItems  on Pm_Con_ContractItems .Srl = srl_contractItem "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"join Pm_Con_Contract "& _ 
                "on Pm_Con_Contract .Srl = Pm_Con_ContractItems.Srl_Contract "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"left join pm_con_"& _ 
                "saveezafekar on pm_con_saveezafekar.srl_vahed = ss . Srl_vahed "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"and pm_con_sav"& _ 
                "eezafekar.srl_contract = Pm_Con_ContractItems.Srl_Contract "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"left join Pm_Con_V"& _ 
                "ahedWeight on Pm_Con_VahedWeight.Srl_Contract = Pm_Con_Contract .Srl and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Pm"& _ 
                "_Con_VahedWeight.srl_Vahed =ss.Srl_vahed"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    left join Pm_Con_GroupWeight on Pm"& _ 
                "_Con_GroupWeight.Srl_Contract = Pm_Con_Contract .Srl and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Pm_Con_GroupWeight"& _ 
                ".Srl_Group =ss.Srl_group    "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"where not ss .Srl  is null "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by ss .Srl ,s"& _ 
                "s.Tarikh ,Pm_Con_Contract.Weight ,Pm_Con_VahedWeight.Weight,Pm_Con_GroupWeight.W"& _ 
                "eight ,ss.Number "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"union all "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"select ss.srl  as W_Srl , null as S_Srl ,ss.Work"& _ 
                "FormTarikh as tarikh ,ss.No as Number,round((SUM (CalcPrice *Pm_Con_StatusStatem"& _ 
                "entitem.Amount)-SUM(isnull(FactorPercentage/100,0)*CalcPrice*Pm_Con_StatusStatem"& _ 
                "entitem.Amount)-SUM(isnull(percentage,0)/100*CalcPrice*Pm_Con_StatusStatementite"& _ 
                "m.Amount))*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(select PropValue  from Sec_Setting where objectname ='DarsadEzafe"& _ 
                "KarAlalhesab')*isnull(Pm_Con_VahedWeight.Weight,1)*isnull(Pm_Con_GroupWeight .We"& _ 
                "ight,1)/Pm_Con_Contract.Weight ,0)as Price  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"  from Pm_Con_StatusStatementitem"& _ 
                " join"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(select * from Pm_WorkForm_Master  where WorkFormTarikh  <=@ToDate and W"& _ 
                "orkFormTarikh>=@Fromdate)as ss on ss.Srl = Srl_workform_master  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"join Pm_Con_C"& _ 
                "ontractItems  on Pm_Con_ContractItems .Srl = srl_contractItem "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"join Pm_Con_Con"& _ 
                "tract on Pm_Con_Contract .Srl = Pm_Con_ContractItems.Srl_Contract "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"left join p"& _ 
                "m_con_saveezafekar on pm_con_saveezafekar.srl_vahed = ss . Srl_pm_vahed "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"and p"& _ 
                "m_con_saveezafekar.srl_contract = Pm_Con_ContractItems.Srl_Contract "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"left join"& _ 
                " Pm_Con_VahedWeight on Pm_Con_VahedWeight.Srl_Contract = Pm_Con_Contract .Srl an"& _ 
                "d "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Pm_Con_VahedWeight.srl_Vahed =ss.Srl_Pm_Vahed"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    left join Pm_Con_Group"& _ 
                "Weight on Pm_Con_GroupWeight.Srl_Contract = Pm_Con_Contract .Srl and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Pm_Con"& _ 
                "_GroupWeight.Srl_Group =ss.Srl_Pm_Group  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"where not Srl_workform_master is nul"& _ 
                "l "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"group by ss.srl,ss.WorkFormTarikh ,Pm_Con_Contract.Weight   ,Pm_Con_VahedWe"& _ 
                "ight.Weight,Pm_Con_GroupWeight.Weight ,ss.no"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&") as SSPrice"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join Pm_con_Sta"& _ 
                "tusStatementDetail  on S_Srl = srl_StatusStatement  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join Pm_WorkFrom_Deta"& _ 
                "il on W_Srl = Srl_Pm_WorkForm_Master"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"join Pm_Ashkhas on Srl_Pm_Ashkhas =Pm_Ashk"& _ 
                "has .Srl or Pm_con_StatusStatementDetail .Srl_Ashkhas = Pm_Ashkhas .Srl "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"& _ 
                " join Pm_Post on Pm_Post .Srl = Srl_Pm_Post_From or Pm_Post .Srl = (select srl_p"& _ 
                "ost from Pm_Con_StatusStatement where srl = S_Srl )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join Pm_Line  on  Pm_L"& _ 
                "ine  .Srl = (select Srl_Line  from Pm_Con_StatusStatement where srl = S_Srl )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"l"& _ 
                "eft join Pm_HazineCode on Pm_HazineCode .Srl = (select Srl_HazineCode  from Pm_C"& _ 
                "on_StatusStatement where srl=S_Srl )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"or Pm_HazineCode .Srl = (select Srl_Hazine"& _ 
                "Code  from Pm_WorkForm_Master  where srl=W_Srl )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&")as m"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" GROUP BY Srl_Pm_A"& _ 
                "shkhas) AS t1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  FULL OUTER JOIN "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  (SELECT CONVERT (nvarchar, SUM(DATEDIFF(Min"& _ 
                "ute, '0:00:00', CONVERT (time(0), ISNULL(BeginTimeExtraWork, '00:00:00'))) + "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                " DATEDIFF(Minute, '0:00:00', CONVERT (time(0), ISNULL(EndTimeExtraWork, '00:00:0"& _ 
                "0'))) + DATEDIFF(Minute, '0:00:00',"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   CONVERT (time(0), ISNULL(HolidayExtraWor"& _ 
                "k, '00:00:00')))) / 60) + ':' + CONVERT (nvarchar, SUM(DATEDIFF(Minute, '0:00:00"& _ 
                "', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   CONVERT (time(0), ISNULL(BeginTimeExtraWork, '00:00:00'))) + DATEDIFF(Mi"& _ 
                "nute, '0:00:00', CONVERT (time(0), ISNULL(EndTimeExtraWork, '00:00:00'))) +"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                " DATEDIFF(Minute, '0:00:00', CONVERT (time(0), ISNULL(HolidayExtraWork, '00:00:0"& _ 
                "0')))) % 60) AS [اضافه کار ستاد], Srl_Pm_ashkhas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     FROM Pm_TimeCard join pm_"& _ 
                "ashkhas on pm_ashkhas.srl = Srl_Pm_ashkhas and srl_ashkhastype in(2,3)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" WHERE ("& _ 
                "Tarikh >= @FromDate) AND (Tarikh <= @ToDate) GROUP BY Srl_Pm_ashkhas) AS t"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  ON"& _ 
                " t.Srl_Pm_ashkhas = t1.Srl_Pm_Ashkhas right JOIN Pm_Ashkhas ON (t.Srl_Pm_ashkhas"& _ 
                " = Pm_Ashkhas.Srl OR t1.Srl_Pm_Ashkhas = Pm_Ashkhas.Srl ) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  Pm_Ashkh"& _ 
                "as .IsActive =1 and pm_ashkhas.Srl_Pm_Company =1 and"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" (Pm_Ashkhas.srl_pm_vahed "& _ 
                "in (select * from split(@Srl_vahed,',')) or @Srl_vahed=-1) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and (pm_ashkhas.srl"& _ 
                " in (select srl_acc_ashkhas from Pm_GroupMember  where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(srl_pm_group in (selec"& _ 
                "t * from  split(@Srl_vahed,',')))) or @Srl_Group=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY [کد شناسایی]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_vahed", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Group", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fromdate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_SummaryStatusstatementExtraWorkDataTable, ByVal Srl_vahed As String, ByVal Srl_Group As String, ByVal ToDate As String, ByVal Fromdate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_vahed Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_vahed")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_vahed,String)
            End If
            If (Srl_Group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Group")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Group,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ToDate,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Fromdate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_vahed As String, ByVal Srl_Group As String, ByVal ToDate As String, ByVal Fromdate As String) As Ds_Rp.Rp_SummaryStatusstatementExtraWorkDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_vahed Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_vahed")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_vahed,String)
            End If
            If (Srl_Group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Srl_Group")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Group,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ToDate,String)
            End If
            If (Fromdate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Fromdate,String)
            End If
            Dim dataTable As Ds_Rp.Rp_SummaryStatusstatementExtraWorkDataTable = New Ds_Rp.Rp_SummaryStatusstatementExtraWorkDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Ds_Rp.Rp_SummaryStatusstatementExtraWorkDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Ds_Rp) As Integer
            Return Me.Adapter.Update(dataSet, "Rp_SummaryStatusstatementExtraWork")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_ConfirmedMultiEzafeKarStatusStatementTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_ConfirmedMultiEzafeKarStatusStatement"
            tableMapping.ColumnMappings.Add("srl", "srl")
            tableMapping.ColumnMappings.Add("Ezafekar", "Ezafekar")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Rp_ConfirmedMultiEzafeKarStatusStatement"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Ashkhas", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@srl_company", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_ConfirmedMultiEzafeKarStatusStatementDataTable, ByVal Srl_Ashkhas As String, ByVal FromDate As String, ByVal ToDate As String, ByVal srl_company As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (srl_company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(srl_company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Ashkhas As String, ByVal FromDate As String, ByVal ToDate As String, ByVal srl_company As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_ConfirmedMultiEzafeKarStatusStatementDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Ashkhas Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Ashkhas,String)
            End If
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ToDate,String)
            End If
            If (srl_company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(srl_company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_ConfirmedMultiEzafeKarStatusStatementDataTable = New Ds_Rp.Rp_ConfirmedMultiEzafeKarStatusStatementDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Rp_PishnahadTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Rp_Pishnahad"
            tableMapping.ColumnMappings.Add("پیشنهاد", "پیشنهاد")
            tableMapping.ColumnMappings.Add("تاریخ", "تاریخ")
            tableMapping.ColumnMappings.Add("شماره", "شماره")
            tableMapping.ColumnMappings.Add("شماره فرم", "شماره فرم")
            tableMapping.ColumnMappings.Add("شماره فرم انجام کار", "شماره فرم انجام کار")
            tableMapping.ColumnMappings.Add("تاریخ انجام", "تاریخ انجام")
            tableMapping.ColumnMappings.Add("شرح انجام کار", "شرح انجام کار")
            tableMapping.ColumnMappings.Add("is_Do", "is_Do")
            tableMapping.ColumnMappings.Add("بازه", "بازه")
            tableMapping.ColumnMappings.Add("is_NotDo", "is_NotDo")
            tableMapping.ColumnMappings.Add("تجهیز", "تجهیز")
            tableMapping.ColumnMappings.Add("خط", "خط")
            tableMapping.ColumnMappings.Add("پست", "پست")
            tableMapping.ColumnMappings.Add("واحد", "واحد")
            tableMapping.ColumnMappings.Add("زیر موضوع", "زیر موضوع")
            tableMapping.ColumnMappings.Add("موضوع", "موضوع")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("expireday", "expireday")
            tableMapping.ColumnMappings.Add("فرستنده", "فرستنده")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Nama_PM.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        Pm_Post_Pishnahd.Pishnahad AS پیشنهاد, Pm_Post_Pishnahd.Tarikh AS ت"& _ 
                "اریخ,Pm_Post_Pishnahd.No As شماره, Pm_Post_Pishnahd.No_Form as [شماره فرم], Pm_P"& _ 
                "ost_Pishnahd.No_FormDo as [شماره فرم انجام کار], Pm_Post_Pishnahd.Tarikh_Do as ["& _ 
                "تاریخ انجام],Pm_Post_Pishnahd.Dis_AnjamKar as [شرح انجام کار], Pm_Post_Pishnahd."& _ 
                "is_Do,Pm_Post_Pishnahd.PTime as بازه, Pm_Post_Pishnahd.is_NotDo, Pm_Post_Pishnah"& _ 
                "d.Status, Pm_Sender.Name as فرستنده,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       Pm_Hadese_KhesaratD"& _ 
                "evice.Name AS تجهیز,Pm_Line.Name AS خط, Pm_Post.Name AS پست, Pm_Vahed.Name AS وا"& _ 
                "حد, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        Pm_Post_Pishnahd.SubRecomSubject AS [زیر موضوع], P"& _ 
                "m_RecomendationSubject.Name AS موضوع,   Pm_Post_Pishnahd.expireday"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM        "& _ 
                "    Pm_Post_Pishnahd INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "  Pm_RecomendationSubject ON Pm_Post_Pishnahd.Srl_RecomSubject = Pm_Recomendatio"& _ 
                "nSubject.Srl INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Vahed ON Pm_Post_Pishnahd.S"& _ 
                "rl_Vahed = Pm_Vahed.Srl  LEFT JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Sender ON  Pm_Po"& _ 
                "st_Pishnahd.Srl_Sender = Pm_Sender.Srl LEFT JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Pm_Li"& _ 
                "ne ON Pm_Post_Pishnahd.Srl_Line=Pm_Line.Srl  LEFT  JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  Pm_Post ON Pm_Post_Pishnahd.Srl_Post = Pm_Post.Srl LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               Pm_Hadese_KhesaratDevice ON Pm_Post_Pishnahd.Srl_Device = Pm_Hade"& _ 
                "se_KhesaratDevice.Srl"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE       "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" (Pm_Post_Pishnahd.Srl_Post = @Srl_Post O"& _ 
                "R @Srl_Post=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"And  (Pm_Post_Pishnahd.Srl_Line = @Srl_Line OR @Srl_Line=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "AND (Pm_Hadese_KhesaratDevice.Srl = @Srl_Device OR @Srl_Device=-1) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND( Pm_Pos"& _ 
                "t_Pishnahd.Tarikh>=@FromDate OR @FromDate='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND ( Pm_Post_Pishnahd.Tarikh<=@T"& _ 
                "oDate OR @ToDate='')    "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (Pm_Post_Pishnahd.Srl_RecomSubject=@Srl_Recom OR @"& _ 
                "Srl_Recom=-1)                "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND ( Pm_Post_Pishnahd.Pishnahad like '%'+@Pishna"& _ 
                "had+'%' OR @Pishnahad='')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Post_Pishnahd.Srl_Vahed=@Srl_Vahed OR @Srl_Vah"& _ 
                "ed=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_Post_Pishnahd.Srl_Sender=@Srl_Sender OR @Srl_Sender=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND(Pm_P"& _ 
                "ost_Pishnahd.Status=@Status OR @Status=-1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY تاریخ"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Post", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Post", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Line", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Line", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Device", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "تاریخ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Recom", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_RecomSubject", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pishnahad", Global.System.Data.SqlDbType.NVarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "پیشنهاد", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Srl_Sender", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Srl_Sender", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Ds_Rp.Rp_PishnahadDataTable, ByVal Srl_Post As Global.System.Nullable(Of Integer), ByVal Srl_Line As Global.System.Nullable(Of Integer), ByVal Srl_Device As Integer, ByVal FromDate As String, ByVal ToDate As String, ByVal Srl_Recom As Global.System.Nullable(Of Integer), ByVal Pishnahad As String, ByVal Srl_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Sender As Global.System.Nullable(Of Integer), ByVal Status As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Line.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Line.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Device,Integer)
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(ToDate,String)
            End If
            If (Srl_Recom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_Recom.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Pishnahad Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Pishnahad,String)
            End If
            If (Srl_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Srl_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Srl_Sender.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Srl_Sender.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Status.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Srl_Post As Global.System.Nullable(Of Integer), ByVal Srl_Line As Global.System.Nullable(Of Integer), ByVal Srl_Device As Integer, ByVal FromDate As String, ByVal ToDate As String, ByVal Srl_Recom As Global.System.Nullable(Of Integer), ByVal Pishnahad As String, ByVal Srl_Vahed As Global.System.Nullable(Of Integer), ByVal Srl_Sender As Global.System.Nullable(Of Integer), ByVal Status As Global.System.Nullable(Of Integer)) As Ds_Rp.Rp_PishnahadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Srl_Post.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Srl_Post.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Srl_Line.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Srl_Line.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Srl_Device,Integer)
            If (FromDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FromDate,String)
            End If
            If (ToDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(ToDate,String)
            End If
            If (Srl_Recom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Srl_Recom.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Pishnahad Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Pishnahad,String)
            End If
            If (Srl_Vahed.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Srl_Vahed.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Srl_Sender.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Srl_Sender.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Status.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Ds_Rp.Rp_PishnahadDataTable = New Ds_Rp.Rp_PishnahadDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _rp_MonthPmTableAdapter As Rp_MonthPmTableAdapter
        
        Private _rp_SummaryExtraWorkFanavaranTableAdapter As Rp_SummaryExtraWorkFanavaranTableAdapter
        
        Private _rp_SummaryStatusstatementExtraWorkTableAdapter As Rp_SummaryStatusstatementExtraWorkTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Rp_MonthPmTableAdapter() As Rp_MonthPmTableAdapter
            Get
                Return Me._rp_MonthPmTableAdapter
            End Get
            Set
                Me._rp_MonthPmTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Rp_SummaryExtraWorkFanavaranTableAdapter() As Rp_SummaryExtraWorkFanavaranTableAdapter
            Get
                Return Me._rp_SummaryExtraWorkFanavaranTableAdapter
            End Get
            Set
                Me._rp_SummaryExtraWorkFanavaranTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Rp_SummaryStatusstatementExtraWorkTableAdapter() As Rp_SummaryStatusstatementExtraWorkTableAdapter
            Get
                Return Me._rp_SummaryStatusstatementExtraWorkTableAdapter
            End Get
            Set
                Me._rp_SummaryStatusstatementExtraWorkTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._rp_MonthPmTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._rp_MonthPmTableAdapter.Connection) Is Nothing)) Then
                    Return Me._rp_MonthPmTableAdapter.Connection
                End If
                If ((Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter.Connection) Is Nothing)) Then
                    Return Me._rp_SummaryExtraWorkFanavaranTableAdapter.Connection
                End If
                If ((Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Connection) Is Nothing)) Then
                    Return Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._rp_MonthPmTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As Ds_Rp, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Rp_SummaryStatusstatementExtraWork.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Rp_SummaryExtraWorkFanavaran.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._rp_SummaryExtraWorkFanavaranTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._rp_MonthPmTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Rp_MonthPm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._rp_MonthPmTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As Ds_Rp, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Rp_SummaryStatusstatementExtraWork.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Rp_SummaryExtraWorkFanavaran.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._rp_SummaryExtraWorkFanavaranTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._rp_MonthPmTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Rp_MonthPm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._rp_MonthPmTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As Ds_Rp, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._rp_MonthPmTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Rp_MonthPm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._rp_MonthPmTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Rp_SummaryExtraWorkFanavaran.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._rp_SummaryExtraWorkFanavaranTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Rp_SummaryStatusstatementExtraWork.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As Ds_Rp) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._rp_MonthPmTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._rp_MonthPmTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._rp_SummaryExtraWorkFanavaranTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._rp_MonthPmTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._rp_MonthPmTableAdapter, Me._rp_MonthPmTableAdapter.Connection)
                    Me._rp_MonthPmTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._rp_MonthPmTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._rp_MonthPmTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._rp_MonthPmTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._rp_MonthPmTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._rp_SummaryExtraWorkFanavaranTableAdapter, Me._rp_SummaryExtraWorkFanavaranTableAdapter.Connection)
                    Me._rp_SummaryExtraWorkFanavaranTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._rp_SummaryExtraWorkFanavaranTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._rp_SummaryExtraWorkFanavaranTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._rp_SummaryExtraWorkFanavaranTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._rp_SummaryExtraWorkFanavaranTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._rp_SummaryStatusstatementExtraWorkTableAdapter, Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Connection)
                    Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._rp_MonthPmTableAdapter) Is Nothing) Then
                    Me._rp_MonthPmTableAdapter.Connection = CType(revertConnections(Me._rp_MonthPmTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._rp_MonthPmTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._rp_SummaryExtraWorkFanavaranTableAdapter) Is Nothing) Then
                    Me._rp_SummaryExtraWorkFanavaranTableAdapter.Connection = CType(revertConnections(Me._rp_SummaryExtraWorkFanavaranTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._rp_SummaryExtraWorkFanavaranTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._rp_SummaryStatusstatementExtraWorkTableAdapter) Is Nothing) Then
                    Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Connection = CType(revertConnections(Me._rp_SummaryStatusstatementExtraWorkTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._rp_SummaryStatusstatementExtraWorkTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
