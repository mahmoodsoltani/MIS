<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMAAwAPcAACFijCRkjSlokDFulDZxlzdymDhzmD12m0N6nkR7n0V8n0d9n06Co1CEpVSGpliJ
        qFiJqWCOrWKQrmSRr2eUsGiUsW6YtHCatXSdt3efuXuiu3yiu3+kvYKnvoOov4Wov4irwYqswoyuxI2u
        xI+wxZKxx5W0yJm3ypq3ypy5y6C8zqS/0KbA0anC0q7F1a/H1bPJ17TK2LjN2rrO27zQ3L3Q3cHT38fX
        4sfY4snY48rZ5M/c5tLf59Pg6Nbi6dfi6tzm7d/o7uHp7+Xt8env8+rw9O7z9u/09vD09/L2+PT3+ff5
        +vn6+/r7/Pv8/P7+/iVljipokC1rkjlzmTx1mj94m0h+oEyBok+Co1GEpWGPrWSRrmWSsGuWsnefuHif
        uXmgun2jvH+kvIKmvoapwImrwY6vxJOyx5Szx5SzyJq3y566zKG9zqfB0arD0qvE1LbL2bfM2bvP3L/R
        3sPU38PU4MTV4MjY4sva5M3c5dDd5tPf6NXh6djj69nk69vl7N3n7eHq8OPr8Ofu8uju8+vx9O/09/P2
        +PX3+fj5+yNjjShnkDBtlEJ6nkZ8n02Bo1OFpVeIqFuLqmiUsHGatnWduHmguYSov4iqwZGxxpe1yajC
        0qvD067F1LLI17TJ2LfM2r7R3cbX4cjY487c5dHe59zm7ODp7+Xs8e3y9fX4+vn7/Pz8/UZ9oEl/oVSG
        p2mUsWyXs22XtHWdt4ClvYWpwJa0yZ25zKW/0KrD06zE06zE1MrZ48ra48zb5M/d5tjj6trl7N7n7u/z
        9vv8/TNvlVOFplqLqXeeuH2ju4irwomswpKyxpOzx5a0yKG8zq7G1bLJ17XK2OLq8OTs8TVwljlzmD53
        m02Co2WSr2mVsnqhupCxxZOyxpa1yJm2yp26zKK9zqvE07XL2MXW4fL1+Pb5+vj6+/3+/iJjjCdmj1KF
        pnGbtYGlvq3F1NDe5urw8+7y9vb4+vz9/WKQrW2YtH6jvI+vxZi2ypu4y83b5QAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh/i1NYWRlIGJ5IEtyYXNpbWlyYSBOZWpjaGV2YSAod3d3LmxvYWRp
        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
</value>
  </data>
</root>